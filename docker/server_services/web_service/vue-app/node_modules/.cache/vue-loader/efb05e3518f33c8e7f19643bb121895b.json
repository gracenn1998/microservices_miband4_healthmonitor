{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/account/ChangePasswordForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/account/ChangePasswordForm.vue","mtime":1607366289745},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBmb3JtOiB7CiAgICAgICAgICAgICAgICBjdXJyZW50UGFzc3dvcmQ6ICcnLAogICAgICAgICAgICAgICAgbmV3UGFzc3dvcmQ6ICcnLAogICAgICAgICAgICAgICAgY29uZmlybU5ld1Bhc3N3b3JkOiAnJwogICAgICAgICAgICB9LAogICAgICAgICAgICBzdWJtaXRTdGF0dXM6ICcnLAogICAgICAgICAgICB1c2VyX2RiX2hvc3Q6IHRoaXMuJGFwaV9ob3N0c1sndXNlcl9kYl9hcGknXSwKICAgICAgICAgICAgdXNlcl9kYl9wb3J0OiB0aGlzLiRhcGlfcG9ydHNbJ3VzZXJfZGJfYXBpJ10KICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBwd1N0YXRlKCkgewogICAgICAgICAgICBpZih0aGlzLmZvcm0ubmV3UGFzc3dvcmQ9PScnKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbAogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0aGlzLmZvcm0ubmV3UGFzc3dvcmQubGVuZ3RoID49IDYKICAgICAgICB9LAogICAgICAgIGNmUHdTdGF0ZSgpIHsKICAgICAgICAgICAgaWYodGhpcy5mb3JtLmNvbmZpcm1OZXdQYXNzd29yZD09JycpIHsKICAgICAgICAgICAgICAgIHJldHVybiBudWxsCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuZm9ybS5jb25maXJtTmV3UGFzc3dvcmQgPT0gdGhpcy5mb3JtLm5ld1Bhc3N3b3JkCiAgICAgICAgfSwKICAgICAgICBpbnZhbGlkUHcoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLmZvcm0ubmV3UGFzc3dvcmQubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdFbnRlciBhdCBsZWFzdCA2IGNoYXJhY3RlcnMuJwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBudWxsCiAgICAgICAgfSwKICAgICAgICBpbnZhbGlkQ2ZQdygpIHsKICAgICAgICAgICAgaWYgKHRoaXMuZm9ybS5jb25maXJtTmV3UGFzc3dvcmQubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdDb25maXJtIHBhc3N3b3JkIG5lZWQgdG8gYmUgc2FtZSBhcyBwYXNzd29yZCcKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gbnVsbAogICAgICAgIH0sCiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgICBhc3luYyB2YWxpZGF0ZVBhc3N3b3JkQXBpQ2FsbChwYXNzd29yZCkgewogICAgICAgICAgICBjb25zdCB1c2VyX2lkID0gdGhpcy4kc2Vzc2lvbi5nZXQoJ3VzZXInKS5pZAogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovLyR7dGhpcy51c2VyX2RiX2hvc3R9OiR7dGhpcy51c2VyX2RiX3BvcnR9L3VzZXJzLyR7dXNlcl9pZH0vdmFsaWRhdGUtcGFzc3dvcmRgLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgICAgICAncGFzc3dvcmQnOiBwYXNzd29yZAogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnIH0sCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpCiAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wyd2YWxpZGF0ZS1yZXN1bHQnXT09J2NvcnJlY3QnKSB7IC8vc2lnbiBpbiBzdWNjZXNzZnVsbHkKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKQogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgYXN5bmMgY2hhbmdlUGFzc3dvcmRBcGlDYWxsKG5ld1Bhc3N3b3JkKSB7CiAgICAgICAgICAgIGNvbnN0IHVzZXJfaWQgPSB0aGlzLiRzZXNzaW9uLmdldCgndXNlcicpLmlkCiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwOi8vJHt0aGlzLnVzZXJfZGJfaG9zdH06JHt0aGlzLnVzZXJfZGJfcG9ydH0vdXNlcnMvJHt1c2VyX2lkfS9jaGFuZ2UtcGFzc3dvcmRgLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgICAgICAncGFzc3dvcmQnOiBuZXdQYXNzd29yZAogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnIH0sCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpCiAgICAgICAgICAgICAgICBpZiAocmVzdWx0WydjaGFuZ2UtcHctcmVzdWx0J109PSdzdWNjZWVkZWQnKSB7IC8vc2lnbiBpbiBzdWNjZXNzZnVsbHkKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKQogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgY2hhbmdlUGFzc3dvcmQoKXsKICAgICAgICAgICAgLy92YWxpZGF0ZSBjdXJyZW50IHB3CiAgICAgICAgICAgIHRoaXMudmFsaWRhdGVQYXNzd29yZEFwaUNhbGwodGhpcy5mb3JtLmN1cnJlbnRQYXNzd29yZCkudGhlbigodmFsaWRhdGVSZXN1bHQpPT57CiAgICAgICAgICAgICAgICBpZih2YWxpZGF0ZVJlc3VsdCkgey8vaWYgY29ycmVjdAogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlUGFzc3dvcmRBcGlDYWxsKHRoaXMuZm9ybS5uZXdQYXNzd29yZCkudGhlbigocmVzdWx0KT0+ewogICAgICAgICAgICAgICAgICAgICAgICBpZihyZXN1bHQpIHsvL2lmIHN1Y2NlZWRlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdWJtaXRTdGF0dXMgPSAnT0snCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLiRlbWl0KCdleGl0LWNoYW5nZS1wdy1tb2RlJykKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnN1Ym1pdFN0YXR1cyA9ICdFUlJPUicKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgICAgdGhpcy5zdWJtaXRTdGF0dXMgPSAnUEVORElORycKICAgICAgICB9CgoKICAgIH0KfQo="},{"version":3,"sources":["ChangePasswordForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"ChangePasswordForm.vue","sourceRoot":"src/components/account","sourcesContent":["<template>\n    <b-card-title class=\"text-center mt-2\" >\n        <div v-if=\"submitStatus === 'OK'\">\n            <b-alert variant=\"success\" show>Changed password successfully</b-alert>\n        </div>\n        <div v-if=\"submitStatus === 'ERROR'\">\n            <b-alert variant=\"danger\" show>Current password is incorrect. Please check again</b-alert>\n        </div>\n        <div v-if=\"submitStatus === 'PENDING'\">\n            <b-alert variant=\"info\" show>Sending request...</b-alert>\n        </div>\n\n        <b-form @submit.prevent=\"updateName\">\n            <b-form-group >\n                <b-form-input\n                    v-model=\"form.currentPassword\"\n                    type=\"password\"\n                    required\n                    placeholder=\"Enter current password\"\n                ></b-form-input>\n            </b-form-group>\n            \n            <b-form-group \n                :invalid-feedback=\"invalidPw\"\n                :state=\"pwState\"\n            >\n                <b-form-input\n                    v-model=\"form.newPassword\"\n                    :state=\"pwState\"\n                    type=\"password\"\n                    required\n                    placeholder=\"Enter new password\"\n                ></b-form-input>\n            </b-form-group>\n            \n            <b-form-group\n                :invalid-feedback=\"invalidCfPw\"\n                :state=\"cfPwState\"  \n            >\n                <b-form-input\n                    v-model=\"form.confirmNewPassword\"\n                    :state=\"cfPwState\"\n                    type=\"password\"\n                    required\n                    placeholder=\"Re-enter new password\"\n                ></b-form-input>\n            </b-form-group>\n            <div>\n              <b-button @click=\"changePassword\" variant=\"outline-success\" class=\"mr-1\">➕</b-button>\n              <b-button @click=\"$emit('exit-change-pw-mode')\" variant=\"outline-danger\">✖️</b-button>\n          </div>\n        </b-form>\n    </b-card-title>\n</template>\n\n<script>\nexport default {\n    data(){\n        return {\n            form: {\n                currentPassword: '',\n                newPassword: '',\n                confirmNewPassword: ''\n            },\n            submitStatus: '',\n            user_db_host: this.$api_hosts['user_db_api'],\n            user_db_port: this.$api_ports['user_db_api']\n        }\n    },\n    computed: {\n        pwState() {\n            if(this.form.newPassword=='') {\n                return null\n            }\n            return this.form.newPassword.length >= 6\n        },\n        cfPwState() {\n            if(this.form.confirmNewPassword=='') {\n                return null\n            }\n            return this.form.confirmNewPassword == this.form.newPassword\n        },\n        invalidPw() {\n            if (this.form.newPassword.length > 0) {\n                return 'Enter at least 6 characters.'\n            }\n            return null\n        },\n        invalidCfPw() {\n            if (this.form.confirmNewPassword.length > 0) {\n                return 'Confirm password need to be same as password'\n            }\n            return null\n        },\n    },\n\n    methods: {\n        async validatePasswordApiCall(password) {\n            const user_id = this.$session.get('user').id\n            try {\n                const response = await fetch(`http://${this.user_db_host}:${this.user_db_port}/users/${user_id}/validate-password`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    'password': password\n                    }),\n                headers: { 'Content-type': 'application/json; charset=UTF-8' },\n                })\n                const result = await response.json()\n                if (result['validate-result']=='correct') { //sign in successfully\n                    return true\n                }\n                return false\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        async changePasswordApiCall(newPassword) {\n            const user_id = this.$session.get('user').id\n            try {\n                const response = await fetch(`http://${this.user_db_host}:${this.user_db_port}/users/${user_id}/change-password`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    'password': newPassword\n                    }),\n                headers: { 'Content-type': 'application/json; charset=UTF-8' },\n                })\n                const result = await response.json()\n                if (result['change-pw-result']=='succeeded') { //sign in successfully\n                    return true\n                }\n                return false\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        changePassword(){\n            //validate current pw\n            this.validatePasswordApiCall(this.form.currentPassword).then((validateResult)=>{\n                if(validateResult) {//if correct\n                    this.changePasswordApiCall(this.form.newPassword).then((result)=>{\n                        if(result) {//if succeeded\n                            this.submitStatus = 'OK'\n                            // this.$emit('exit-change-pw-mode')\n                        }\n                    })\n                }\n                else {\n                    this.submitStatus = 'ERROR'\n                }\n            })\n            this.submitStatus = 'PENDING'\n        }\n\n\n    }\n}\n</script>"]}]}