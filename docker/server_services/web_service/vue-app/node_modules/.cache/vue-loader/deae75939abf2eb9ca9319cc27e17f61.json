{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/Data.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/Data.vue","mtime":1608331295782},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIG1pYmFuZF9jb25uIGZyb20gJ0AvYXBpX2NhbGxzL01pYmFuZENvbm5lY3Rpb24uanMnCmltcG9ydCAqIGFzIG1pYmFuZF9kYiBmcm9tICdAL2FwaV9jYWxscy9NaWJhbmREYi5qcycKCmltcG9ydCBHZW5lcmFsRGF0YSBmcm9tICdAL2NvbXBvbmVudHMvZGF0YS9HZW5lcmFsRGF0YScKaW1wb3J0IERhdGFUeXBlIGZyb20gJ0AvY29tcG9uZW50cy9kYXRhL0RhdGFUeXBlJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEdlbmVyYWxEYXRhLAogICAgRGF0YVR5cGUKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBocl9rZXk6IGZhbHNlLAogICAgICBjb25uZWN0U3RhdHVzOiAnJywKICAgICAgZ2RrZXk6IGZhbHNlLAogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIC8vZ2V0IGRhdGEgaWYgbm90IHN0b3JlZCBpbiBzZXNzaW9uIHlldAogICAgaWYodGhpcy4kc2Vzc2lvbi5nZXQoJ21pYmFuZCcpPT11bmRlZmluZWQpIHsKICAgICAgY29uc3QgdXNlcmlkID0gdGhpcy4kc2Vzc2lvbi5nZXQoJ3VzZXInKS5pZAoKICAgICAgbWliYW5kX2RiLmdldFVzZXJCYW5kSW5mbyh1c2VyaWQpLnRoZW4oKGJhbmRpbmZvKT0+ewogICAgICAgIGlmKGJhbmRpbmZvKXsKICAgICAgICAgIHRoaXMuJHNlc3Npb24uc2V0KCdtaWJhbmQnLCBiYW5kaW5mbykKICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZS1saXN0LWRpc3BsYXknKQogICAgICAgIH0KICAgICAgfSkKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBhc3luYyBnZXRCYW5kSW5mbygpIHsKICAgICAgY29uc3QgdXNlcmlkID0gdGhpcy4kc2Vzc2lvbi5nZXQoJ3VzZXInKS5pZAogICAgICBjb25zdCBwYXJhbXMgPSAndXNlcl9pZD0nK3VzZXJpZAogICAgICB0cnkgewogICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovLyR7dGhpcy5taWJhbmRfZGJfaG9zdH06JHt0aGlzLm1pYmFuZF9kYl9wb3J0fS9iYW5kcy9maW5kLWJ5LXVzZXJpZD8ke3BhcmFtc31gKQogICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpCiAgICAgICAgICBpZihyZXN1bHRbJ2dldC1iYW5kLXJlc3VsdCddPT0nc3VjY2VlZGVkJykgewogICAgICAgICAgICByZXR1cm4gcmVzdWx0WydiYW5kLWluZm8nXQogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAvLyBkbyBzb21ldGhpbmcgd2l0aCBgZXJyb3JgCiAgICAgIH0KICAgIH0sCgoKICAgIHJlY29ubmVjdCgpIHsKICAgICAgdmFyIG1pYmFuZCA9IHRoaXMuJHNlc3Npb24uZ2V0KCdtaWJhbmQnKQogICAgICBtaWJhbmRfY29ubi5kaXNjb25uZWN0QXBpQ2FsbCgpLnRoZW4oCiAgICAgICAgbWliYW5kX2Nvbm4uY29ubmVjdEFwaUNhbGwobWliYW5kLm1hY19hZGRyZXNzLCBtaWJhbmQuYXV0aF9rZXkpLnRoZW4oKHJlc3VsdCk9PnsKICAgICAgICAgIGlmKHJlc3VsdCkgewogICAgICAgICAgICB0aGlzLmNvbm5lY3RTdGF0dXM9J09LJwogICAgICAgICAgICB0aGlzLmdka2V5ID0gIXRoaXMuZ2RrZXkKICAgICAgICAgIH0KICAgICAgICAgIGVsc2UgewogICAgICAgICAgICB0aGlzLmNvbm5lY3RTdGF0dXM9J0VSUk9SJwogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICkKICAgICAgdGhpcy5jb25uZWN0U3RhdHVzPSdQRU5ESU5HJwogICAgfQoKICB9Cn0K"},{"version":3,"sources":["Data.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Data.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"w-50 mx-auto mt-3\">\n        <b-card no-body >\n          <b-button @click=\"reconnect\" variant=\"primary\">Reconnect</b-button>\n          <div v-if=\"connectStatus === 'ERROR'\">\n            <b-alert variant=\"danger\" show>Error happened while connecting. Please try again or refresh your Bluetooth connection</b-alert>\n          </div>\n          <div v-if=\"connectStatus === 'PENDING'\">\n            <b-alert variant=\"info\" show>Connecting...</b-alert>\n          </div>\n          <b-tabs card>\n            <b-tab title=\"General Information\" active lazy> \n              <GeneralData :key='gdkey'/>\n            </b-tab>\n            <b-tab title=\"Step Counts\" lazy>\n              <DataType :type=\"'steps'\" />\n            </b-tab>\n            <b-tab title=\"Heart Rate\" lazy>\n              <DataType :type=\"'hr'\" />\n            </b-tab>\n        </b-tabs>\n      </b-card>\n    </div>\n</template>\n\n<script>\nimport * as miband_conn from '@/api_calls/MibandConnection.js'\nimport * as miband_db from '@/api_calls/MibandDb.js'\n\nimport GeneralData from '@/components/data/GeneralData'\nimport DataType from '@/components/data/DataType'\n\nexport default {\n  components: {\n    GeneralData,\n    DataType\n  },\n  data() {\n    return {\n      hr_key: false,\n      connectStatus: '',\n      gdkey: false,\n    }\n  },\n  created() {\n    //get data if not stored in session yet\n    if(this.$session.get('miband')==undefined) {\n      const userid = this.$session.get('user').id\n\n      miband_db.getUserBandInfo(userid).then((bandinfo)=>{\n        if(bandinfo){\n          this.$session.set('miband', bandinfo)\n          this.$emit('update-list-display')\n        }\n      })\n    }\n  },\n\n  methods: {\n    async getBandInfo() {\n      const userid = this.$session.get('user').id\n      const params = 'user_id='+userid\n      try {\n          const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands/find-by-userid?${params}`)\n          const result = await response.json()\n          if(result['get-band-result']=='succeeded') {\n            return result['band-info']\n          }\n          return false\n      } catch (error) {\n          // do something with `error`\n      }\n    },\n\n\n    reconnect() {\n      var miband = this.$session.get('miband')\n      miband_conn.disconnectApiCall().then(\n        miband_conn.connectApiCall(miband.mac_address, miband.auth_key).then((result)=>{\n          if(result) {\n            this.connectStatus='OK'\n            this.gdkey = !this.gdkey\n          }\n          else {\n            this.connectStatus='ERROR'\n          }\n        })\n      )\n      this.connectStatus='PENDING'\n    }\n\n  }\n}\n</script>\n"]}]}