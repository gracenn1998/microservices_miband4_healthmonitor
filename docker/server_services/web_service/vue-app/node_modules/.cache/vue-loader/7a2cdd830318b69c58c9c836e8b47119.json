{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/Data.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/Data.vue","mtime":1607282492945},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBHZW5lcmFsRGF0YSBmcm9tICdAL2NvbXBvbmVudHMvZGF0YS9HZW5lcmFsRGF0YScKaW1wb3J0IERhdGFUeXBlIGZyb20gJ0AvY29tcG9uZW50cy9kYXRhL0RhdGFUeXBlJwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgR2VuZXJhbERhdGEsCiAgICBEYXRhVHlwZQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1pYmFuZDogdGhpcy4kc2Vzc2lvbi5nZXQoJ21pYmFuZCcpLAogICAgICBocl9rZXk6IGZhbHNlLAogICAgICBjb25uZWN0U3RhdHVzOiAnJywKICAgICAgZ2RrZXk6IGZhbHNlLAogICAgICBtaWJhbmRfZGJfaG9zdDogdGhpcy4kYXBpX2hvc3RzWydtaWJhbmRfZGJfYXBpJ10sCiAgICAgIG1pYmFuZF9kYl9wb3J0OiB0aGlzLiRhcGlfcG9ydHNbJ21pYmFuZF9kYl9hcGknXSwKICAgICAgbWliYW5kX2hvc3Q6IHRoaXMuJGFwaV9ob3N0c1snbWliYW5kX2FwaSddLAogICAgICBtaWJhbmRfcG9ydDogdGhpcy4kYXBpX3BvcnRzWydtaWJhbmRfYXBpJ10KICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB2YXIgbWliYW5kID0gdGhpcy5taWJhbmQKICAgIGlmKG1pYmFuZD09dW5kZWZpbmVkKSB7CiAgICAgIHRoaXMuZ2V0QmFuZEluZm8oKS50aGVuKChiYW5kaW5mbyk9PnsKICAgICAgICB0aGlzLiRzZXNzaW9uLnNldCgnbWliYW5kJywgYmFuZGluZm8pCiAgICAgIH0pCiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgYXN5bmMgZ2V0QmFuZEluZm8oKSB7CiAgICAgIGNvbnN0IHVzZXJpZCA9IHRoaXMuJHNlc3Npb24uZ2V0KCd1c2VyJykuaWQKICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly8ke3RoaXMubWliYW5kX2RiX2hvc3R9OiR7dGhpcy5taWJhbmRfZGJfcG9ydH0vZ2V0YmFuZGJ5dXNlci8ke3VzZXJpZH1gKQogICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpCiAgICAgICAgICByZXR1cm4gcmVzdWx0CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAvLyBkbyBzb21ldGhpbmcgd2l0aCBgZXJyb3JgCiAgICAgIH0KICAgIH0sCgogICAgYXN5bmMgZGlzY29ubmVjdEFwaUNhbGwoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwOi8vJHt0aGlzLm1pYmFuZF9ob3N0fToke3RoaXMubWliYW5kX3BvcnR9L2JhbmQvZGlzY29ubmVjdGApCiAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCkKICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCkKICAgICAgICAgIHJldHVybiByZXN1bHQKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIC8vIGRvIHNvbWV0aGluZyB3aXRoIGBlcnJvcmAKICAgICAgfQogICAgfSwKCiAgICBhc3luYyBjb25uZWN0QXBpQ2FsbChtYWNfYWRkLCBhdXRoX2tleSkgewogICAgICB0cnkgewogICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovLyR7dGhpcy5taWJhbmRfaG9zdH06JHt0aGlzLm1pYmFuZF9wb3J0fS9iYW5kL2Nvbm5lY3RgLCB7CiAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAnbWFjX2FkZCc6IG1hY19hZGQsCiAgICAgICAgICAgICAgJ2F1dGhfa2V5JzogYXV0aF9rZXkKICAgICAgICAgICAgICB9KSwKICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JyB9LAogICAgICAgICAgfSkKICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKQogICAgICAgICAgaWYocmVzdWx0Wydjb25uZWN0LXJlc3VsdCddPT0nc3VjY2VlZGVkJykgewogICAgICAgICAgICByZXR1cm4gcmVzdWx0WydiYW5kLWluZm8nXQogICAgICAgICAgfQogICAgICAgICAgZWxzZSByZXR1cm4gZmFsc2UKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpCiAgICAgIH0KICAgIH0sCgogICAgcmVjb25uZWN0KCkgewogICAgICB2YXIgbWliYW5kID0gdGhpcy5taWJhbmQKICAgICAgdGhpcy5kaXNjb25uZWN0QXBpQ2FsbCgpLnRoZW4oCiAgICAgICAgdGhpcy5jb25uZWN0QXBpQ2FsbChtaWJhbmQubWFjX2FkZHJlc3MsIG1pYmFuZC5hdXRoX2tleSkudGhlbigocmVzdWx0KT0+ewogICAgICAgICAgaWYocmVzdWx0KSB7CiAgICAgICAgICAgIHRoaXMuY29ubmVjdFN0YXR1cz0nT0snCiAgICAgICAgICAgIHRoaXMuZ2RrZXkgPSAhdGhpcy5nZGtleQogICAgICAgICAgfQogICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHRoaXMuY29ubmVjdFN0YXR1cz0nRVJST1InCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgKQogICAgICB0aGlzLmNvbm5lY3RTdGF0dXM9J1BFTkRJTkcnCiAgICB9CgogIH0KfQo="},{"version":3,"sources":["Data.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Data.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"w-50 mx-auto mt-3\">\n        <b-card no-body >\n          <b-button @click=\"reconnect\" variant=\"primary\">Reconnect</b-button>\n          <div v-if=\"connectStatus === 'ERROR'\">\n            <b-alert variant=\"danger\" show>Error happened while connecting. Please try again or refresh your Bluetooth connection</b-alert>\n          </div>\n          <div v-if=\"connectStatus === 'PENDING'\">\n            <b-alert variant=\"info\" show>Connecting...</b-alert>\n          </div>\n          <b-tabs card>\n            <b-tab title=\"General Information\" active lazy> \n              <GeneralData :key='gdkey'/>\n            </b-tab>\n            <b-tab title=\"Step Counts\" lazy>\n              <DataType :type=\"'steps'\" />\n            </b-tab>\n            <b-tab title=\"Heart Rate\" lazy>\n              <DataType :type=\"'hr'\" />\n            </b-tab>\n        </b-tabs>\n      </b-card>\n    </div>\n</template>\n\n<script>\nimport GeneralData from '@/components/data/GeneralData'\nimport DataType from '@/components/data/DataType'\nexport default {\n  components: {\n    GeneralData,\n    DataType\n  },\n  data() {\n    return {\n      miband: this.$session.get('miband'),\n      hr_key: false,\n      connectStatus: '',\n      gdkey: false,\n      miband_db_host: this.$api_hosts['miband_db_api'],\n      miband_db_port: this.$api_ports['miband_db_api'],\n      miband_host: this.$api_hosts['miband_api'],\n      miband_port: this.$api_ports['miband_api']\n    }\n  },\n  created() {\n    var miband = this.miband\n    if(miband==undefined) {\n      this.getBandInfo().then((bandinfo)=>{\n        this.$session.set('miband', bandinfo)\n      })\n    }\n  },\n\n  methods: {\n    async getBandInfo() {\n      const userid = this.$session.get('user').id\n      try {\n          const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/getbandbyuser/${userid}`)\n          const result = await response.json()\n          return result\n      } catch (error) {\n          // do something with `error`\n      }\n    },\n\n    async disconnectApiCall() {\n      try {\n          const response = await fetch(`http://${this.miband_host}:${this.miband_port}/band/disconnect`)\n          const result = await response.json()\n          console.log(result)\n          return result\n      } catch (error) {\n          // do something with `error`\n      }\n    },\n\n    async connectApiCall(mac_add, auth_key) {\n      try {\n          const response = await fetch(`http://${this.miband_host}:${this.miband_port}/band/connect`, {\n          method: 'POST',\n          body: JSON.stringify({\n              'mac_add': mac_add,\n              'auth_key': auth_key\n              }),\n          headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          })\n          const result = await response.json()\n          if(result['connect-result']=='succeeded') {\n            return result['band-info']\n          }\n          else return false\n      } catch (error) {\n          console.error(error)\n      }\n    },\n\n    reconnect() {\n      var miband = this.miband\n      this.disconnectApiCall().then(\n        this.connectApiCall(miband.mac_address, miband.auth_key).then((result)=>{\n          if(result) {\n            this.connectStatus='OK'\n            this.gdkey = !this.gdkey\n          }\n          else {\n            this.connectStatus='ERROR'\n          }\n        })\n      )\n      this.connectStatus='PENDING'\n    }\n\n  }\n}\n</script>\n"]}]}