{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/data/StepCounts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/data/StepCounts.vue","mtime":1607175226173},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEYXRhQ2hhcnQgZnJvbSAnQC9jb21wb25lbnRzL2RhdGEvRGF0YUNoYXJ0JwoKY29uc3QgbWliYW5kX2RiX2hvc3Q9JzE5Mi4xNjguMTEuMTIyJwpjb25zdCBtaWJhbmRfZGJfcG9ydD0nNTAwMicKCnZhciB0b2RheSA9IG5ldyBEYXRlKCkKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGNvbXBvbmVudHM6IHsgRGF0YUNoYXJ0IH0sCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgYWN0aXZpdHlkYXRhOiB7fSwKICAgICAgICAgICAgd2hvbGVkYXlEYXRhOiB7fSwKICAgICAgICAgICAgaG91ckRhdGE6IHt9LAogICAgICAgICAgICBsYWJlbHM6IFtdLAogICAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgICAgbW9kZTogLTEsCiAgICAgICAgICAgIGRhdGV2YWx1ZTogdG9kYXkuZ2V0RnVsbFllYXIoKSArICctJyArIFN0cmluZyh0b2RheS5nZXRNb250aCgpKzEpICsgJy0nICsgdG9kYXkuZ2V0RGF0ZSgpLAogICAgICAgICAgICBob3VydmFsdWU6IG51bGwsCiAgICAgICAgICAgIGNoYXJ0a2V5OiBmYWxzZSwKICAgICAgICAgICAgZ2V0RGF0YVN0YXR1czogJycKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpewogICAgICAgIHRoaXMuZ2V0RGF0YWJ5RGF0ZSh0aGlzLmRhdGV2YWx1ZSkKICAgICAgICB0aGlzLmdldFN0ZXBzRGF0YSgpCiAgICAgICAgLy8gdGhpcy5jcmVhdGVDaGFydERhdGEoKQogICAgICAgIC8vIHRoaXMuY2hhcnRrZXkgPSAhdGhpcy5jaGFydGtleQogICAgfSwKCiAgICB3YXRjaDogewogICAgICAgIGRhdGV2YWx1ZTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHRoaXMuZ2V0RGF0YWJ5RGF0ZSh0aGlzLmRhdGV2YWx1ZSkKICAgICAgICB9LAogICAgICAgIGdldERhdGFTdGF0dXM6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICBpZih0aGlzLmdldERhdGFTdGF0dXM9PSdPSycpIHsKICAgICAgICAgICAgICAgIHRoaXMuZ2V0U3RlcHNEYXRhKCkKICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlQ2hhcnREYXRhKCkgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBkYXRhOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgdGhpcy5jaGFydGtleSA9ICF0aGlzLmNoYXJ0a2V5CiAgICAgICAgfSwKICAgIH0sCgogICAgbWV0aG9kczogewogICAgICAgIGdldFN0ZXBzRGF0YSgpIHsKICAgICAgICAgICAgdmFyIGxvZ3MgPSB0aGlzLmFjdGl2aXR5ZGF0YQogICAgICAgICAgICB2YXIgaG91ckRhdGEgPSB7fQoKICAgICAgICAgICAgZm9yKHZhciBpIGluIGxvZ3MpIHsKICAgICAgICAgICAgICAgIHZhciB0aW1lc3RhbXAgPSBsb2dzW2ldLnRpbWVzdGFtcAogICAgICAgICAgICAgICAgdmFyIHRtcCA9IG5ldyBEYXRlKHRpbWVzdGFtcCkKICAgICAgICAgICAgICAgIHZhciBob3VyID0gdG1wLmdldEhvdXJzKCkKICAgICAgICAgICAgICAgIHZhciBtaW51dGUgPSB0bXAuZ2V0TWludXRlcygpCiAgICAgICAgICAgICAgICAvLyBkYXRhT2ZIb3VyWyJhc2QiXSA9ICJhc2QiCiAgICAgICAgICAgICAgICBpZihob3VyRGF0YVtTdHJpbmcoaG91cildPT11bmRlZmluZWQpewogICAgICAgICAgICAgICAgICAgIGhvdXJEYXRhW1N0cmluZyhob3VyKV0gPSB7fQogICAgICAgICAgICAgICAgICAgIGhvdXJEYXRhW1N0cmluZyhob3VyKV1bJ3N1bSddID0gMAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdmFyIHN0ZXBzID0gbG9nc1tpXS5zdGVwcwogICAgICAgICAgICAgICAgaG91ckRhdGFbU3RyaW5nKGhvdXIpXVtTdHJpbmcobWludXRlKV0gPSBzdGVwcwogICAgICAgICAgICAgICAgaG91ckRhdGFbU3RyaW5nKGhvdXIpXVsnc3VtJ10rPXN0ZXBzCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHZhciB3aG9sZWRheURhdGEgPSB7fQogICAgICAgICAgICBmb3IodmFyIGg9MDsgaDwyNDsgaCsrKXsKICAgICAgICAgICAgICAgIGlmKGhvdXJEYXRhW2hdIT11bmRlZmluZWQpCiAgICAgICAgICAgICAgICAgICAgd2hvbGVkYXlEYXRhW2hdID0gaG91ckRhdGFbaF1bJ3N1bSddCiAgICAgICAgICAgICAgICBlbHNlICB3aG9sZWRheURhdGFbaF0gPSB1bmRlZmluZWQKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLndob2xlZGF5RGF0YSA9IHdob2xlZGF5RGF0YQogICAgICAgICAgICB0aGlzLmhvdXJEYXRhID0gaG91ckRhdGEKICAgICAgICB9LAoKICAgICAgICBjcmVhdGVDaGFydERhdGEobW9kZSkgewogICAgICAgICAgICB0aGlzLmxhYmVscyA9IFtdCiAgICAgICAgICAgIHRoaXMuZGF0YSA9IFtdCiAgICAgICAgICAgIHZhciBoCiAgICAgICAgICAgIGlmKG1vZGU9PW51bGwpIHsKICAgICAgICAgICAgICAgIGZvcihoPTA7IGg8MjQ7IGgrKykgewogICAgICAgICAgICAgICAgICAgIHRoaXMubGFiZWxzLnB1c2goU3RyaW5nKGgpKyc6MDAnKQogICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5wdXNoKHRoaXMud2hvbGVkYXlEYXRhW2hdKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgaCA9IG1vZGUKICAgICAgICAgICAgICAgIHZhciBtaW51dGUKICAgICAgICAgICAgICAgIGZvcih2YXIgbT0wOyBtPDYwOyBtKyspIHsKICAgICAgICAgICAgICAgICAgICBpZiAoU3RyaW5nKG0pLmxlbmd0aDwyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZSA9ICcwJytTdHJpbmcobSkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSBtaW51dGUgPSBtCiAgICAgICAgICAgICAgICAgICAgdGhpcy5sYWJlbHMucHVzaChTdHJpbmcoaCkrJzonK1N0cmluZyhtaW51dGUpKQogICAgICAgICAgICAgICAgICAgIGlmKHRoaXMuaG91ckRhdGFbaF0hPXVuZGVmaW5lZCl7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdGVwcyA9IHRoaXMuaG91ckRhdGFbaF1bbV0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhLnB1c2goc3RlcHMpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICB9LAoKICAgICAgICBhc3luYyBnZXREYXRhQnlUaW1lQXBpQ2FsbChzdGFydCwgZW5kKSB7CiAgICAgICAgICAgIGNvbnN0IGJhbmRpZCA9IHRoaXMuJHNlc3Npb24uZ2V0KCdtaWJhbmQnKS5pZAogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovLyR7bWliYW5kX2RiX2hvc3R9OiR7bWliYW5kX2RiX3BvcnR9L2dldGxvZ3NieXRpbWUvJHtiYW5kaWR9YCwgewogICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAgICAgJ3N0YXJ0Jzogc3RhcnQsCiAgICAgICAgICAgICAgICAgICAgJ2VuZCc6IGVuZAogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnIH0sCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCkKICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnZ2V0LWxvZ3MtcmVzdWx0J109PT0nc3VjY2VlZGVkJykKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Wydsb2dzJ10KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICAgICAgLy8gZG8gc29tZXRoaW5nIHdpdGggYGVycm9yYAogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgZ2V0RGF0YWJ5RGF0ZShpbnB1dGRhdGVzdHIpIHsKICAgICAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShpbnB1dGRhdGVzdHIpCiAgICAgICAgICAgIHZhciBkYXksIG1vbnRoLCB5ZWFyLCBkYXRlc3RyLCBzdGFydHN0ciwgZW5kc3RyCiAgICAgICAgICAgIGRheSA9IGRhdGUuZ2V0RGF0ZSgpCiAgICAgICAgICAgIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpKzEKICAgICAgICAgICAgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKQogICAgICAgICAgICBkYXRlc3RyID0gZGF5ICsgJy4nICsgbW9udGggKyAnLicgKyB5ZWFyCiAgICAgICAgICAgIHN0YXJ0c3RyID0gZGF0ZXN0ciArICcgLSAwOjAwJwogICAgICAgICAgICBlbmRzdHIgPSBkYXRlc3RyICsgJyAtIDIzOjU5JwogICAgICAgICAgICB0aGlzLmdldERhdGFCeVRpbWVBcGlDYWxsKHN0YXJ0c3RyLCBlbmRzdHIpLnRoZW4oKHJlc3VsdCk9PnsKICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZpdHlkYXRhICA9IHJlc3VsdCAKICAgICAgICAgICAgICAgIHRoaXMuZ2V0RGF0YVN0YXR1cyA9ICJPSyIKICAgICAgICAgICAgfSkKICAgICAgICAgICAgdGhpcy5nZXREYXRhU3RhdHVzID0gIlBFTkRJTkciCgogICAgICAgIH0sCgogICAgICAgIHJlbW92ZUhvdXJSYW5nZSgpewogICAgICAgICAgICB0aGlzLmhvdXJ2YWx1ZSA9IG51bGwKICAgICAgICAgICAgdGhpcy5jcmVhdGVDaGFydERhdGEoKQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["StepCounts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"StepCounts.vue","sourceRoot":"src/components/data","sourcesContent":["<template>\n    <div>\n        <div>\n            <b-form inline class=\"d-flex justify-content-between\">\n                <b-form-datepicker id=\"example-datepicker\" v-model=\"datevalue\" class=\"mb-2 w-50\"></b-form-datepicker>\n                \n                <div>\n                    Hour range:\n                    <b-form-spinbutton inline wrap min=\"0\" max=\"23\" v-model=\"hourvalue\"></b-form-spinbutton>\n                    <b-button class=\"ml-1\" variant=\"success\" @click=\"createChartData(hourvalue)\">v</b-button>\n                    <b-button class=\"ml-1\" @click=\"removeHourRange\">x</b-button>\n                </div>\n                \n            </b-form>\n        </div>\n\n        <div v-if=\"getDataStatus === 'PENDING'\">\n            <b-alert variant=\"info\" show>Getting data...</b-alert>\n        </div>\n        \n        <b-skeleton-wrapper :loading=\"getDataStatus === 'PENDING'\">\n            <template #loading>\n                <b-card>\n                <b-skeleton width=\"85%\"></b-skeleton>\n                <b-skeleton width=\"55%\"></b-skeleton>\n                <b-skeleton width=\"70%\"></b-skeleton>\n                </b-card>\n            </template>\n            <div class=\"h-50\">\n                <DataChart :key=\"chartkey\" :data=\"data\" :labels=\"labels\" :type=\"'steps'\"/>\n            </div>\n        </b-skeleton-wrapper>\n    </div>\n</template>\n\n\n<script>\nimport DataChart from '@/components/data/DataChart'\n\nconst miband_db_host='192.168.11.122'\nconst miband_db_port='5002'\n\nvar today = new Date()\n\nexport default {\n    components: { DataChart },\n    data(){\n        return {\n            activitydata: {},\n            wholedayData: {},\n            hourData: {},\n            labels: [],\n            data: [],\n            mode: -1,\n            datevalue: today.getFullYear() + '-' + String(today.getMonth()+1) + '-' + today.getDate(),\n            hourvalue: null,\n            chartkey: false,\n            getDataStatus: ''\n        }\n    },\n    mounted(){\n        this.getDatabyDate(this.datevalue)\n        this.getStepsData()\n        // this.createChartData()\n        // this.chartkey = !this.chartkey\n    },\n\n    watch: {\n        datevalue: function() {\n            this.getDatabyDate(this.datevalue)\n        },\n        getDataStatus: function() {\n            if(this.getDataStatus=='OK') {\n                this.getStepsData()\n                this.createChartData()                    \n            }\n        },\n        data: function() {\n            this.chartkey = !this.chartkey\n        },\n    },\n\n    methods: {\n        getStepsData() {\n            var logs = this.activitydata\n            var hourData = {}\n\n            for(var i in logs) {\n                var timestamp = logs[i].timestamp\n                var tmp = new Date(timestamp)\n                var hour = tmp.getHours()\n                var minute = tmp.getMinutes()\n                // dataOfHour[\"asd\"] = \"asd\"\n                if(hourData[String(hour)]==undefined){\n                    hourData[String(hour)] = {}\n                    hourData[String(hour)]['sum'] = 0\n                }\n                var steps = logs[i].steps\n                hourData[String(hour)][String(minute)] = steps\n                hourData[String(hour)]['sum']+=steps\n            }\n\n            var wholedayData = {}\n            for(var h=0; h<24; h++){\n                if(hourData[h]!=undefined)\n                    wholedayData[h] = hourData[h]['sum']\n                else  wholedayData[h] = undefined\n            }\n            this.wholedayData = wholedayData\n            this.hourData = hourData\n        },\n\n        createChartData(mode) {\n            this.labels = []\n            this.data = []\n            var h\n            if(mode==null) {\n                for(h=0; h<24; h++) {\n                    this.labels.push(String(h)+':00')\n                    this.data.push(this.wholedayData[h])\n                }\n            }\n            else {\n                h = mode\n                var minute\n                for(var m=0; m<60; m++) {\n                    if (String(m).length<2) {\n                        minute = '0'+String(m)\n                    }\n                    else minute = m\n                    this.labels.push(String(h)+':'+String(minute))\n                    if(this.hourData[h]!=undefined){\n                        var steps = this.hourData[h][m]\n                        this.data.push(steps)\n                    }\n                        \n                }\n            }\n\n        },\n\n        async getDataByTimeApiCall(start, end) {\n            const bandid = this.$session.get('miband').id\n            try {\n                const response = await fetch(`http://${miband_db_host}:${miband_db_port}/getlogsbytime/${bandid}`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    'start': start,\n                    'end': end\n                    }),\n                headers: { 'Content-type': 'application/json; charset=UTF-8' },\n                })\n                \n                const result = await response.json()\n                if(result['get-logs-result']==='succeeded')\n                    return result['logs']\n                return false\n            } catch (error) {\n                // do something with `error`\n            }\n        },\n\n        getDatabyDate(inputdatestr) {\n            var date = new Date(inputdatestr)\n            var day, month, year, datestr, startstr, endstr\n            day = date.getDate()\n            month = date.getMonth()+1\n            year = date.getFullYear()\n            datestr = day + '.' + month + '.' + year\n            startstr = datestr + ' - 0:00'\n            endstr = datestr + ' - 23:59'\n            this.getDataByTimeApiCall(startstr, endstr).then((result)=>{\n                this.activitydata  = result \n                this.getDataStatus = \"OK\"\n            })\n            this.getDataStatus = \"PENDING\"\n\n        },\n\n        removeHourRange(){\n            this.hourvalue = null\n            this.createChartData()\n        }\n    }\n}\n</script>"]}]}