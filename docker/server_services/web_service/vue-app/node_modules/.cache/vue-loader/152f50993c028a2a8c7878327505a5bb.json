{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/data/StepCounts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/data/StepCounts.vue","mtime":1607182639598},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEYXRhQ2hhcnQgZnJvbSAnQC9jb21wb25lbnRzL2RhdGEvRGF0YUNoYXJ0JwoKdmFyIHRvZGF5ID0gbmV3IERhdGUoKQoKZXhwb3J0IGRlZmF1bHQgewogICAgY29tcG9uZW50czogeyBEYXRhQ2hhcnQgfSwKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBhY3Rpdml0eWRhdGE6IHt9LAogICAgICAgICAgICB3aG9sZWRheURhdGE6IHt9LAogICAgICAgICAgICBob3VyRGF0YToge30sCiAgICAgICAgICAgIGxhYmVsczogW10sCiAgICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgICBtb2RlOiAtMSwKICAgICAgICAgICAgZGF0ZXZhbHVlOiB0b2RheS5nZXRGdWxsWWVhcigpICsgJy0nICsgU3RyaW5nKHRvZGF5LmdldE1vbnRoKCkrMSkgKyAnLScgKyB0b2RheS5nZXREYXRlKCksCiAgICAgICAgICAgIGhvdXJ2YWx1ZTogbnVsbCwKICAgICAgICAgICAgY2hhcnRrZXk6IGZhbHNlLAogICAgICAgICAgICBnZXREYXRhU3RhdHVzOiAnJywKICAgICAgICAgICAgbWliYW5kX2RiX2hvc3Q6IHRoaXMuJGFwaV9ob3N0c1snbWliYW5kX2RiX2FwaSddLAogICAgICAgICAgICBtaWJhbmRfZGJfcG9ydDogdGhpcy4kYXBpX3BvcnRzWydtaWJhbmRfZGJfYXBpJ10sCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKXsKICAgICAgICB0aGlzLmdldERhdGFieURhdGUodGhpcy5kYXRldmFsdWUpCiAgICAgICAgdGhpcy5nZXRTdGVwc0RhdGEoKQogICAgICAgIC8vIHRoaXMuY3JlYXRlQ2hhcnREYXRhKCkKICAgICAgICAvLyB0aGlzLmNoYXJ0a2V5ID0gIXRoaXMuY2hhcnRrZXkKICAgIH0sCgogICAgd2F0Y2g6IHsKICAgICAgICBkYXRldmFsdWU6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICB0aGlzLmdldERhdGFieURhdGUodGhpcy5kYXRldmFsdWUpCiAgICAgICAgfSwKICAgICAgICBnZXREYXRhU3RhdHVzOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgaWYodGhpcy5nZXREYXRhU3RhdHVzPT0nT0snKSB7CiAgICAgICAgICAgICAgICB0aGlzLmdldFN0ZXBzRGF0YSgpCiAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZUNoYXJ0RGF0YSgpICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHRoaXMuY2hhcnRrZXkgPSAhdGhpcy5jaGFydGtleQogICAgICAgIH0sCiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgICBnZXRTdGVwc0RhdGEoKSB7CiAgICAgICAgICAgIHZhciBsb2dzID0gdGhpcy5hY3Rpdml0eWRhdGEKICAgICAgICAgICAgdmFyIGhvdXJEYXRhID0ge30KCiAgICAgICAgICAgIGZvcih2YXIgaSBpbiBsb2dzKSB7CiAgICAgICAgICAgICAgICB2YXIgdGltZXN0YW1wID0gbG9nc1tpXS50aW1lc3RhbXAKICAgICAgICAgICAgICAgIHZhciB0bXAgPSBuZXcgRGF0ZSh0aW1lc3RhbXApCiAgICAgICAgICAgICAgICB2YXIgaG91ciA9IHRtcC5nZXRIb3VycygpCiAgICAgICAgICAgICAgICB2YXIgbWludXRlID0gdG1wLmdldE1pbnV0ZXMoKQogICAgICAgICAgICAgICAgLy8gZGF0YU9mSG91clsiYXNkIl0gPSAiYXNkIgogICAgICAgICAgICAgICAgaWYoaG91ckRhdGFbU3RyaW5nKGhvdXIpXT09dW5kZWZpbmVkKXsKICAgICAgICAgICAgICAgICAgICBob3VyRGF0YVtTdHJpbmcoaG91cildID0ge30KICAgICAgICAgICAgICAgICAgICBob3VyRGF0YVtTdHJpbmcoaG91cildWydzdW0nXSA9IDAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHZhciBzdGVwcyA9IGxvZ3NbaV0uc3RlcHMKICAgICAgICAgICAgICAgIGhvdXJEYXRhW1N0cmluZyhob3VyKV1bU3RyaW5nKG1pbnV0ZSldID0gc3RlcHMKICAgICAgICAgICAgICAgIGhvdXJEYXRhW1N0cmluZyhob3VyKV1bJ3N1bSddKz1zdGVwcwogICAgICAgICAgICB9CgogICAgICAgICAgICB2YXIgd2hvbGVkYXlEYXRhID0ge30KICAgICAgICAgICAgZm9yKHZhciBoPTA7IGg8MjQ7IGgrKyl7CiAgICAgICAgICAgICAgICBpZihob3VyRGF0YVtoXSE9dW5kZWZpbmVkKQogICAgICAgICAgICAgICAgICAgIHdob2xlZGF5RGF0YVtoXSA9IGhvdXJEYXRhW2hdWydzdW0nXQogICAgICAgICAgICAgICAgZWxzZSAgd2hvbGVkYXlEYXRhW2hdID0gdW5kZWZpbmVkCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy53aG9sZWRheURhdGEgPSB3aG9sZWRheURhdGEKICAgICAgICAgICAgdGhpcy5ob3VyRGF0YSA9IGhvdXJEYXRhCiAgICAgICAgfSwKCiAgICAgICAgY3JlYXRlQ2hhcnREYXRhKG1vZGUpIHsKICAgICAgICAgICAgdGhpcy5sYWJlbHMgPSBbXQogICAgICAgICAgICB0aGlzLmRhdGEgPSBbXQogICAgICAgICAgICB2YXIgaAogICAgICAgICAgICBpZihtb2RlPT1udWxsKSB7CiAgICAgICAgICAgICAgICBmb3IoaD0wOyBoPDI0OyBoKyspIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmxhYmVscy5wdXNoKFN0cmluZyhoKSsnOjAwJykKICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGEucHVzaCh0aGlzLndob2xlZGF5RGF0YVtoXSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIGggPSBtb2RlCiAgICAgICAgICAgICAgICB2YXIgbWludXRlCiAgICAgICAgICAgICAgICBmb3IodmFyIG09MDsgbTw2MDsgbSsrKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKFN0cmluZyhtKS5sZW5ndGg8MikgewogICAgICAgICAgICAgICAgICAgICAgICBtaW51dGUgPSAnMCcrU3RyaW5nKG0pCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgbWludXRlID0gbQogICAgICAgICAgICAgICAgICAgIHRoaXMubGFiZWxzLnB1c2goU3RyaW5nKGgpKyc6JytTdHJpbmcobWludXRlKSkKICAgICAgICAgICAgICAgICAgICBpZih0aGlzLmhvdXJEYXRhW2hdIT11bmRlZmluZWQpewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RlcHMgPSB0aGlzLmhvdXJEYXRhW2hdW21dCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5wdXNoKHN0ZXBzKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgfSwKCiAgICAgICAgYXN5bmMgZ2V0RGF0YUJ5VGltZUFwaUNhbGwoc3RhcnQsIGVuZCkgewogICAgICAgICAgICBjb25zdCBiYW5kaWQgPSB0aGlzLiRzZXNzaW9uLmdldCgnbWliYW5kJykuaWQKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly8ke3RoaXMubWliYW5kX2RiX2hvc3R9OiR7dGhpcy5taWJhbmRfZGJfcG9ydH0vZ2V0bG9nc2J5dGltZS8ke2JhbmRpZH1gLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgICAgICAnc3RhcnQnOiBzdGFydCwKICAgICAgICAgICAgICAgICAgICAnZW5kJzogZW5kCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcgfSwKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKQogICAgICAgICAgICAgICAgaWYocmVzdWx0WydnZXQtbG9ncy1yZXN1bHQnXT09PSdzdWNjZWVkZWQnKQogICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRbJ2xvZ3MnXQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICAvLyBkbyBzb21ldGhpbmcgd2l0aCBgZXJyb3JgCiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBnZXREYXRhYnlEYXRlKGlucHV0ZGF0ZXN0cikgewogICAgICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKGlucHV0ZGF0ZXN0cikKICAgICAgICAgICAgdmFyIGRheSwgbW9udGgsIHllYXIsIGRhdGVzdHIsIHN0YXJ0c3RyLCBlbmRzdHIKICAgICAgICAgICAgZGF5ID0gZGF0ZS5nZXREYXRlKCkKICAgICAgICAgICAgbW9udGggPSBkYXRlLmdldE1vbnRoKCkrMQogICAgICAgICAgICB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpCiAgICAgICAgICAgIGRhdGVzdHIgPSBkYXkgKyAnLicgKyBtb250aCArICcuJyArIHllYXIKICAgICAgICAgICAgc3RhcnRzdHIgPSBkYXRlc3RyICsgJyAtIDA6MDAnCiAgICAgICAgICAgIGVuZHN0ciA9IGRhdGVzdHIgKyAnIC0gMjM6NTknCiAgICAgICAgICAgIHRoaXMuZ2V0RGF0YUJ5VGltZUFwaUNhbGwoc3RhcnRzdHIsIGVuZHN0cikudGhlbigocmVzdWx0KT0+ewogICAgICAgICAgICAgICAgdGhpcy5hY3Rpdml0eWRhdGEgID0gcmVzdWx0IAogICAgICAgICAgICAgICAgdGhpcy5nZXREYXRhU3RhdHVzID0gIk9LIgogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLmdldERhdGFTdGF0dXMgPSAiUEVORElORyIKCiAgICAgICAgfSwKCiAgICAgICAgcmVtb3ZlSG91clJhbmdlKCl7CiAgICAgICAgICAgIHRoaXMuaG91cnZhbHVlID0gbnVsbAogICAgICAgICAgICB0aGlzLmNyZWF0ZUNoYXJ0RGF0YSgpCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["StepCounts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"StepCounts.vue","sourceRoot":"src/components/data","sourcesContent":["<template>\n    <div>\n        <div>\n            <b-form inline class=\"d-flex justify-content-between\">\n                <b-form-datepicker id=\"example-datepicker\" v-model=\"datevalue\" class=\"mb-2 w-50\"></b-form-datepicker>\n                \n                <div>\n                    Hour range:\n                    <b-form-spinbutton inline wrap min=\"0\" max=\"23\" v-model=\"hourvalue\"></b-form-spinbutton>\n                    <b-button class=\"ml-1\" variant=\"success\" @click=\"createChartData(hourvalue)\">v</b-button>\n                    <b-button class=\"ml-1\" @click=\"removeHourRange\">x</b-button>\n                </div>\n                \n            </b-form>\n        </div>\n\n        <div v-if=\"getDataStatus === 'PENDING'\">\n            <b-alert variant=\"info\" show>Getting data...</b-alert>\n        </div>\n        \n        <b-skeleton-wrapper :loading=\"getDataStatus === 'PENDING'\">\n            <template #loading>\n                <b-card>\n                <b-skeleton width=\"85%\"></b-skeleton>\n                <b-skeleton width=\"55%\"></b-skeleton>\n                <b-skeleton width=\"70%\"></b-skeleton>\n                </b-card>\n            </template>\n            <div class=\"h-50\">\n                <DataChart :key=\"chartkey\" :data=\"data\" :labels=\"labels\" :type=\"'steps'\"/>\n            </div>\n        </b-skeleton-wrapper>\n    </div>\n</template>\n\n\n<script>\nimport DataChart from '@/components/data/DataChart'\n\nvar today = new Date()\n\nexport default {\n    components: { DataChart },\n    data(){\n        return {\n            activitydata: {},\n            wholedayData: {},\n            hourData: {},\n            labels: [],\n            data: [],\n            mode: -1,\n            datevalue: today.getFullYear() + '-' + String(today.getMonth()+1) + '-' + today.getDate(),\n            hourvalue: null,\n            chartkey: false,\n            getDataStatus: '',\n            miband_db_host: this.$api_hosts['miband_db_api'],\n            miband_db_port: this.$api_ports['miband_db_api'],\n        }\n    },\n    mounted(){\n        this.getDatabyDate(this.datevalue)\n        this.getStepsData()\n        // this.createChartData()\n        // this.chartkey = !this.chartkey\n    },\n\n    watch: {\n        datevalue: function() {\n            this.getDatabyDate(this.datevalue)\n        },\n        getDataStatus: function() {\n            if(this.getDataStatus=='OK') {\n                this.getStepsData()\n                this.createChartData()                    \n            }\n        },\n        data: function() {\n            this.chartkey = !this.chartkey\n        },\n    },\n\n    methods: {\n        getStepsData() {\n            var logs = this.activitydata\n            var hourData = {}\n\n            for(var i in logs) {\n                var timestamp = logs[i].timestamp\n                var tmp = new Date(timestamp)\n                var hour = tmp.getHours()\n                var minute = tmp.getMinutes()\n                // dataOfHour[\"asd\"] = \"asd\"\n                if(hourData[String(hour)]==undefined){\n                    hourData[String(hour)] = {}\n                    hourData[String(hour)]['sum'] = 0\n                }\n                var steps = logs[i].steps\n                hourData[String(hour)][String(minute)] = steps\n                hourData[String(hour)]['sum']+=steps\n            }\n\n            var wholedayData = {}\n            for(var h=0; h<24; h++){\n                if(hourData[h]!=undefined)\n                    wholedayData[h] = hourData[h]['sum']\n                else  wholedayData[h] = undefined\n            }\n            this.wholedayData = wholedayData\n            this.hourData = hourData\n        },\n\n        createChartData(mode) {\n            this.labels = []\n            this.data = []\n            var h\n            if(mode==null) {\n                for(h=0; h<24; h++) {\n                    this.labels.push(String(h)+':00')\n                    this.data.push(this.wholedayData[h])\n                }\n            }\n            else {\n                h = mode\n                var minute\n                for(var m=0; m<60; m++) {\n                    if (String(m).length<2) {\n                        minute = '0'+String(m)\n                    }\n                    else minute = m\n                    this.labels.push(String(h)+':'+String(minute))\n                    if(this.hourData[h]!=undefined){\n                        var steps = this.hourData[h][m]\n                        this.data.push(steps)\n                    }\n                        \n                }\n            }\n\n        },\n\n        async getDataByTimeApiCall(start, end) {\n            const bandid = this.$session.get('miband').id\n            try {\n                const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/getlogsbytime/${bandid}`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    'start': start,\n                    'end': end\n                    }),\n                headers: { 'Content-type': 'application/json; charset=UTF-8' },\n                })\n                \n                const result = await response.json()\n                if(result['get-logs-result']==='succeeded')\n                    return result['logs']\n                return false\n            } catch (error) {\n                // do something with `error`\n            }\n        },\n\n        getDatabyDate(inputdatestr) {\n            var date = new Date(inputdatestr)\n            var day, month, year, datestr, startstr, endstr\n            day = date.getDate()\n            month = date.getMonth()+1\n            year = date.getFullYear()\n            datestr = day + '.' + month + '.' + year\n            startstr = datestr + ' - 0:00'\n            endstr = datestr + ' - 23:59'\n            this.getDataByTimeApiCall(startstr, endstr).then((result)=>{\n                this.activitydata  = result \n                this.getDataStatus = \"OK\"\n            })\n            this.getDataStatus = \"PENDING\"\n\n        },\n\n        removeHourRange(){\n            this.hourvalue = null\n            this.createChartData()\n        }\n    }\n}\n</script>"]}]}