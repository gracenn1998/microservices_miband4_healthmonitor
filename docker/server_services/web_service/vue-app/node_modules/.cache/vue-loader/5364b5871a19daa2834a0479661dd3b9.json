{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/account/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/account/Profile.vue","mtime":1607175226173},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEZXZpY2VNYW5hZ2VtZW50IGZyb20gJ0AvY29tcG9uZW50cy9EZXZpY2VNYW5hZ2VtZW50JwoKZXhwb3J0IGRlZmF1bHQgewogICAgY29tcG9uZW50czogeyAKICAgICAgICBEZXZpY2VNYW5hZ2VtZW50CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnVzZXIpCiAgICAgICAgdGhpcy5nZW5lcmF0ZUF2dFN0cigpCiAgICAgICAgCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICB1c2VyOiB0aGlzLiRzZXNzaW9uLmdldCgndXNlcicpLAogICAgICAgICAgICBhdmF0YXJTdHI6ICcnLAogICAgICAgICAgICBuYW1lVXBkYXRlTW9kZTogZmFsc2UsCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBlbnRlck5hbWVVcGRhdGVNb2RlKCkgewogICAgICAgICAgICB0aGlzLm5hbWVVcGRhdGVNb2RlID0gdHJ1ZQogICAgICAgIH0sCiAgICAgICAgZXhpdE5hbWVVcGRhdGVNb2RlKCkgewogICAgICAgICAgICB0aGlzLnVzZXIuZnVsbG5hbWU9dGhpcy4kc2Vzc2lvbi5nZXQoJ3VzZXInKS5mdWxsbmFtZQogICAgICAgICAgICB0aGlzLm5hbWVVcGRhdGVNb2RlID0gZmFsc2UKICAgICAgICB9LAoKICAgICAgICBnZW5lcmF0ZUF2dFN0cigpIHsKICAgICAgICAgICAgaWYodGhpcy51c2VyLmZ1bGxuYW1lIT1udWxsKSB7CiAgICAgICAgICAgICAgICB2YXIgc3RyID0gU3RyaW5nKHRoaXMuJHNlc3Npb24uZ2V0KCd1c2VyJykuZnVsbG5hbWUpCiAgICAgICAgICAgICAgICB2YXIgc2VwZXJhdGVOYW1lID0gc3RyLnNwbGl0KCIgIikKICAgICAgICAgICAgICAgIGlmKHNlcGVyYXRlTmFtZS5sZW5ndGg9PTEpewogICAgICAgICAgICAgICAgICAgIHRoaXMuYXZhdGFyU3RyID0gc2VwZXJhdGVOYW1lWzBdWzBdCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMuYXZhdGFyU3RyPXNlcGVyYXRlTmFtZVswXVswXSArIHNlcGVyYXRlTmFtZVtzZXBlcmF0ZU5hbWUubGVuZ3RoLTFdWzBdCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlewogICAgICAgICAgICAgICAgdGhpcy5hdmF0YXJTdHI9JycKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIGFzeW5jIHVwZGF0ZU5hbWVBcGlDYWxsKGVtYWlsLCBuZXdOYW1lKSB7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vMTI3LjAuMC4xOjUwMDAvdXBkYXRldXNlci8nK2VtYWlsLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdQVVQnLAogICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgICAgICdmdWxsbmFtZSc6IG5ld05hbWUsCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcgfSwKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgcmVzcG9uc2UuanNvbigpCiAgICAgICAgICAgICAgICByZXR1cm4gdXNlcgogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcikKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdXBkYXRlTmFtZSgpIHsKICAgICAgICAgICAgLy8gdGhpcy51cGRhdGVOYW1lQXBpQ2FsbCh0aGlzLnVzZXIuZW1haWwsIHRoaXMudXNlci5mdWxsbmFtZSkKICAgICAgICAgICAgdGhpcy51cGRhdGVOYW1lQXBpQ2FsbCh0aGlzLnVzZXIuZW1haWwsIHRoaXMudXNlci5mdWxsbmFtZSkudGhlbigodXNlcik9PnsKICAgICAgICAgICAgICAgIHRoaXMuJHNlc3Npb24uc2V0KCd1c2VyJywgdXNlcikKICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVBdnRTdHIoKQogICAgICAgICAgICAgICAgdGhpcy5leGl0TmFtZVVwZGF0ZU1vZGUoKQogICAgICAgICAgICAgICAgLy8gdGhpcy4kZm9yY2VVcGRhdGUKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgfQp9Cg=="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/components/account","sourcesContent":["<template>\n    <div class=\"w-50 mx-auto mt-3 mb-3\" v-if=\"this.$session.exists()\">\n        <b-card>\n            <template #header>\n                <div class=\"d-flex justify-content-center\">\n                    <b-avatar :text=\"avatarStr\" size=\"6rem\"></b-avatar>\n                </div>\n                <b-card-title v-if=\"user.fullname==null&&nameUpdateMode!=true\" class=\"text-center mt-2\">\n                    <b-button variant=\"outline-primary\" @click=\"enterNameUpdateMode\">\n                        Please tell us your name üìù\n                    </b-button>\n                </b-card-title>\n                <b-card-title v-else-if=\"nameUpdateMode==true\" class=\"text-center mt-2\">\n                    <b-form @submit.prevent=\"updateName\" inline class=\"d-flex justify-content-around\">\n                        <b-form-input class=\"w-75\"\n                        v-model=\"user.fullname\"\n                        placeholder=\"Enter your name\"\n                    ></b-form-input>\n                    <div>\n                        <b-button @click=\"updateName\" variant=\"success\" class=\"mr-1\">OK</b-button>\n                        <b-button @click=\"exitNameUpdateMode\" variant=\"danger\">‚úñÔ∏è</b-button>\n                    </div>\n                    </b-form>\n                </b-card-title>\n                <b-card-title v-else class=\"text-center mt-2\">\n                    {{user.fullname}}\n                    <b-button variant=\"outline-primary\" @click=\"enterNameUpdateMode\">üìù</b-button>\n                </b-card-title>\n                <b-card-sub-title class=\"text-center\">{{user.email}}</b-card-sub-title>\n                <div class=\"d-flex justify-content-center\">\n                    <b-card-text>üèÜ Strike: 4days</b-card-text>\n                </div>\n            </template>\n\n            <device-management />\n\n            <b-card title=\"More\" class=\"mt-1\">\n                <b-button variant=\"outline-primary\" class=\"w-100\">Set goal</b-button>\n            </b-card>\n\n            <b-card title=\"Account\" class=\"mt-1\">\n                <b-button variant=\"outline-primary\" class=\"w-100 mb-1\">Change password</b-button>\n                <b-button variant=\"outline-primary\" class=\"w-100\">Delete account</b-button>\n            </b-card>\n\n        </b-card>\n    </div>\n</template>\n\n\n<script>\nimport DeviceManagement from '@/components/DeviceManagement'\n\nexport default {\n    components: { \n        DeviceManagement\n    },\n    created() {\n        // console.log(this.user)\n        this.generateAvtStr()\n        \n    },\n    data() {\n        return {\n            user: this.$session.get('user'),\n            avatarStr: '',\n            nameUpdateMode: false,\n        }\n    },\n    methods: {\n        enterNameUpdateMode() {\n            this.nameUpdateMode = true\n        },\n        exitNameUpdateMode() {\n            this.user.fullname=this.$session.get('user').fullname\n            this.nameUpdateMode = false\n        },\n\n        generateAvtStr() {\n            if(this.user.fullname!=null) {\n                var str = String(this.$session.get('user').fullname)\n                var seperateName = str.split(\" \")\n                if(seperateName.length==1){\n                    this.avatarStr = seperateName[0][0]\n                } else {\n                    this.avatarStr=seperateName[0][0] + seperateName[seperateName.length-1][0]\n                }\n                \n            }\n            else{\n                this.avatarStr=''\n            }\n        },\n\n        async updateNameApiCall(email, newName) {\n            try {\n                const response = await fetch('http://127.0.0.1:5000/updateuser/'+email, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    'fullname': newName,\n                    }),\n                headers: { 'Content-type': 'application/json; charset=UTF-8' },\n                })\n                const user = await response.json()\n                return user\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        updateName() {\n            // this.updateNameApiCall(this.user.email, this.user.fullname)\n            this.updateNameApiCall(this.user.email, this.user.fullname).then((user)=>{\n                this.$session.set('user', user)\n                this.generateAvtStr()\n                this.exitNameUpdateMode()\n                // this.$forceUpdate\n            })\n        },\n    }\n}\n</script>"]}]}