{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/device/PairDeviceForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/device/PairDeviceForm.vue","mtime":1607343126323},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcHV0ZWQ6IHsKICAgIG1hY2FkZFN0YXRlKCkgewogICAgICB2YXIgcmVnZXggPSAvXigoW0EtRmEtZjAtOV17Mn1bOl0pezV9W0EtRmEtZjAtOV17Mn1bLF0/KSskL2k7CiAgICAgIAogICAgICBpZih0aGlzLm1pYmFuZC5tYWNfYWRkcmVzcz09JycpIHsKICAgICAgICByZXR1cm4gbnVsbAogICAgICB9CiAgICAgIHJldHVybiByZWdleC50ZXN0KHRoaXMubWliYW5kLm1hY19hZGRyZXNzKQogICAgfSwKICAgIGF1dGhrZXlTdGF0ZSgpIHsKICAgICAgaWYodGhpcy5taWJhbmQuYXV0aF9rZXk9PScnKSB7CiAgICAgICAgcmV0dXJuIG51bGwKICAgICAgfQogICAgICByZXR1cm4gdGhpcy5taWJhbmQuYXV0aF9rZXkubGVuZ3RoID09IDMyCiAgICB9LAogICAgaW52YWxpZE1BQ2FkZCgpIHsKICAgICAgaWYgKHRoaXMubWliYW5kLm1hY19hZGRyZXNzLmxlbmd0aCA+PSAxNykgewogICAgICAgIHJldHVybiAgJ1BsZWFzZSBjaGVjayB5b3VyIGZvcm1hdC4gRXhhbXBsZTogYTE6YjI6YzM6ZDQ6ZTU6ZjYnCiAgICAgIH0KICAgICAgcmV0dXJuIG51bGwKICAgIH0sCiAgICBpbnZhbGlkQXV0aGtleSgpIHsKICAgICAgaWYgKHRoaXMubWliYW5kLmF1dGhfa2V5Lmxlbmd0aCA+IDApIHsKICAgICAgICByZXR1cm4gICdBdXRoZW50aWMga2V5IGxlbmd0aCBpcyAzMi4gRXhhbXBsZTogOGZhOWI0MjA3ODYyN2E2NTRkMjJiZWZmOTg1NjU1ZGInCiAgICAgIH0KICAgICAgcmV0dXJuIG51bGwKICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWliYW5kOiB7CiAgICAgICAgICBtYWNfYWRkcmVzczogJ0UzOjA3OjcyOjI2OkQ0OjZCJywKICAgICAgICAgIGF1dGhfa2V5OiAnMmYyMGJhNDRmZGNmNTRjYTBjMmMzN2NhZDFmODU0ODcnCiAgICAgIH0sCiAgICAgIHBhaXJpbmdTdGF0dXM6IG51bGwsCiAgICAgIG1pYmFuZF9kYl9ob3N0OiB0aGlzLiRhcGlfaG9zdHNbJ21pYmFuZF9kYl9hcGknXSwKICAgICAgbWliYW5kX2RiX3BvcnQ6IHRoaXMuJGFwaV9wb3J0c1snbWliYW5kX2RiX2FwaSddLAogICAgICBtaWJhbmRfaG9zdDogdGhpcy4kYXBpX2hvc3RzWydtaWJhbmRfYXBpJ10sCiAgICAgIG1pYmFuZF9wb3J0OiB0aGlzLiRhcGlfcG9ydHNbJ21pYmFuZF9hcGknXQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgY29ubmVjdEJhbmRBcGlDYWxsKG1hY19hZGQsIGF1dGhfa2V5KSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovLyR7dGhpcy5taWJhbmRfaG9zdH06JHt0aGlzLm1pYmFuZF9wb3J0fS9iYW5kL2Nvbm5lY3RgLCB7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAnbWFjX2FkZCc6IG1hY19hZGQsCiAgICAgICAgICAgICAgICAnYXV0aF9rZXknOiBhdXRoX2tleQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JyB9LAogICAgICAgICAgICB9KQogICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCkKICAgICAgICAgICAgaWYocmVzdWx0Wydjb25uZWN0LXJlc3VsdCddPT0nc3VjY2VlZGVkJykgewogICAgICAgICAgICAgIHJldHVybiByZXN1bHRbJ2JhbmQtaW5mbyddCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSByZXR1cm4gZmFsc2UKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKQogICAgICAgIH0KICAgIH0sCgogICAgYXN5bmMgYWRkTmV3QmFuZER0YkFwaUNhbGwobWliYW5kKSB7CiAgICAgICAgY29uc3QgdXNlcl9pZCA9IHRoaXMuJHNlc3Npb24uZ2V0KCd1c2VyJykuaWQKICAgICAgICBjb25zdCBib2R5ZGF0YSA9IHt9CiAgICAgICAgZm9yICh2YXIga2V5IGluIG1pYmFuZCkgewogICAgICAgICAgYm9keWRhdGFba2V5XSA9IG1pYmFuZFtrZXldCiAgICAgICAgfQogICAgICAgIGJvZHlkYXRhWyd1c2VyX2lkJ10gPSB1c2VyX2lkCiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovLyR7dGhpcy5taWJhbmRfZGJfaG9zdH06JHt0aGlzLm1pYmFuZF9kYl9wb3J0fS9iYW5kc2AsIHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KAogICAgICAgICAgICAgICAgYm9keWRhdGEKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JyB9LAogICAgICAgICAgICB9KQogICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCkKICAgICAgICAgICAgaWYocmVzdWx0WydhZGQtYmFuZC1yZXN1bHQnXT09J3N1Y2NlZWRlZCcpIHsKICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0WydiYW5kLWluZm8nXQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgcmV0dXJuIGZhbHNlCiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcikKICAgICAgICB9CiAgICB9LAoKICAgIGFzeW5jIGFkZEF2YWlsYWJsZUJhbmREdGJBcGlDYWxsKG1pYmFuZCkgewogICAgICAgIGNvbnN0IHVzZXJfaWQgPSB0aGlzLiRzZXNzaW9uLmdldCgndXNlcicpLmlkCiAgICAgICAgY29uc3QgYmFuZF9pZCA9IG1pYmFuZC5pZAogICAgICAgIGNvbnN0IGJvZHlkYXRhID0ge30KICAgICAgICBmb3IgKHZhciBrZXkgaW4gbWliYW5kKSB7CiAgICAgICAgICBib2R5ZGF0YVtrZXldID0gbWliYW5kW2tleV0KICAgICAgICB9CiAgICAgICAgYm9keWRhdGFbJ3VzZXJfaWQnXSA9IHVzZXJfaWQKICAgICAgICB0cnkgewogICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwOi8vJHt0aGlzLm1pYmFuZF9kYl9ob3N0fToke3RoaXMubWliYW5kX2RiX3BvcnR9L2JhbmRzLyR7YmFuZF9pZH0vdXBkYXRlLW5ldy11c2VyYCwgewogICAgICAgICAgICBtZXRob2Q6ICdQVVQnLAogICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSgKICAgICAgICAgICAgICAgIGJvZHlkYXRhCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcgfSwKICAgICAgICAgICAgfSkKICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpCiAgICAgICAgICAgIGlmKHJlc3VsdFsnYWRkLWJhbmQtcmVzdWx0J109PSdzdWNjZWVkZWQnKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdFsnYmFuZC1pbmZvJ10KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHJldHVybiBmYWxzZQogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpCiAgICAgICAgfQogICAgfSwKCiAgICBhc3luYyBnZXRCYW5kQnlTZXJpYWwoc2VyaWFsKSB7CiAgICAgIGNvbnN0IHBhcmFtcyA9ICdzZXJpYWw9JytzZXJpYWwKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwOi8vJHt0aGlzLm1pYmFuZF9kYl9ob3N0fToke3RoaXMubWliYW5kX2RiX3BvcnR9L2JhbmRzL2ZpbmQtYnktc2VyaWFsPyR7cGFyYW1zfWApCiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpCiAgICAgICAgaWYocmVzdWx0WydnZXQtYmFuZC1yZXN1bHQnXT09J3N1Y2NlZWRlZCcpewogICAgICAgICAgcmV0dXJuIHJlc3VsdFsnYmFuZC1pbmZvJ10KICAgICAgICB9CiAgICAgICAgZWxzZSByZXR1cm4gZmFsc2UKICAgICAgfQogICAgICBjYXRjaCAoZXJyb3IpewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKQogICAgICB9CiAgICB9LAogICAgCgogICAgYWRkQmFuZChtYWNfYWRkLCBhdXRoX2tleSkgewogICAgICBpZih0aGlzLm1hY2FkZFN0YXRlICYmIHRoaXMuYXV0aGtleVN0YXRlKSB7CiAgICAgICAgdGhpcy5jb25uZWN0QmFuZEFwaUNhbGwobWFjX2FkZCwgYXV0aF9rZXkpLnRoZW4oKGJhbmQpPT57CiAgICAgICAgICBpZihiYW5kKSB7CiAgICAgICAgICAgIC8vc2F2ZSBkdGIKICAgICAgICAgICAgLy9hc3NpZ24gYmFuZCBpbmZvIHRvIG1pYmFuZCByZWYKICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gYmFuZCkgewogICAgICAgICAgICAgIHRoaXMubWliYW5kW2tleV0gPSBiYW5kW2tleV0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy5nZXRCYW5kQnlTZXJpYWwoYmFuZFsnc2VyaWFsJ10pLnRoZW4oKGJhbmQpPT57CiAgICAgICAgICAgICAgaWYoIWJhbmQpIHsgLy9ubyBiYW5kIHdpdGggc2FtZSBzZXJpYWwKICAgICAgICAgICAgICAgIHRoaXMuYWRkTmV3QmFuZER0YkFwaUNhbGwodGhpcy5taWJhbmQpLnRoZW4oKHJlc3VsdCk9PnsKICAgICAgICAgICAgICAgICAgaWYocmVzdWx0KSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2Vzc2lvbi5zZXQoJ21pYmFuZCcsIHJlc3VsdCkKICAgICAgICAgICAgICAgICAgICAvL2ZpbmlzaGVkCiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWlyaW5nU3RhdHVzID0gJ09LJwogICAgICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZS1saXN0LWRpc3BsYXknKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgdGhpcy5wYWlyaW5nU3RhdHVzID0gJ0RUQicKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgZWxzZSB7IC8vdGhpcyBiYW5kIGhhcyBiZWVuIHVzZWQgJiBhZGRlZCBpbnRvIGR0YiBiZWZvcmUKICAgICAgICAgICAgICAgIGlmKGJhbmQudXNlcl9pZCkgeyAvL3RoaXMgYmFuZCBpcyBjdXJyZW50bHkgcGFpcmVkIGJ5IGFuIHVzZXIKICAgICAgICAgICAgICAgICAgdGhpcy5wYWlyaW5nU3RhdHVzID0gJ1VOQVZBSUxBQkxFJwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7IC8vdGhpcyBiYW5kIGlzIGN1cnJlbnRseSBmcmVlCiAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQXZhaWxhYmxlQmFuZER0YkFwaUNhbGwoYmFuZCkudGhlbigocmVzdWx0KT0+ewogICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdCkgewogICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2Vzc2lvbi5zZXQoJ21pYmFuZCcsIHJlc3VsdCkKICAgICAgICAgICAgICAgICAgICAgIC8vZmluaXNoZWQKICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFpcmluZ1N0YXR1cyA9ICdPSycKICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZS1saXN0LWRpc3BsYXknKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgdGhpcy5wYWlyaW5nU3RhdHVzID0gJ0RUQicKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIH0KICAgICAgICAgIGVsc2UgewogICAgICAgICAgICB0aGlzLnBhaXJpbmdTdGF0dXMgPSAnRVJST1InCiAgICAgICAgICB9CiAgICAgIAogICAgICAgIH0pCiAgICAgICAgCiAgICAgICAgdGhpcy5wYWlyaW5nU3RhdHVzID0gJ1BFTkRJTkcnCiAgICAgIH0KICAgICAgCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["PairDeviceForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA","file":"PairDeviceForm.vue","sourceRoot":"src/components/device","sourcesContent":["<template>\n  <div>\n    <b-card-title class=\"text-center mt-2\">\n      <div v-if=\"pairingStatus === 'OK'\">\n        <b-alert variant=\"success\" show>Pairing succeeded</b-alert>\n      </div>\n      <div v-if=\"pairingStatus === 'ERROR'\">\n        <b-alert variant=\"danger\" show>Pair failed. Please check data correctness or data format</b-alert>\n      </div>\n      <div v-if=\"pairingStatus === 'PENDING'\">\n        <b-alert variant=\"info\" show>Pairing...</b-alert>\n      </div>\n      <div v-if=\"pairingStatus === 'DTB'\">\n        <b-alert variant=\"info\" show>Adding to database</b-alert>\n      </div>\n      <div v-if=\"pairingStatus === 'UNAVAILABLE'\">\n        <b-alert variant=\"warning\" show>Pair failed. This band is in using condition.<br> \n          If you want to pair, please hard reset the band.</b-alert>\n      </div>\n      \n      <b-skeleton-wrapper :loading=\"pairingStatus === 'PENDING' || pairingStatus === 'DTB'\">\n        <template #loading>\n        <b-card>\n          <b-skeleton width=\"85%\"></b-skeleton>\n          <b-skeleton width=\"55%\"></b-skeleton>\n          <b-skeleton width=\"70%\"></b-skeleton>\n        </b-card>\n      </template>\n      <b-form @submit.prevent=\"addBand\" v-if=\"pairingStatus !== 'OK'\">\n          <b-form-group \n            label=\"MAC address\"\n            :invalid-feedback=\"invalidMACadd\"\n            :state=\"macaddState\"\n          >\n            <b-form-input class=\"w-100 mb-1\"\n              :state=\"macaddState\"\n              v-model=\"miband.mac_address\"\n              required\n              placeholder=\"Example: a1:c2:3d:4e:f5:6a\"\n            ></b-form-input>\n          </b-form-group>\n\n          <b-form-group \n            label=\"Authentic key\"\n            :invalid-feedback=\"invalidAuthkey\"\n            :state=\"authkeyState\"\n          >\n            <b-form-input class=\"w-100 mb-1\"\n              :state=\"authkeyState\"\n              v-model=\"miband.auth_key\"\n              required\n              placeholder=\"Example: 8fa9b42078627a654d22beff985655db\"\n            ></b-form-input>\n          </b-form-group>\n          <div>\n              <b-button @click=\"addBand(miband.mac_address, miband.auth_key)\" variant=\"outline-success\" class=\"mr-1\">➕</b-button>\n              <b-button @click=\"$emit('exit-add-band-mode')\" variant=\"outline-danger\">✖️</b-button>\n          </div>\n      </b-form>\n      </b-skeleton-wrapper>\n    </b-card-title>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  computed: {\n    macaddState() {\n      var regex = /^(([A-Fa-f0-9]{2}[:]){5}[A-Fa-f0-9]{2}[,]?)+$/i;\n      \n      if(this.miband.mac_address=='') {\n        return null\n      }\n      return regex.test(this.miband.mac_address)\n    },\n    authkeyState() {\n      if(this.miband.auth_key=='') {\n        return null\n      }\n      return this.miband.auth_key.length == 32\n    },\n    invalidMACadd() {\n      if (this.miband.mac_address.length >= 17) {\n        return  'Please check your format. Example: a1:b2:c3:d4:e5:f6'\n      }\n      return null\n    },\n    invalidAuthkey() {\n      if (this.miband.auth_key.length > 0) {\n        return  'Authentic key length is 32. Example: 8fa9b42078627a654d22beff985655db'\n      }\n      return null\n    },\n  },\n  data() {\n    return {\n      miband: {\n          mac_address: 'E3:07:72:26:D4:6B',\n          auth_key: '2f20ba44fdcf54ca0c2c37cad1f85487'\n      },\n      pairingStatus: null,\n      miband_db_host: this.$api_hosts['miband_db_api'],\n      miband_db_port: this.$api_ports['miband_db_api'],\n      miband_host: this.$api_hosts['miband_api'],\n      miband_port: this.$api_ports['miband_api']\n    }\n  },\n  methods: {\n    async connectBandApiCall(mac_add, auth_key) {\n        try {\n            const response = await fetch(`http://${this.miband_host}:${this.miband_port}/band/connect`, {\n            method: 'POST',\n            body: JSON.stringify({\n                'mac_add': mac_add,\n                'auth_key': auth_key\n                }),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            })\n            const result = await response.json()\n            if(result['connect-result']=='succeeded') {\n              return result['band-info']\n            }\n            else return false\n        } catch (error) {\n            console.error(error)\n        }\n    },\n\n    async addNewBandDtbApiCall(miband) {\n        const user_id = this.$session.get('user').id\n        const bodydata = {}\n        for (var key in miband) {\n          bodydata[key] = miband[key]\n        }\n        bodydata['user_id'] = user_id\n        try {\n            const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands`, {\n            method: 'POST',\n            body: JSON.stringify(\n                bodydata\n                ),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            })\n            const result = await response.json()\n            if(result['add-band-result']=='succeeded') {\n              return result['band-info']\n            }\n            else return false\n        } catch (error) {\n            console.error(error)\n        }\n    },\n\n    async addAvailableBandDtbApiCall(miband) {\n        const user_id = this.$session.get('user').id\n        const band_id = miband.id\n        const bodydata = {}\n        for (var key in miband) {\n          bodydata[key] = miband[key]\n        }\n        bodydata['user_id'] = user_id\n        try {\n            const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands/${band_id}/update-new-user`, {\n            method: 'PUT',\n            body: JSON.stringify(\n                bodydata\n                ),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            })\n            const result = await response.json()\n            if(result['add-band-result']=='succeeded') {\n              return result['band-info']\n            }\n            else return false\n        } catch (error) {\n            console.error(error)\n        }\n    },\n\n    async getBandBySerial(serial) {\n      const params = 'serial='+serial\n      try {\n        const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands/find-by-serial?${params}`)\n        const result = await response.json()\n        if(result['get-band-result']=='succeeded'){\n          return result['band-info']\n        }\n        else return false\n      }\n      catch (error){\n        console.log(error)\n      }\n    },\n    \n\n    addBand(mac_add, auth_key) {\n      if(this.macaddState && this.authkeyState) {\n        this.connectBandApiCall(mac_add, auth_key).then((band)=>{\n          if(band) {\n            //save dtb\n            //assign band info to miband ref\n            for(var key in band) {\n              this.miband[key] = band[key]\n            }\n\n            this.getBandBySerial(band['serial']).then((band)=>{\n              if(!band) { //no band with same serial\n                this.addNewBandDtbApiCall(this.miband).then((result)=>{\n                  if(result) {\n                    this.$session.set('miband', result)\n                    //finished\n                    this.pairingStatus = 'OK'\n                    this.$emit('update-list-display')\n                  }\n                })\n                this.pairingStatus = 'DTB'\n              }\n              else { //this band has been used & added into dtb before\n                if(band.user_id) { //this band is currently paired by an user\n                  this.pairingStatus = 'UNAVAILABLE'\n                }\n                else { //this band is currently free\n                  this.addAvailableBandDtbApiCall(band).then((result)=>{\n                    if(result) {\n                      this.$session.set('miband', result)\n                      //finished\n                      this.pairingStatus = 'OK'\n                      this.$emit('update-list-display')\n                    }\n                  })\n                  this.pairingStatus = 'DTB'\n                }\n                \n              }\n            })\n          }\n          else {\n            this.pairingStatus = 'ERROR'\n          }\n      \n        })\n        \n        this.pairingStatus = 'PENDING'\n      }\n      \n    }\n  }\n}\n</script>"]}]}