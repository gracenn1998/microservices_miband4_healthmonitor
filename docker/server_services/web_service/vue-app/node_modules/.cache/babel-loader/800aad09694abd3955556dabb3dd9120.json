{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/data/DataType.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/data/DataType.vue","mtime":1608333164771},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DataType.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,KAAA,WAAA,MAAA,iCAAA;AACA,OAAA,KAAA,SAAA,MAAA,yBAAA;AAEA,OAAA,SAAA,MAAA,6BAAA;AAEA,IAAA,KAAA,GAAA,IAAA,IAAA,EAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,SAAA,EAAA;AAAA,GADA;AAEA,EAAA,KAAA,EAAA,CAAA,MAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA,EAJA;AAKA,MAAA,IAAA,EAAA,EALA;AAMA,MAAA,IAAA,EAAA,CAAA,CANA;AAOA,MAAA,SAAA,EAAA,KAAA,CAAA,WAAA,KAAA,GAAA,GAAA,MAAA,CAAA,KAAA,CAAA,QAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,KAAA,CAAA,OAAA,EAPA;AAQA,MAAA,SAAA,EAAA,IARA;AASA,MAAA,QAAA,EAAA,KATA;AAUA,MAAA,aAAA,EAAA;AAVA,KAAA;AAYA,GAhBA;AAiBA,EAAA,OAjBA,qBAiBA;AAAA;;AACA,SAAA,0BAAA,GAAA,IAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,eAAA,CAAA,KAAA,CAAA,SAAA;AACA,KAFA;AAIA,SAAA,eAAA,CAAA,KAAA,SAAA;AACA,SAAA,eAAA;AACA,GAxBA;AA0BA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,WAAA,eAAA,CAAA,KAAA,SAAA;AACA,KAHA;AAIA,IAAA,aAAA,EAAA,yBAAA;AACA,UAAA,KAAA,aAAA,IAAA,IAAA,EAAA;AACA,aAAA,eAAA;AACA,aAAA,eAAA;AACA;AACA,KATA;AAUA,IAAA,IAAA,EAAA,gBAAA;AACA,WAAA,QAAA,GAAA,CAAA,KAAA,QAAA;AACA;AAZA,GA1BA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,6BACA;AACA,UAAA,IAAA,GAAA,KAAA,YAAA;AACA,UAAA,QAAA,GAAA,EAAA;;AAEA,WAAA,IAAA,CAAA,IAAA,IAAA,EAAA;AACA,YAAA,SAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,SAAA;AACA,YAAA,GAAA,GAAA,IAAA,IAAA,CAAA,SAAA,CAAA;AACA,YAAA,IAAA,GAAA,GAAA,CAAA,QAAA,EAAA;AACA,YAAA,MAAA,GAAA,GAAA,CAAA,UAAA,EAAA,CAJA,CAKA;;AACA,YAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,SAAA,EAAA;AACA,UAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA;;AACA,cAAA,KAAA,IAAA,IAAA,IAAA,EAAA;AACA,YAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,IAAA,CAAA;AACA,YAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,WAAA,IAAA,CAAA;AACA,WAHA,MAIA,IAAA,KAAA,IAAA,IAAA,OAAA,EAAA;AACA,YAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,IAAA,CAAA;AACA;AACA;;AACA,YAAA,EAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,SAAA;AACA,YAAA,KAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA;AACA,QAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,GAAA,EAAA,GAAA,KAAA;;AACA,YAAA,KAAA,IAAA,IAAA,IAAA,IAAA,EAAA,IAAA,GAAA,EAAA;AACA,UAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,KAAA,EAAA;AACA,UAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,WAAA;AACA,SAHA,MAIA,IAAA,KAAA,IAAA,IAAA,OAAA,EAAA;AACA,UAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA;AACA;AACA;;AAEA,UAAA,YAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,QAAA,CAAA,CAAA,CAAA,IAAA,SAAA,EACA,YAAA,CAAA,CAAA,CAAA,GAAA,KAAA,IAAA,IAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,KAAA,IAAA,QAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,GACA,QAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CADA,CADA,KAGA,YAAA,CAAA,CAAA,CAAA,GAAA,SAAA;AACA;;AACA,WAAA,YAAA,GAAA,YAAA;AACA,WAAA,QAAA,GAAA,QAAA;AACA,KA1CA;AA4CA,IAAA,eA5CA,2BA4CA,IA5CA,EA4CA;AACA,WAAA,MAAA,GAAA,EAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA,UAAA,CAAA;;AACA,UAAA,IAAA,IAAA,IAAA,EAAA;AACA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,EAAA;AACA,eAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,GAAA,KAAA;AACA,eAAA,IAAA,CAAA,IAAA,CAAA,KAAA,YAAA,CAAA,CAAA,CAAA;AACA;AACA,OALA,MAMA;AACA,QAAA,CAAA,GAAA,IAAA;AACA,YAAA,MAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,MAAA,GAAA,MAAA,MAAA,CAAA,CAAA,CAAA;AACA,WAFA,MAGA,MAAA,GAAA,CAAA;;AACA,eAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,MAAA,CAAA,MAAA,CAAA;;AACA,cAAA,KAAA,QAAA,CAAA,CAAA,KAAA,SAAA,EAAA;AACA,gBAAA,GAAA,GAAA,KAAA,QAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,gBAAA,GAAA,IAAA,GAAA,EACA,GAAA,GAAA,IAAA;AACA,iBAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA;AAEA;AACA;AAEA,KAzEA;AA2EA,IAAA,eA3EA,2BA2EA,YA3EA,EA2EA;AAAA;;AACA,UAAA,KAAA,GAAA,IAAA,IAAA,CAAA,YAAA,CAAA;AACA,UAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,MAAA,CAFA,CAGA;;AACA,MAAA,OAAA,GAAA,IAAA,IAAA,CAAA,KAAA,CAAA,WAAA,EAAA,EAAA,KAAA,CAAA,QAAA,EAAA,EAAA,KAAA,CAAA,OAAA,EAAA,CAAA,CAJA,CAKA;;AACA,MAAA,KAAA,GAAA,IAAA,IAAA,CAAA,KAAA,CAAA,WAAA,EAAA,EAAA,KAAA,CAAA,QAAA,EAAA,EAAA,KAAA,CAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,CANA,CAOA;;AACA,MAAA,QAAA,GAAA,KAAA,qBAAA,CAAA,OAAA,CAAA;AACA,MAAA,MAAA,GAAA,KAAA,qBAAA,CAAA,KAAA,CAAA;AAEA,UAAA,OAAA,GAAA,KAAA,QAAA,CAAA,GAAA,CAAA,MAAA,EAAA,EAAA;AAEA,MAAA,SAAA,CAAA,yBAAA,CAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,YAAA,GAAA,MAAA;AACA,QAAA,MAAA,CAAA,aAAA,GAAA,IAAA;AACA,OAHA;AAIA,WAAA,aAAA,GAAA,SAAA;AAEA,KA9FA;AAiGA,IAAA,8BAjGA,4CAiGA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OADA,GACA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,EAAA,EADA;AAAA;AAAA,uBAEA,SAAA,CAAA,qCAAA,CAAA,OAAA,CAFA;;AAAA;AAEA,gBAAA,SAFA;;AAKA,oBAAA,SAAA,IAAA,EAAA,EAAA;AACA,kBAAA,MAAA,GAAA,IAAA,IAAA,EAAA;AACA,iBAFA,MAGA;AACA,kBAAA,MAAA,GAAA,IAAA,IAAA,CAAA,SAAA,CAAA;AACA,iBAVA,CAYA;;;AAEA,gBAAA,KAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,MAAA,CAAA;AACA,gBAAA,GAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,IAAA,IAAA,EAAA,CAAA;AAfA;AAAA,uBAgBA,WAAA,CAAA,iBAAA,CAAA,KAAA,EAAA,GAAA,CAhBA;;AAAA;AAgBA,gBAAA,IAhBA;AAAA,iDAiBA,IAjBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,KAnHA;AAqHA,IAAA,0BArHA,wCAqHA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OADA,GACA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,EAAA,EADA;AAEA,gBAAA,OAFA,GAEA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,MAAA,EAAA,EAFA;AAAA;AAAA,uBAGA,MAAA,CAAA,8BAAA,EAHA;;AAAA;AAGA,gBAAA,IAHA;;AAAA,qBAKA,IALA;AAAA;AAAA;AAAA;;AAAA,sBAMA,MAAA,CAAA,OAAA,CAAA,IAAA,EAAA,MAAA,IAAA,CANA;AAAA;AAAA;AAAA;;AAMA;AACA,gBAAA,OAPA,GAOA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA,GAAA,CAAA,CAPA,EASA;;AACA,gBAAA,MAAA,CAAA,gBAAA,CAAA,IAAA;;AAVA;AAAA,uBAYA,SAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,OAAA,EAAA,IAAA,CAZA;;AAAA;AAYA,gBAAA,UAZA;;AAaA,oBAAA,UAAA,EAAA;AAEA,kBAAA,SAFA,GAEA,MAAA,CAAA,2BAAA,CAAA,OAAA,CAFA;AAGA,kBAAA,MAHA,GAGA,MAAA,CAAA,qBAAA,CAAA,SAAA,CAHA;;AAKA,kBAAA,MAAA,CAAA,qCAAA,CAAA,OAAA,EAAA,MAAA;AACA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA,KA5IA;AA8IA,IAAA,gBA9IA,4BA8IA,IA9IA,EA8IA;AACA,WAAA,IAAA,EAAA,IAAA,IAAA,EAAA;AACA,YAAA,SAAA,GAAA,KAAA,2BAAA,CAAA,EAAA,CAAA;AACA,YAAA,SAAA,GAAA,KAAA,qBAAA,CAAA,SAAA,CAAA;AACA,QAAA,IAAA,CAAA,SAAA,CAAA,GAAA,IAAA,CAAA,EAAA,CAAA;AACA,eAAA,IAAA,CAAA,EAAA,CAAA;AACA;AACA,KArJA;AAuJA,IAAA,qBAvJA,iCAuJA,SAvJA,EAuJA;AACA,UAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AACA,MAAA,CAAA,GAAA,SAAA,CAAA,UAAA,EAAA;AACA,MAAA,CAAA,GAAA,SAAA,CAAA,WAAA,KAAA,CAAA;AACA,MAAA,CAAA,GAAA,SAAA,CAAA,cAAA,EAAA;AACA,MAAA,CAAA,GAAA,SAAA,CAAA,WAAA,EAAA;AACA,MAAA,CAAA,GAAA,SAAA,CAAA,aAAA,EAAA;;AACA,UAAA,CAAA,GAAA,EAAA,EAAA;AACA,QAAA,CAAA,GAAA,MAAA,CAAA;AACA;;AACA,MAAA,OAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA;AACA,MAAA,OAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA;AACA,MAAA,MAAA,GAAA,OAAA,GAAA,KAAA,GAAA,OAAA;AACA,aAAA,MAAA;AAEA,KAtKA;AAwKA,IAAA,kBAxKA,8BAwKA,SAxKA,EAwKA;AACA,UAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AACA,MAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,CAFA,CAGA;AACA;;AACA,MAAA,CAAA,GAAA,SAAA,CAAA,QAAA,KAAA,CAAA;AACA,MAAA,CAAA,GAAA,SAAA,CAAA,WAAA,EAAA;AACA,MAAA,CAAA,GAAA,SAAA,CAAA,QAAA,EAAA;AACA,MAAA,CAAA,GAAA,SAAA,CAAA,UAAA,EAAA;;AACA,UAAA,CAAA,GAAA,EAAA,EAAA;AACA,QAAA,CAAA,GAAA,MAAA,CAAA;AACA;;AACA,MAAA,OAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA;AACA,MAAA,OAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA;AACA,MAAA,MAAA,GAAA,OAAA,GAAA,KAAA,GAAA,OAAA;AACA,aAAA,MAAA;AACA,KAxLA;AA0LA,IAAA,2BA1LA,uCA0LA,OA1LA,EA0LA;AACA;AACA,UAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AACA,MAAA,CAAA,GAAA,OAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAHA,CAIA;AACA;;AACA,MAAA,CAAA,GAAA,QAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA;AACA,MAAA,CAAA,GAAA,OAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,MAAA,CAAA,GAAA,OAAA,CAAA,KAAA,CAAA,EAAA,EAAA,EAAA,CAAA;AACA,MAAA,CAAA,GAAA,OAAA,CAAA,KAAA,CAAA,EAAA,EAAA,EAAA,CAAA;AACA,MAAA,MAAA,GAAA,IAAA,IAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AACA,aAAA,MAAA;AACA,KAtMA;AAwMA,IAAA,eAxMA,6BAwMA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,WAAA,eAAA;AACA;AA3MA;AAzCA,CAAA","sourcesContent":["<template>\n    <div>\n        <div>\n            <b-form inline class=\"d-flex justify-content-between\">\n                <b-form-datepicker id=\"example-datepicker\" v-model=\"datevalue\" class=\"mb-2 w-50\"></b-form-datepicker>\n                \n                <div>\n                    Hour range:\n                    <b-form-spinbutton inline wrap min=\"0\" max=\"23\" v-model=\"hourvalue\"></b-form-spinbutton>\n                    <b-button class=\"ml-1\" variant=\"success\" @click=\"createChartData(hourvalue)\">v</b-button>\n                    <b-button class=\"ml-1\" @click=\"removeHourRange\">x</b-button>\n                </div>\n                \n            </b-form>\n        </div>\n\n        <div v-if=\"getDataStatus === 'PENDING'\">\n            <b-alert variant=\"info\" show>Getting data...</b-alert>\n        </div>\n        \n        <b-skeleton-wrapper :loading=\"getDataStatus === 'PENDING'\">\n            <template #loading>\n                <b-card>\n                <b-skeleton width=\"85%\"></b-skeleton>\n                <b-skeleton width=\"55%\"></b-skeleton>\n                <b-skeleton width=\"70%\"></b-skeleton>\n                </b-card>\n            </template>\n            <div class=\"h-50\">\n                <DataChart :key=\"chartkey\" :data=\"data\" :labels=\"labels\" :type=\"type\"/>\n            </div>\n        </b-skeleton-wrapper>\n    </div>\n</template>\n\n\n<script>\nimport * as miband_conn from '@/api_calls/MibandConnection.js'\nimport * as miband_db from '@/api_calls/MibandDb.js'\n\nimport DataChart from '@/components/data/DataChart'\n\nvar today = new Date()\n\nexport default {\n    components: { DataChart },\n    props: ['type'],\n    data(){\n        return {\n            activitydata: {},\n            wholedayData: {},\n            hourData: {},\n            labels: [],\n            data: [],\n            mode: -1,\n            datevalue: today.getFullYear() + '-' + String(today.getMonth()+1) + '-' + today.getDate(),\n            hourvalue: null,\n            chartkey: false,\n            getDataStatus: '',\n        }\n    },\n    mounted(){\n        this.addDataFromLastTimestampDb().then(()=>{\n            this.getDatabyDateDb(this.datevalue)\n        })\n\n        this.getDatabyDateDb(this.datevalue)\n        this.generateDataSet()\n    },\n\n    watch: {\n        datevalue: function() {\n            this.getDatabyDateDb(this.datevalue)\n        },\n        getDataStatus: function() {\n            if(this.getDataStatus=='OK') {\n                this.generateDataSet()\n                this.createChartData()                    \n            }\n        },\n        data: function() {\n            this.chartkey = !this.chartkey\n        },\n    },\n\n    methods: {\n        generateDataSet() {\n            var logs = this.activitydata\n            var hourData = {}\n\n            for(var i in logs) {\n                var timestamp = logs[i].timestamp\n                var tmp = new Date(timestamp)\n                var hour = tmp.getHours()\n                var minute = tmp.getMinutes()\n                // dataOfHour[\"asd\"] = \"asd\"\n                if(hourData[String(hour)]==undefined){\n                    hourData[String(hour)] = {}\n                    if(this.type=='hr'){\n                        hourData[String(hour)]['sum'] = 0\n                        hourData[String(hour)]['valid-cnt']=0\n                    }\n                    else if (this.type=='steps'){\n                        hourData[String(hour)]['sum'] = 0\n                    }\n                }\n                var hr = logs[i].heartrate\n                var steps = logs[i].steps\n                hourData[String(hour)][String(minute)] = this.type=='hr'? hr : steps\n                if(this.type=='hr'&& hr!=255){\n                    hourData[String(hour)]['sum']+=hr\n                    hourData[String(hour)]['valid-cnt']++\n                }\n                else if(this.type=='steps') {\n                    hourData[String(hour)]['sum']+=steps\n                }\n            }\n\n            var wholedayData = {}\n            for(var h=0; h<24; h++){\n                if(hourData[h]!=undefined)\n                    wholedayData[h] = this.type=='hr'? Math.round(hourData[h]['sum']/hourData[h]['valid-cnt'])\n                                                     : hourData[h]['sum']\n                else  wholedayData[h] = undefined\n            }\n            this.wholedayData = wholedayData\n            this.hourData = hourData\n        },\n\n        createChartData(mode) {\n            this.labels = []\n            this.data = []\n            var h\n            if(mode==null) {\n                for(h=0; h<24; h++) {\n                    this.labels.push(String(h)+':00')\n                    this.data.push(this.wholedayData[h])\n                }\n            }\n            else {\n                h = mode\n                var minute\n                for(var m=0; m<60; m++) {\n                    if (String(m).length<2) {\n                        minute = '0'+String(m)\n                    }\n                    else minute = m\n                    this.labels.push(String(h)+':'+String(minute))\n                    if(this.hourData[h]!=undefined){\n                        var bpm = this.hourData[h][m]\n                        if(bpm==255)\n                            bpm = null\n                        this.data.push(bpm)\n                    }\n                        \n                }\n            }\n\n        },\n\n        getDatabyDateDb(inputdatestr) {\n            var today = new Date(inputdatestr)\n            var startTs, endTs, startstr, endstr\n            //start = todays' 0:00\n            startTs = new Date(today.getFullYear(), today.getMonth(), today.getDate())\n            //end = todays's 23:59\n            endTs = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 23, 59)\n            //convert ts to str\n            startstr = this.generateApiUTCTimeStr(startTs)\n            endstr = this.generateApiUTCTimeStr(endTs)\n\n            const user_id = this.$session.get('user').id\n            \n            miband_db.getUserLogByTimeDbApiCall(user_id, startstr, endstr).then((result)=>{\n                this.activitydata  = result\n                this.getDataStatus = \"OK\"\n            })\n            this.getDataStatus = \"PENDING\"\n\n        },\n\n        \n        async getDataFromLastTimestampMiband(){\n            const band_id = this.$session.get('miband').id\n            const lastTsStr = await miband_db.getLastFetchingDataTimestampDbApiCall(band_id)\n            \n            var lastTs\n            if(lastTsStr==''){\n                lastTs = new Date()\n            }\n            else {\n                lastTs = new Date(lastTsStr)           \n            }\n            \n            //get data from last ts to now\n            var start, end\n            start = this.generateApiTimeStr(lastTs)\n            end = this.generateApiTimeStr(new Date())\n            const logs = await miband_conn.getDataMibandFrom(start, end)\n            return logs\n        },\n\n        async addDataFromLastTimestampDb() {\n            const band_id = this.$session.get('miband').id\n            const user_id = this.$session.get('user').id\n            const logs = await this.getDataFromLastTimestampMiband()\n\n            if(logs) {//if api called successfully\n                if(Object.entries(logs).length!=0){ //if data read != null\n                    var laststr = Object.keys(logs)[Object.keys(logs).length-1]\n                    \n                    //save dtb in utc timestamp\n                    this.convertLogsToUTC(logs)\n                    \n                    var add_result = await miband_db.addLogsDbApiCall(user_id, band_id, logs)\n                    if(add_result) {\n\n                        const timestamp = this.generateTimestampFromApiStr(laststr)\n                        const utcStr = this.generateApiUTCTimeStr(timestamp)\n\n                        this.setLastFetchingDataTimestampDbApiCall(band_id, utcStr)\n                    }\n                }\n            }\n            \n        },\n\n        convertLogsToUTC(logs) {\n            for(var ts in logs) {\n                var timestamp = this.generateTimestampFromApiStr(ts)\n                var apiUTCStr = this.generateApiUTCTimeStr(timestamp)\n                logs[apiUTCStr] = logs[ts]\n                delete logs[ts]\n            }\n        },\n\n        generateApiUTCTimeStr(timestamp) {\n            var result, datestr, timestr, d, M, y, h, m\n            d = timestamp.getUTCDate()\n            M = timestamp.getUTCMonth()+1\n            y = timestamp.getUTCFullYear()\n            h = timestamp.getUTCHours()\n            m = timestamp.getUTCMinutes()\n            if(m<10) {\n                m = '0'+m\n            }\n            datestr = d + '.' + M + '.' + y\n            timestr = h + ':' + m\n            result = datestr + ' - ' + timestr\n            return result\n\n        },\n\n        generateApiTimeStr(timestamp) {\n            var result, datestr, timestr, d, M, y, h, m\n            d = timestamp.getDate()\n            //api string: real month 1-12| Date month system 0-11: 0: Jan, 1: Feb,...\n            //--> +1\n            M = timestamp.getMonth()+1\n            y = timestamp.getFullYear()\n            h = timestamp.getHours()\n            m = timestamp.getMinutes()\n            if(m<10) {\n                m = '0'+m\n            }\n            datestr = d + '.' + M + '.' + y\n            timestr = h + ':' + m\n            result = datestr + ' - ' + timestr\n            return result\n        },\n\n        generateTimestampFromApiStr(timestr) {\n            // dd.MM.yyyy - hh.mm\n            var result, d, M, y, h, m\n            d = timestr.slice(0,2)\n            //api string: real month | Date month system 0-11: 0: Jan, 1: Feb,...\n            //--> -1\n            M = parseInt(timestr.slice(3,5)) - 1\n            y = timestr.slice(6,10)\n            h = timestr.slice(13,15)\n            m = timestr.slice(16,18)\n            result = new Date(y, M, d, h, m)\n            return result\n        },\n\n        removeHourRange(){\n            this.hourvalue = null\n            this.createChartData()\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components/data"}]}