{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/device/PairDeviceForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/device/PairDeviceForm.vue","mtime":1607340678879},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2dyYWNlL3BqL21pY3Jvc2VydmljZXNfbWliYW5kNF9oZWFsdGhtb25pdG9yL2Zyb250ZW5kL3Z1ZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcHV0ZWQ6IHsKICAgIG1hY2FkZFN0YXRlOiBmdW5jdGlvbiBtYWNhZGRTdGF0ZSgpIHsKICAgICAgdmFyIHJlZ2V4ID0gL14oKFtBLUZhLWYwLTldezJ9WzpdKXs1fVtBLUZhLWYwLTldezJ9WyxdPykrJC9pOwoKICAgICAgaWYgKHRoaXMubWliYW5kLm1hY19hZGQgPT0gJycpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQoKICAgICAgcmV0dXJuIHJlZ2V4LnRlc3QodGhpcy5taWJhbmQubWFjX2FkZCk7CiAgICB9LAogICAgYXV0aGtleVN0YXRlOiBmdW5jdGlvbiBhdXRoa2V5U3RhdGUoKSB7CiAgICAgIGlmICh0aGlzLm1pYmFuZC5hdXRoX2tleSA9PSAnJykgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy5taWJhbmQuYXV0aF9rZXkubGVuZ3RoID09IDMyOwogICAgfSwKICAgIGludmFsaWRNQUNhZGQ6IGZ1bmN0aW9uIGludmFsaWRNQUNhZGQoKSB7CiAgICAgIGlmICh0aGlzLm1pYmFuZC5tYWNfYWRkLmxlbmd0aCA+PSAxNykgewogICAgICAgIHJldHVybiAnUGxlYXNlIGNoZWNrIHlvdXIgZm9ybWF0LiBFeGFtcGxlOiBhMTpiMjpjMzpkNDplNTpmNic7CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfSwKICAgIGludmFsaWRBdXRoa2V5OiBmdW5jdGlvbiBpbnZhbGlkQXV0aGtleSgpIHsKICAgICAgaWYgKHRoaXMubWliYW5kLmF1dGhfa2V5Lmxlbmd0aCA+IDApIHsKICAgICAgICByZXR1cm4gJ0F1dGhlbnRpYyBrZXkgbGVuZ3RoIGlzIDMyLiBFeGFtcGxlOiA4ZmE5YjQyMDc4NjI3YTY1NGQyMmJlZmY5ODU2NTVkYic7CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1pYmFuZDogewogICAgICAgIG1hY19hZGQ6ICdFMzowNzo3MjoyNjpENDo2QicsCiAgICAgICAgYXV0aF9rZXk6ICcyZjIwYmE0NGZkY2Y1NGNhMGMyYzM3Y2FkMWY4NTQ4NycKICAgICAgfSwKICAgICAgcGFpcmluZ1N0YXR1czogbnVsbCwKICAgICAgbWliYW5kX2RiX2hvc3Q6IHRoaXMuJGFwaV9ob3N0c1snbWliYW5kX2RiX2FwaSddLAogICAgICBtaWJhbmRfZGJfcG9ydDogdGhpcy4kYXBpX3BvcnRzWydtaWJhbmRfZGJfYXBpJ10sCiAgICAgIG1pYmFuZF9ob3N0OiB0aGlzLiRhcGlfaG9zdHNbJ21pYmFuZF9hcGknXSwKICAgICAgbWliYW5kX3BvcnQ6IHRoaXMuJGFwaV9wb3J0c1snbWliYW5kX2FwaSddCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgY29ubmVjdEJhbmRBcGlDYWxsOiBmdW5jdGlvbiBjb25uZWN0QmFuZEFwaUNhbGwobWFjX2FkZCwgYXV0aF9rZXkpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovLyIuY29uY2F0KF90aGlzLm1pYmFuZF9ob3N0LCAiOiIpLmNvbmNhdChfdGhpcy5taWJhbmRfcG9ydCwgIi9iYW5kL2Nvbm5lY3QiKSwgewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgICAgICdtYWNfYWRkJzogbWFjX2FkZCwKICAgICAgICAgICAgICAgICAgICAnYXV0aF9rZXknOiBhdXRoX2tleQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXN1bHRbJ2Nvbm5lY3QtcmVzdWx0J10gPT0gJ3N1Y2NlZWRlZCcpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzdWx0WydiYW5kLWluZm8nXSk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgMTRdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGFkZE5ld0JhbmREdGJBcGlDYWxsOiBmdW5jdGlvbiBhZGROZXdCYW5kRHRiQXBpQ2FsbChtaWJhbmQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgdXNlcl9pZCwgYm9keWRhdGEsIGtleSwgcmVzcG9uc2UsIHJlc3VsdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgdXNlcl9pZCA9IF90aGlzMi4kc2Vzc2lvbi5nZXQoJ3VzZXInKS5pZDsKICAgICAgICAgICAgICAgIGJvZHlkYXRhID0ge307CgogICAgICAgICAgICAgICAgZm9yIChrZXkgaW4gbWliYW5kKSB7CiAgICAgICAgICAgICAgICAgIGJvZHlkYXRhW2tleV0gPSBtaWJhbmRba2V5XTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBib2R5ZGF0YVsndXNlcl9pZCddID0gdXNlcl9pZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovLyIuY29uY2F0KF90aGlzMi5taWJhbmRfZGJfaG9zdCwgIjoiKS5jb25jYXQoX3RoaXMyLm1pYmFuZF9kYl9wb3J0LCAiL2JhbmRzIiksIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHlkYXRhKSwKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlc3VsdFsnYWRkLWJhbmQtcmVzdWx0J10gPT0gJ3N1Y2NlZWRlZCcpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXN1bHRbJ2JhbmQtaW5mbyddKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDIxOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE4OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDQpOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dDIudDApOwoKICAgICAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzQsIDE4XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBhZGRBdmFpbGFibGVCYW5kRHRiQXBpQ2FsbDogZnVuY3Rpb24gYWRkQXZhaWxhYmxlQmFuZER0YkFwaUNhbGwobWliYW5kKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHVzZXJfaWQsIGJhbmRfaWQsIGJvZHlkYXRhLCBrZXksIHJlc3BvbnNlLCByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHVzZXJfaWQgPSBfdGhpczMuJHNlc3Npb24uZ2V0KCd1c2VyJykuaWQ7CiAgICAgICAgICAgICAgICBiYW5kX2lkID0gbWliYW5kWydpZCddOwogICAgICAgICAgICAgICAgYm9keWRhdGEgPSB7fTsKCiAgICAgICAgICAgICAgICBmb3IgKGtleSBpbiBtaWJhbmQpIHsKICAgICAgICAgICAgICAgICAgYm9keWRhdGFba2V5XSA9IG1pYmFuZFtrZXldOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGJvZHlkYXRhWyd1c2VyX2lkJ10gPSB1c2VyX2lkOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA1OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA4OwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwOi8vIi5jb25jYXQoX3RoaXMzLm1pYmFuZF9kYl9ob3N0LCAiOiIpLmNvbmNhdChfdGhpczMubWliYW5kX2RiX3BvcnQsICIvYmFuZHMvIikuY29uY2F0KGJhbmRfaWQsICIvdXBkYXRlLW5ldy11c2VyIiksIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUFVUJywKICAgICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keWRhdGEpLAogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCEocmVzdWx0WydhZGQtYmFuZC1yZXN1bHQnXSA9PSAnc3VjY2VlZGVkJykpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxNjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHJlc3VsdFsnYmFuZC1pbmZvJ10pOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTk7CiAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oNSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0My50MCk7CgogICAgICAgICAgICAgIGNhc2UgMjI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbNSwgMTldXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldEJhbmRCeVNlcmlhbDogZnVuY3Rpb24gZ2V0QmFuZEJ5U2VyaWFsKHNlcmlhbCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBwYXJhbXMsIHJlc3BvbnNlLCByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHBhcmFtcyA9ICdzZXJpYWw9JyArIHNlcmlhbDsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovLyIuY29uY2F0KF90aGlzNC5taWJhbmRfZGJfaG9zdCwgIjoiKS5jb25jYXQoX3RoaXM0Lm1pYmFuZF9kYl9wb3J0LCAiL2JhbmRzL2ZpbmQtYnktc2VyaWFsPyIpLmNvbmNhdChwYXJhbXMpKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0NC5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlc3VsdFsnZ2V0LWJhbmQtcmVzdWx0J10gPT0gJ3N1Y2NlZWRlZCcpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCByZXN1bHRbJ2JhbmQtaW5mbyddKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDE4OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDE1OwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQ0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCwgbnVsbCwgW1sxLCAxNV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgYWRkQmFuZDogZnVuY3Rpb24gYWRkQmFuZChtYWNfYWRkLCBhdXRoX2tleSkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIGlmICh0aGlzLm1hY2FkZFN0YXRlICYmIHRoaXMuYXV0aGtleVN0YXRlKSB7CiAgICAgICAgdGhpcy5jb25uZWN0QmFuZEFwaUNhbGwobWFjX2FkZCwgYXV0aF9rZXkpLnRoZW4oZnVuY3Rpb24gKGJhbmQpIHsKICAgICAgICAgIGlmIChiYW5kKSB7CiAgICAgICAgICAgIC8vc2F2ZSBkdGIKICAgICAgICAgICAgLy9hc3NpZ24gYmFuZCBpbmZvIHRvIG1pYmFuZCByZWYKICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGJhbmQpIHsKICAgICAgICAgICAgICBfdGhpczUubWliYW5kW2tleV0gPSBiYW5kW2tleV07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF90aGlzNS5nZXRCYW5kQnlTZXJpYWwoYmFuZFsnc2VyaWFsJ10pLnRoZW4oZnVuY3Rpb24gKGJhbmQpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhiYW5kKTsKCiAgICAgICAgICAgICAgaWYgKCFiYW5kKSB7CiAgICAgICAgICAgICAgICAvL25vIGJhbmQgd2l0aCBzYW1lIHNlcmlhbAogICAgICAgICAgICAgICAgX3RoaXM1LmFkZE5ld0JhbmREdGJBcGlDYWxsKF90aGlzNS5taWJhbmQpLnRoZW4oZnVuY3Rpb24gKGJhbmQpIHsKICAgICAgICAgICAgICAgICAgaWYgKGJhbmQpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczUuJHNlc3Npb24uc2V0KCdtaWJhbmQnLCBfdGhpczUubWliYW5kKTsgLy9maW5pc2hlZAoKCiAgICAgICAgICAgICAgICAgICAgX3RoaXM1LnBhaXJpbmdTdGF0dXMgPSAnT0snOwoKICAgICAgICAgICAgICAgICAgICBfdGhpczUuJGVtaXQoJ3VwZGF0ZS1saXN0LWRpc3BsYXknKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgX3RoaXM1LnBhaXJpbmdTdGF0dXMgPSAnRFRCJzsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgLy90aGlzIGJhbmQgaGFzIGJlZW4gdXNlZCAmIGFkZGVkIGludG8gZHRiIGJlZm9yZQogICAgICAgICAgICAgICAgX3RoaXM1LmFkZEF2YWlsYWJsZUJhbmREdGJBcGlDYWxsKF90aGlzNS5taWJhbmQpLnRoZW4oZnVuY3Rpb24gKGJhbmQpIHsKICAgICAgICAgICAgICAgICAgaWYgKGJhbmQpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczUuJHNlc3Npb24uc2V0KCdtaWJhbmQnLCBfdGhpczUubWliYW5kKTsgLy9maW5pc2hlZAoKCiAgICAgICAgICAgICAgICAgICAgX3RoaXM1LnBhaXJpbmdTdGF0dXMgPSAnT0snOwoKICAgICAgICAgICAgICAgICAgICBfdGhpczUuJGVtaXQoJ3VwZGF0ZS1saXN0LWRpc3BsYXknKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgX3RoaXM1LnBhaXJpbmdTdGF0dXMgPSAnRFRCJzsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXM1LnBhaXJpbmdTdGF0dXMgPSAnRVJST1InOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHRoaXMucGFpcmluZ1N0YXR1cyA9ICdQRU5ESU5HJzsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["PairDeviceForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <b-card-title class=\"text-center mt-2\">\n      <div v-if=\"pairingStatus === 'OK'\">\n        <b-alert variant=\"success\" show>Pairing succeeded</b-alert>\n      </div>\n      <div v-if=\"pairingStatus === 'ERROR'\">\n        <b-alert variant=\"danger\" show>Pair failed. Please check data correctness or data format</b-alert>\n      </div>\n      <div v-if=\"pairingStatus === 'PENDING'\">\n        <b-alert variant=\"info\" show>Pairing...</b-alert>\n      </div>\n      <div v-if=\"pairingStatus === 'DTB'\">\n        <b-alert variant=\"info\" show>Adding to database</b-alert>\n      </div>\n      \n      <b-skeleton-wrapper :loading=\"pairingStatus === 'PENDING' || pairingStatus === 'DTB'\">\n        <template #loading>\n        <b-card>\n          <b-skeleton width=\"85%\"></b-skeleton>\n          <b-skeleton width=\"55%\"></b-skeleton>\n          <b-skeleton width=\"70%\"></b-skeleton>\n        </b-card>\n      </template>\n      <b-form @submit.prevent=\"addBand\" v-if=\"pairingStatus !== 'OK'\">\n          <b-form-group \n            label=\"MAC address\"\n            :invalid-feedback=\"invalidMACadd\"\n            :state=\"macaddState\"\n          >\n            <b-form-input class=\"w-100 mb-1\"\n              :state=\"macaddState\"\n              v-model=\"miband.mac_add\"\n              required\n              placeholder=\"Example: a1:c2:3d:4e:f5:6a\"\n            ></b-form-input>\n          </b-form-group>\n\n          <b-form-group \n            label=\"Authentic key\"\n            :invalid-feedback=\"invalidAuthkey\"\n            :state=\"authkeyState\"\n          >\n            <b-form-input class=\"w-100 mb-1\"\n              :state=\"authkeyState\"\n              v-model=\"miband.auth_key\"\n              required\n              placeholder=\"Example: 8fa9b42078627a654d22beff985655db\"\n            ></b-form-input>\n          </b-form-group>\n          <div>\n              <b-button @click=\"addBand(miband.mac_add, miband.auth_key)\" variant=\"outline-success\" class=\"mr-1\">➕</b-button>\n              <b-button @click=\"$emit('exit-add-band-mode')\" variant=\"outline-danger\">✖️</b-button>\n          </div>\n      </b-form>\n      </b-skeleton-wrapper>\n    </b-card-title>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  computed: {\n    macaddState() {\n      var regex = /^(([A-Fa-f0-9]{2}[:]){5}[A-Fa-f0-9]{2}[,]?)+$/i;\n      \n      if(this.miband.mac_add=='') {\n        return null\n      }\n      return regex.test(this.miband.mac_add)\n    },\n    authkeyState() {\n      if(this.miband.auth_key=='') {\n        return null\n      }\n      return this.miband.auth_key.length == 32\n    },\n    invalidMACadd() {\n      if (this.miband.mac_add.length >= 17) {\n        return  'Please check your format. Example: a1:b2:c3:d4:e5:f6'\n      }\n      return null\n    },\n    invalidAuthkey() {\n      if (this.miband.auth_key.length > 0) {\n        return  'Authentic key length is 32. Example: 8fa9b42078627a654d22beff985655db'\n      }\n      return null\n    },\n  },\n  data() {\n    return {\n      miband: {\n          mac_add: 'E3:07:72:26:D4:6B',\n          auth_key: '2f20ba44fdcf54ca0c2c37cad1f85487'\n      },\n      pairingStatus: null,\n      miband_db_host: this.$api_hosts['miband_db_api'],\n      miband_db_port: this.$api_ports['miband_db_api'],\n      miband_host: this.$api_hosts['miband_api'],\n      miband_port: this.$api_ports['miband_api']\n    }\n  },\n  methods: {\n    async connectBandApiCall(mac_add, auth_key) {\n        try {\n            const response = await fetch(`http://${this.miband_host}:${this.miband_port}/band/connect`, {\n            method: 'POST',\n            body: JSON.stringify({\n                'mac_add': mac_add,\n                'auth_key': auth_key\n                }),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            })\n            const result = await response.json()\n            if(result['connect-result']=='succeeded') {\n              return result['band-info']\n            }\n            else return false\n        } catch (error) {\n            console.error(error)\n        }\n    },\n\n    async addNewBandDtbApiCall(miband) {\n        const user_id = this.$session.get('user').id\n        const bodydata = {}\n        for (var key in miband) {\n          bodydata[key] = miband[key]\n        }\n        bodydata['user_id'] = user_id\n        try {\n            const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands`, {\n            method: 'POST',\n            body: JSON.stringify(\n                bodydata\n                ),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            })\n            const result = await response.json()\n            if(result['add-band-result']=='succeeded') {\n              return result['band-info']\n            }\n            else return false\n        } catch (error) {\n            console.error(error)\n        }\n    },\n\n    async addAvailableBandDtbApiCall(miband) {\n        const user_id = this.$session.get('user').id\n        const band_id = miband['id']\n        const bodydata = {}\n        for (var key in miband) {\n          bodydata[key] = miband[key]\n        }\n        bodydata['user_id'] = user_id\n        try {\n            const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands/${band_id}/update-new-user`, {\n            method: 'PUT',\n            body: JSON.stringify(\n                bodydata\n                ),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            })\n            const result = await response.json()\n            if(result['add-band-result']=='succeeded') {\n              return result['band-info']\n            }\n            else return false\n        } catch (error) {\n            console.error(error)\n        }\n    },\n\n    async getBandBySerial(serial) {\n      const params = 'serial='+serial\n      try {\n        const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands/find-by-serial?${params}`)\n        const result = await response.json()\n        if(result['get-band-result']=='succeeded'){\n          return result['band-info']\n        }\n        else return false\n      }\n      catch (error){\n        console.log(error)\n      }\n    },\n    \n\n    addBand(mac_add, auth_key) {\n      if(this.macaddState && this.authkeyState) {\n        this.connectBandApiCall(mac_add, auth_key).then((band)=>{\n          if(band) {\n            //save dtb\n            //assign band info to miband ref\n            for(var key in band) {\n              this.miband[key] = band[key]\n            }\n\n            this.getBandBySerial(band['serial']).then((band)=>{\n              console.log(band)\n              if(!band) { //no band with same serial\n                this.addNewBandDtbApiCall(this.miband).then((band)=>{\n                  if(band) {\n                    this.$session.set('miband', this.miband)\n                    //finished\n                    this.pairingStatus = 'OK'\n                    this.$emit('update-list-display')\n                  }\n                })\n                this.pairingStatus = 'DTB'\n              }\n              else { //this band has been used & added into dtb before\n                this.addAvailableBandDtbApiCall(this.miband).then((band)=>{\n                  if(band) {\n                    this.$session.set('miband', this.miband)\n                    //finished\n                    this.pairingStatus = 'OK'\n                    this.$emit('update-list-display')\n                  }\n                })\n                this.pairingStatus = 'DTB'\n              }\n            })\n          }\n          else {\n            this.pairingStatus = 'ERROR'\n          }\n      \n        })\n        \n        this.pairingStatus = 'PENDING'\n      }\n      \n    }\n  }\n}\n</script>"],"sourceRoot":"src/components/device"}]}