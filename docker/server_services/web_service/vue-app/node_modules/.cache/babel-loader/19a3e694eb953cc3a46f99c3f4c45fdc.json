{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/thread-loader/dist/cjs.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/device/PairDeviceForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/device/PairDeviceForm.vue","mtime":1607343126323},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PairDeviceForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,KAAA,GAAA,gDAAA;;AAEA,UAAA,KAAA,MAAA,CAAA,WAAA,IAAA,EAAA,EAAA;AACA,eAAA,IAAA;AACA;;AACA,aAAA,KAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA,WAAA,CAAA;AACA,KARA;AASA,IAAA,YATA,0BASA;AACA,UAAA,KAAA,MAAA,CAAA,QAAA,IAAA,EAAA,EAAA;AACA,eAAA,IAAA;AACA;;AACA,aAAA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,IAAA,EAAA;AACA,KAdA;AAeA,IAAA,aAfA,2BAeA;AACA,UAAA,KAAA,MAAA,CAAA,WAAA,CAAA,MAAA,IAAA,EAAA,EAAA;AACA,eAAA,sDAAA;AACA;;AACA,aAAA,IAAA;AACA,KApBA;AAqBA,IAAA,cArBA,4BAqBA;AACA,UAAA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,eAAA,uEAAA;AACA;;AACA,aAAA,IAAA;AACA;AA1BA,GADA;AA6BA,EAAA,IA7BA,kBA6BA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AACA,QAAA,WAAA,EAAA,mBADA;AAEA,QAAA,QAAA,EAAA;AAFA,OADA;AAKA,MAAA,aAAA,EAAA,IALA;AAMA,MAAA,cAAA,EAAA,KAAA,UAAA,CAAA,eAAA,CANA;AAOA,MAAA,cAAA,EAAA,KAAA,UAAA,CAAA,eAAA,CAPA;AAQA,MAAA,WAAA,EAAA,KAAA,UAAA,CAAA,YAAA,CARA;AASA,MAAA,WAAA,EAAA,KAAA,UAAA,CAAA,YAAA;AATA,KAAA;AAWA,GAzCA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,kBADA,8BACA,OADA,EACA,QADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,kBAAA,KAAA,CAAA,WAAA,cAAA,KAAA,CAAA,WAAA,oBAAA;AACA,kBAAA,MAAA,EAAA,MADA;AAEA,kBAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AACA,+BAAA,OADA;AAEA,gCAAA;AAFA,mBAAA,CAFA;AAMA,kBAAA,OAAA,EAAA;AAAA,oCAAA;AAAA;AANA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAAA;AAAA,uBAUA,QAAA,CAAA,IAAA,EAVA;;AAAA;AAUA,gBAAA,MAVA;;AAAA,sBAWA,MAAA,CAAA,gBAAA,CAAA,IAAA,WAXA;AAAA;AAAA;AAAA;;AAAA,iDAYA,MAAA,CAAA,WAAA,CAZA;;AAAA;AAAA,iDAcA,KAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBA,gBAAA,OAAA,CAAA,KAAA;;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,KAnBA;AAqBA,IAAA,oBArBA,gCAqBA,MArBA,EAqBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OADA,GACA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,MAAA,EAAA,EADA;AAEA,gBAAA,QAFA,GAEA,EAFA;;AAGA,qBAAA,GAAA,IAAA,MAAA,EAAA;AACA,kBAAA,QAAA,CAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,CAAA;AACA;;AACA,gBAAA,QAAA,CAAA,SAAA,CAAA,GAAA,OAAA;AANA;AAAA;AAAA,uBAQA,KAAA,kBAAA,MAAA,CAAA,cAAA,cAAA,MAAA,CAAA,cAAA,aAAA;AACA,kBAAA,MAAA,EAAA,MADA;AAEA,kBAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CACA,QADA,CAFA;AAKA,kBAAA,OAAA,EAAA;AAAA,oCAAA;AAAA;AALA,iBAAA,CARA;;AAAA;AAQA,gBAAA,QARA;AAAA;AAAA,uBAeA,QAAA,CAAA,IAAA,EAfA;;AAAA;AAeA,gBAAA,MAfA;;AAAA,sBAgBA,MAAA,CAAA,iBAAA,CAAA,IAAA,WAhBA;AAAA;AAAA;AAAA;;AAAA,kDAiBA,MAAA,CAAA,WAAA,CAjBA;;AAAA;AAAA,kDAmBA,KAnBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqBA,gBAAA,OAAA,CAAA,KAAA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA,KA5CA;AA8CA,IAAA,0BA9CA,sCA8CA,MA9CA,EA8CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OADA,GACA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,MAAA,EAAA,EADA;AAEA,gBAAA,OAFA,GAEA,MAAA,CAAA,EAFA;AAGA,gBAAA,QAHA,GAGA,EAHA;;AAIA,qBAAA,GAAA,IAAA,MAAA,EAAA;AACA,kBAAA,QAAA,CAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,CAAA;AACA;;AACA,gBAAA,QAAA,CAAA,SAAA,CAAA,GAAA,OAAA;AAPA;AAAA;AAAA,uBASA,KAAA,kBAAA,MAAA,CAAA,cAAA,cAAA,MAAA,CAAA,cAAA,oBAAA,OAAA,uBAAA;AACA,kBAAA,MAAA,EAAA,KADA;AAEA,kBAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CACA,QADA,CAFA;AAKA,kBAAA,OAAA,EAAA;AAAA,oCAAA;AAAA;AALA,iBAAA,CATA;;AAAA;AASA,gBAAA,QATA;AAAA;AAAA,uBAgBA,QAAA,CAAA,IAAA,EAhBA;;AAAA;AAgBA,gBAAA,MAhBA;;AAAA,sBAiBA,MAAA,CAAA,iBAAA,CAAA,IAAA,WAjBA;AAAA;AAAA;AAAA;;AAAA,kDAkBA,MAAA,CAAA,WAAA,CAlBA;;AAAA;AAAA,kDAoBA,KApBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsBA,gBAAA,OAAA,CAAA,KAAA;;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA,KAtEA;AAwEA,IAAA,eAxEA,2BAwEA,MAxEA,EAwEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MADA,GACA,YAAA,MADA;AAAA;AAAA;AAAA,uBAGA,KAAA,kBAAA,MAAA,CAAA,cAAA,cAAA,MAAA,CAAA,cAAA,mCAAA,MAAA,EAHA;;AAAA;AAGA,gBAAA,QAHA;AAAA;AAAA,uBAIA,QAAA,CAAA,IAAA,EAJA;;AAAA;AAIA,gBAAA,MAJA;;AAAA,sBAKA,MAAA,CAAA,iBAAA,CAAA,IAAA,WALA;AAAA;AAAA;AAAA;;AAAA,kDAMA,MAAA,CAAA,WAAA,CANA;;AAAA;AAAA,kDAQA,KARA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWA,gBAAA,OAAA,CAAA,GAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,KArFA;AAwFA,IAAA,OAxFA,mBAwFA,OAxFA,EAwFA,QAxFA,EAwFA;AAAA;;AACA,UAAA,KAAA,WAAA,IAAA,KAAA,YAAA,EAAA;AACA,aAAA,kBAAA,CAAA,OAAA,EAAA,QAAA,EAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,IAAA,EAAA;AACA;AACA;AACA,iBAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AACA,cAAA,MAAA,CAAA,MAAA,CAAA,GAAA,IAAA,IAAA,CAAA,GAAA,CAAA;AACA;;AAEA,YAAA,MAAA,CAAA,eAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,kBAAA,CAAA,IAAA,EAAA;AAAA;AACA,gBAAA,MAAA,CAAA,oBAAA,CAAA,MAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,sBAAA,MAAA,EAAA;AACA,oBAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,EAAA,MAAA,EADA,CAEA;;;AACA,oBAAA,MAAA,CAAA,aAAA,GAAA,IAAA;;AACA,oBAAA,MAAA,CAAA,KAAA,CAAA,qBAAA;AACA;AACA,iBAPA;;AAQA,gBAAA,MAAA,CAAA,aAAA,GAAA,KAAA;AACA,eAVA,MAWA;AAAA;AACA,oBAAA,IAAA,CAAA,OAAA,EAAA;AAAA;AACA,kBAAA,MAAA,CAAA,aAAA,GAAA,aAAA;AACA,iBAFA,MAGA;AAAA;AACA,kBAAA,MAAA,CAAA,0BAAA,CAAA,IAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,wBAAA,MAAA,EAAA;AACA,sBAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,EAAA,MAAA,EADA,CAEA;;;AACA,sBAAA,MAAA,CAAA,aAAA,GAAA,IAAA;;AACA,sBAAA,MAAA,CAAA,KAAA,CAAA,qBAAA;AACA;AACA,mBAPA;;AAQA,kBAAA,MAAA,CAAA,aAAA,GAAA,KAAA;AACA;AAEA;AACA,aA7BA;AA8BA,WArCA,MAsCA;AACA,YAAA,MAAA,CAAA,aAAA,GAAA,OAAA;AACA;AAEA,SA3CA;AA6CA,aAAA,aAAA,GAAA,SAAA;AACA;AAEA;AA1IA;AA1CA,CAAA","sourcesContent":["<template>\n  <div>\n    <b-card-title class=\"text-center mt-2\">\n      <div v-if=\"pairingStatus === 'OK'\">\n        <b-alert variant=\"success\" show>Pairing succeeded</b-alert>\n      </div>\n      <div v-if=\"pairingStatus === 'ERROR'\">\n        <b-alert variant=\"danger\" show>Pair failed. Please check data correctness or data format</b-alert>\n      </div>\n      <div v-if=\"pairingStatus === 'PENDING'\">\n        <b-alert variant=\"info\" show>Pairing...</b-alert>\n      </div>\n      <div v-if=\"pairingStatus === 'DTB'\">\n        <b-alert variant=\"info\" show>Adding to database</b-alert>\n      </div>\n      <div v-if=\"pairingStatus === 'UNAVAILABLE'\">\n        <b-alert variant=\"warning\" show>Pair failed. This band is in using condition.<br> \n          If you want to pair, please hard reset the band.</b-alert>\n      </div>\n      \n      <b-skeleton-wrapper :loading=\"pairingStatus === 'PENDING' || pairingStatus === 'DTB'\">\n        <template #loading>\n        <b-card>\n          <b-skeleton width=\"85%\"></b-skeleton>\n          <b-skeleton width=\"55%\"></b-skeleton>\n          <b-skeleton width=\"70%\"></b-skeleton>\n        </b-card>\n      </template>\n      <b-form @submit.prevent=\"addBand\" v-if=\"pairingStatus !== 'OK'\">\n          <b-form-group \n            label=\"MAC address\"\n            :invalid-feedback=\"invalidMACadd\"\n            :state=\"macaddState\"\n          >\n            <b-form-input class=\"w-100 mb-1\"\n              :state=\"macaddState\"\n              v-model=\"miband.mac_address\"\n              required\n              placeholder=\"Example: a1:c2:3d:4e:f5:6a\"\n            ></b-form-input>\n          </b-form-group>\n\n          <b-form-group \n            label=\"Authentic key\"\n            :invalid-feedback=\"invalidAuthkey\"\n            :state=\"authkeyState\"\n          >\n            <b-form-input class=\"w-100 mb-1\"\n              :state=\"authkeyState\"\n              v-model=\"miband.auth_key\"\n              required\n              placeholder=\"Example: 8fa9b42078627a654d22beff985655db\"\n            ></b-form-input>\n          </b-form-group>\n          <div>\n              <b-button @click=\"addBand(miband.mac_address, miband.auth_key)\" variant=\"outline-success\" class=\"mr-1\">➕</b-button>\n              <b-button @click=\"$emit('exit-add-band-mode')\" variant=\"outline-danger\">✖️</b-button>\n          </div>\n      </b-form>\n      </b-skeleton-wrapper>\n    </b-card-title>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  computed: {\n    macaddState() {\n      var regex = /^(([A-Fa-f0-9]{2}[:]){5}[A-Fa-f0-9]{2}[,]?)+$/i;\n      \n      if(this.miband.mac_address=='') {\n        return null\n      }\n      return regex.test(this.miband.mac_address)\n    },\n    authkeyState() {\n      if(this.miband.auth_key=='') {\n        return null\n      }\n      return this.miband.auth_key.length == 32\n    },\n    invalidMACadd() {\n      if (this.miband.mac_address.length >= 17) {\n        return  'Please check your format. Example: a1:b2:c3:d4:e5:f6'\n      }\n      return null\n    },\n    invalidAuthkey() {\n      if (this.miband.auth_key.length > 0) {\n        return  'Authentic key length is 32. Example: 8fa9b42078627a654d22beff985655db'\n      }\n      return null\n    },\n  },\n  data() {\n    return {\n      miband: {\n          mac_address: 'E3:07:72:26:D4:6B',\n          auth_key: '2f20ba44fdcf54ca0c2c37cad1f85487'\n      },\n      pairingStatus: null,\n      miband_db_host: this.$api_hosts['miband_db_api'],\n      miband_db_port: this.$api_ports['miband_db_api'],\n      miband_host: this.$api_hosts['miband_api'],\n      miband_port: this.$api_ports['miband_api']\n    }\n  },\n  methods: {\n    async connectBandApiCall(mac_add, auth_key) {\n        try {\n            const response = await fetch(`http://${this.miband_host}:${this.miband_port}/band/connect`, {\n            method: 'POST',\n            body: JSON.stringify({\n                'mac_add': mac_add,\n                'auth_key': auth_key\n                }),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            })\n            const result = await response.json()\n            if(result['connect-result']=='succeeded') {\n              return result['band-info']\n            }\n            else return false\n        } catch (error) {\n            console.error(error)\n        }\n    },\n\n    async addNewBandDtbApiCall(miband) {\n        const user_id = this.$session.get('user').id\n        const bodydata = {}\n        for (var key in miband) {\n          bodydata[key] = miband[key]\n        }\n        bodydata['user_id'] = user_id\n        try {\n            const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands`, {\n            method: 'POST',\n            body: JSON.stringify(\n                bodydata\n                ),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            })\n            const result = await response.json()\n            if(result['add-band-result']=='succeeded') {\n              return result['band-info']\n            }\n            else return false\n        } catch (error) {\n            console.error(error)\n        }\n    },\n\n    async addAvailableBandDtbApiCall(miband) {\n        const user_id = this.$session.get('user').id\n        const band_id = miband.id\n        const bodydata = {}\n        for (var key in miband) {\n          bodydata[key] = miband[key]\n        }\n        bodydata['user_id'] = user_id\n        try {\n            const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands/${band_id}/update-new-user`, {\n            method: 'PUT',\n            body: JSON.stringify(\n                bodydata\n                ),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            })\n            const result = await response.json()\n            if(result['add-band-result']=='succeeded') {\n              return result['band-info']\n            }\n            else return false\n        } catch (error) {\n            console.error(error)\n        }\n    },\n\n    async getBandBySerial(serial) {\n      const params = 'serial='+serial\n      try {\n        const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands/find-by-serial?${params}`)\n        const result = await response.json()\n        if(result['get-band-result']=='succeeded'){\n          return result['band-info']\n        }\n        else return false\n      }\n      catch (error){\n        console.log(error)\n      }\n    },\n    \n\n    addBand(mac_add, auth_key) {\n      if(this.macaddState && this.authkeyState) {\n        this.connectBandApiCall(mac_add, auth_key).then((band)=>{\n          if(band) {\n            //save dtb\n            //assign band info to miband ref\n            for(var key in band) {\n              this.miband[key] = band[key]\n            }\n\n            this.getBandBySerial(band['serial']).then((band)=>{\n              if(!band) { //no band with same serial\n                this.addNewBandDtbApiCall(this.miband).then((result)=>{\n                  if(result) {\n                    this.$session.set('miband', result)\n                    //finished\n                    this.pairingStatus = 'OK'\n                    this.$emit('update-list-display')\n                  }\n                })\n                this.pairingStatus = 'DTB'\n              }\n              else { //this band has been used & added into dtb before\n                if(band.user_id) { //this band is currently paired by an user\n                  this.pairingStatus = 'UNAVAILABLE'\n                }\n                else { //this band is currently free\n                  this.addAvailableBandDtbApiCall(band).then((result)=>{\n                    if(result) {\n                      this.$session.set('miband', result)\n                      //finished\n                      this.pairingStatus = 'OK'\n                      this.$emit('update-list-display')\n                    }\n                  })\n                  this.pairingStatus = 'DTB'\n                }\n                \n              }\n            })\n          }\n          else {\n            this.pairingStatus = 'ERROR'\n          }\n      \n        })\n        \n        this.pairingStatus = 'PENDING'\n      }\n      \n    }\n  }\n}\n</script>"],"sourceRoot":"src/components/device"}]}