{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/DeviceManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/DeviceManagement.vue","mtime":1607529212872},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2dyYWNlL3BqL21pY3Jvc2VydmljZXNfbWliYW5kNF9oZWFsdGhtb25pdG9yL2Zyb250ZW5kL3Z1ZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgUGFpckRldmljZUZvcm0gZnJvbSAnQC9jb21wb25lbnRzL2RldmljZS9QYWlyRGV2aWNlRm9ybSc7CmltcG9ydCBEZXZpY2VMaXN0IGZyb20gJ0AvY29tcG9uZW50cy9kZXZpY2UvRGV2aWNlTGlzdCc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBQYWlyRGV2aWNlRm9ybTogUGFpckRldmljZUZvcm0sCiAgICBEZXZpY2VMaXN0OiBEZXZpY2VMaXN0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWRkQmFuZE1vZGU6IGZhbHNlLAogICAgICBsaXN0a2V5OiBmYWxzZSwKICAgICAgbWliYW5kX2RiX2hvc3Q6IHRoaXMuJGFwaV9ob3N0c1snbWliYW5kX2RiX2FwaSddLAogICAgICBtaWJhbmRfZGJfcG9ydDogdGhpcy4kYXBpX3BvcnRzWydtaWJhbmRfZGJfYXBpJ10sCiAgICAgIG1pYmFuZF9ob3N0OiB0aGlzLiRhcGlfaG9zdHNbJ21pYmFuZF9hcGknXSwKICAgICAgbWliYW5kX3BvcnQ6IHRoaXMuJGFwaV9wb3J0c1snbWliYW5kX2FwaSddCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZW50ZXJBZGRCYW5kTW9kZTogZnVuY3Rpb24gZW50ZXJBZGRCYW5kTW9kZSgpIHsKICAgICAgdGhpcy5hZGRCYW5kTW9kZSA9IHRydWU7CiAgICB9LAogICAgZXhpdEFkZEJhbmRNb2RlOiBmdW5jdGlvbiBleGl0QWRkQmFuZE1vZGUoKSB7CiAgICAgIHRoaXMuYWRkQmFuZE1vZGUgPSBmYWxzZTsKICAgIH0sCiAgICB1cGRhdGVMaXN0RGlzcGxheTogZnVuY3Rpb24gdXBkYXRlTGlzdERpc3BsYXkoKSB7CiAgICAgIHRoaXMubGlzdGtleSA9ICF0aGlzLmxpc3RrZXk7CiAgICB9LAogICAgdW5wYWlyQmFuZERiQXBpQ2FsbDogZnVuY3Rpb24gdW5wYWlyQmFuZERiQXBpQ2FsbCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGJhbmRpZCwgcmVzcG9uc2UsIHJlc3VsdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBiYW5kaWQgPSBfdGhpcy4kc2Vzc2lvbi5nZXQoJ21pYmFuZCcpLmlkOwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovLyIuY29uY2F0KF90aGlzLm1pYmFuZF9kYl9ob3N0LCAiOiIpLmNvbmNhdChfdGhpcy5taWJhbmRfZGJfcG9ydCwgIi9iYW5kcy8iKS5jb25jYXQoYmFuZGlkLCAiL3VucGFpciIpKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlc3VsdFsndW5wYWlyLWJhbmQtcmVzdWx0J10gPT0gInN1Y2NlZWRlZCIpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgdHJ1ZSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDE1XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBkaXNjb25uZWN0QXBpQ2FsbDogZnVuY3Rpb24gZGlzY29ubmVjdEFwaUNhbGwoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovLyIuY29uY2F0KF90aGlzMi5taWJhbmRfaG9zdCwgIjoiKS5jb25jYXQoX3RoaXMyLm1pYmFuZF9wb3J0LCAiL2JhbmQvZGlzY29ubmVjdCIpKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3VsdCk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDEwXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByZW1vdmVCYW5kOiBmdW5jdGlvbiByZW1vdmVCYW5kKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIC8vIG5lZWQgZGVsZXRlIGFsbCBsb2dzCiAgICAgIHRoaXMuZGlzY29ubmVjdEFwaUNhbGwoKTsKICAgICAgdGhpcy51bnBhaXJCYW5kRGJBcGlDYWxsKCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMzLiRzZXNzaW9uLnJlbW92ZSgnbWliYW5kJyk7CgogICAgICAgIF90aGlzMy51cGRhdGVMaXN0RGlzcGxheSgpOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["DeviceManagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,cAAA,MAAA,oCAAA;AACA,OAAA,UAAA,MAAA,gCAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,cAAA,EAAA,cADA;AAEA,IAAA,UAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,cAAA,EAAA,KAAA,UAAA,CAAA,eAAA,CAHA;AAIA,MAAA,cAAA,EAAA,KAAA,UAAA,CAAA,eAAA,CAJA;AAKA,MAAA,WAAA,EAAA,KAAA,UAAA,CAAA,YAAA,CALA;AAMA,MAAA,WAAA,EAAA,KAAA,UAAA,CAAA,YAAA;AANA,KAAA;AAQA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,eAJA,6BAIA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,KANA;AAQA,IAAA,iBARA,+BAQA;AACA,WAAA,OAAA,GAAA,CAAA,KAAA,OAAA;AACA,KAVA;AAYA,IAAA,mBAZA,iCAYA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MADA,GACA,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,EAAA,EADA;AAAA;AAAA;AAAA,uBAGA,KAAA,kBAAA,KAAA,CAAA,cAAA,cAAA,KAAA,CAAA,cAAA,oBAAA,MAAA,aAHA;;AAAA;AAGA,gBAAA,QAHA;AAAA;AAAA,uBAIA,QAAA,CAAA,IAAA,EAJA;;AAAA;AAIA,gBAAA,MAJA;;AAAA,sBAOA,MAAA,CAAA,oBAAA,CAAA,IAAA,WAPA;AAAA;AAAA;AAAA;;AAAA,iDAQA,IARA;;AAAA;AAAA,iDASA,KATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,KAzBA;AA2BA,IAAA,iBA3BA,+BA2BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,kBAAA,MAAA,CAAA,WAAA,cAAA,MAAA,CAAA,WAAA,sBAFA;;AAAA;AAEA,gBAAA,QAFA;AAAA;AAAA,uBAGA,QAAA,CAAA,IAAA,EAHA;;AAAA;AAGA,gBAAA,MAHA;AAAA,kDAIA,MAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,KAnCA;AAqCA,IAAA,UArCA,wBAqCA;AAAA;;AACA;AACA,WAAA,iBAAA;AACA,WAAA,mBAAA,GAAA,IAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA;;AACA,QAAA,MAAA,CAAA,iBAAA;AACA,OAHA;AAIA;AA5CA;AAfA,CAAA","sourcesContent":["<template>\n    <b-card title=\"My device\">\n        <b-button v-if=\"$session.get('miband')==undefined\" \n            variant=\"outline-primary\" class=\"w-100\" \n            @click=\"enterAddBandMode\"\n        >+ Add Miband</b-button>\n        <pair-device-form v-if=\"addBandMode\" \n            @exit-add-band-mode=\"exitAddBandMode\"\n            @update-list-display=\"updateListDisplay\"\n        />\n        <device-list class=\"mt-1\" :key=\"listkey\"\n            @unpair-band=\"removeBand\"\n            @update-list-display=\"updateListDisplay\"\n        />\n    </b-card>\n</template>\n\n<script>\nimport PairDeviceForm from '@/components/device/PairDeviceForm'\nimport DeviceList from '@/components/device/DeviceList'\n\nexport default {\n    components: { \n        PairDeviceForm,\n        DeviceList\n    },\n    data() {\n        return {\n            addBandMode: false,\n            listkey: false,\n            miband_db_host: this.$api_hosts['miband_db_api'],\n            miband_db_port: this.$api_ports['miband_db_api'],\n            miband_host: this.$api_hosts['miband_api'],\n            miband_port: this.$api_ports['miband_api']\n        }\n    },\n    methods: {\n        enterAddBandMode() {\n            this.addBandMode = true\n        },\n        exitAddBandMode() {\n            this.addBandMode = false\n        },\n\n        updateListDisplay() {\n            this.listkey = !this.listkey\n        },\n\n        async unpairBandDbApiCall() {\n            const bandid = this.$session.get('miband').id\n            try {\n                const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands/${bandid}/unpair`)\n                const result = await response.json()\n\n                // do something with `data`\n                if(result['unpair-band-result']==\"succeeded\")\n                    return true\n                else return false\n            } catch (error) {\n                // do something with `error`\n            }\n        },\n\n        async disconnectApiCall() {\n            try {\n                const response = await fetch(`http://${this.miband_host}:${this.miband_port}/band/disconnect`)\n                const result = await response.json()\n                return result\n            } catch (error) {\n                // do something with `error`\n            }\n        },\n\n        removeBand() {\n            // need delete all logs\n            this.disconnectApiCall()\n            this.unpairBandDbApiCall().then(()=>{\n                this.$session.remove('miband')\n                this.updateListDisplay()\n            })\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components"}]}