{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/Data.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/Data.vue","mtime":1607175226173},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2dyYWNlL3BqL21pY3Jvc2VydmljZXNfbWliYW5kNF9oZWFsdGhtb25pdG9yL2Zyb250ZW5kL3Z1ZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgR2VuZXJhbERhdGEgZnJvbSAnQC9jb21wb25lbnRzL2RhdGEvR2VuZXJhbERhdGEnOwppbXBvcnQgSGVhcnRSYXRlIGZyb20gJ0AvY29tcG9uZW50cy9kYXRhL0hlYXJ0UmF0ZSc7CmltcG9ydCBTdGVwQ291bnRzIGZyb20gJ0AvY29tcG9uZW50cy9kYXRhL1N0ZXBDb3VudHMnOwp2YXIgbWliYW5kX2RiX2hvc3QgPSAnMTkyLjE2OC4xMS4xMjInOwp2YXIgbWliYW5kX2RiX3BvcnQgPSAnNTAwMic7CnZhciBtaWJhbmRfaG9zdCA9ICcxOTIuMTY4LjExLjEyMic7CnZhciBtaWJhbmRfcG9ydCA9ICc1MDAxJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEdlbmVyYWxEYXRhOiBHZW5lcmFsRGF0YSwKICAgIEhlYXJ0UmF0ZTogSGVhcnRSYXRlLAogICAgU3RlcENvdW50czogU3RlcENvdW50cwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1pYmFuZDogdGhpcy4kc2Vzc2lvbi5nZXQoJ21pYmFuZCcpLAogICAgICBocl9rZXk6IGZhbHNlLAogICAgICBjb25uZWN0U3RhdHVzOiAnJywKICAgICAgZ2RrZXk6IGZhbHNlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdmFyIG1pYmFuZCA9IHRoaXMubWliYW5kOwoKICAgIGlmIChtaWJhbmQgPT0gdW5kZWZpbmVkKSB7CiAgICAgIHRoaXMuZ2V0QmFuZEluZm8oKS50aGVuKGZ1bmN0aW9uIChiYW5kaW5mbykgewogICAgICAgIF90aGlzLiRzZXNzaW9uLnNldCgnbWliYW5kJywgYmFuZGluZm8pOwoKICAgICAgICBfdGhpcy4kZm9yY2VVcGRhdGU7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0QmFuZEluZm86IGZ1bmN0aW9uIGdldEJhbmRJbmZvKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHVzZXJpZCwgcmVzcG9uc2UsIHJlc3VsdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB1c2VyaWQgPSBfdGhpczIuJHNlc3Npb24uZ2V0KCd1c2VyJykuaWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwOi8vIi5jb25jYXQobWliYW5kX2RiX2hvc3QsICI6IikuY29uY2F0KG1pYmFuZF9kYl9wb3J0LCAiL2dldGJhbmRieXVzZXIvIikuY29uY2F0KHVzZXJpZCkpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXN1bHQpOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgMTFdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGRpc2Nvbm5lY3RBcGlDYWxsOiBmdW5jdGlvbiBkaXNjb25uZWN0QXBpQ2FsbCgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovLyIuY29uY2F0KG1pYmFuZF9ob3N0LCAiOiIpLmNvbmNhdChtaWJhbmRfcG9ydCwgIi9kaXNjb25uZWN0IikpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3VsdCk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDExOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDExXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjb25uZWN0QXBpQ2FsbDogZnVuY3Rpb24gY29ubmVjdEFwaUNhbGwobWFjX2FkZCwgYXV0aF9rZXkpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovLyIuY29uY2F0KG1pYmFuZF9ob3N0LCAiOiIpLmNvbmNhdChtaWJhbmRfcG9ydCwgIi9jb25uZWN0IiksIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgICAgICAnbWFjX2FkZCc6IG1hY19hZGQsCiAgICAgICAgICAgICAgICAgICAgJ2F1dGhfa2V5JzogYXV0aF9rZXkKICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCEocmVzdWx0Wydjb25uZWN0LXJlc3VsdCddID09ICdzdWNjZWVkZWQnKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDExOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzdWx0WydiYW5kLWluZm8nXSk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgZmFsc2UpOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxNzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxNDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQzLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCAxNF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcmVjb25uZWN0OiBmdW5jdGlvbiByZWNvbm5lY3QoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIG1pYmFuZCA9IHRoaXMubWliYW5kOwogICAgICB0aGlzLmRpc2Nvbm5lY3RBcGlDYWxsKCkudGhlbih0aGlzLmNvbm5lY3RBcGlDYWxsKG1pYmFuZC5tYWNfYWRkcmVzcywgbWliYW5kLmF1dGhfa2V5KS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICBpZiAocmVzdWx0KSB7CiAgICAgICAgICBfdGhpczMuY29ubmVjdFN0YXR1cyA9ICdPSyc7CiAgICAgICAgICBfdGhpczMuZ2RrZXkgPSAhX3RoaXMzLmdka2V5OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczMuY29ubmVjdFN0YXR1cyA9ICdFUlJPUic7CiAgICAgICAgfQogICAgICB9KSk7CiAgICAgIHRoaXMuY29ubmVjdFN0YXR1cyA9ICdQRU5ESU5HJzsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Data.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"w-50 mx-auto mt-3\">\n        <b-card no-body >\n          <b-button @click=\"reconnect\" variant=\"primary\">Reconnect</b-button>\n          <div v-if=\"connectStatus === 'ERROR'\">\n            <b-alert variant=\"danger\" show>Error happened while connecting. Please try again or refresh your Bluetooth connection</b-alert>\n          </div>\n          <div v-if=\"connectStatus === 'PENDING'\">\n            <b-alert variant=\"info\" show>Connecting...</b-alert>\n          </div>\n          <b-tabs card>\n            <b-tab title=\"General Information\" active> \n              <GeneralData :key='gdkey'/>\n            </b-tab>\n            <b-tab title=\"Step Counts\">\n              <StepCounts />\n            </b-tab>\n            <b-tab title=\"Heart Rate\">\n              <HeartRate />\n            </b-tab>\n        </b-tabs>\n      </b-card>\n    </div>\n</template>\n\n<script>\nimport GeneralData from '@/components/data/GeneralData'\nimport HeartRate from '@/components/data/HeartRate'\nimport StepCounts from '@/components/data/StepCounts'\n\nconst miband_db_host='192.168.11.122'\nconst miband_db_port='5002'\nconst miband_host='192.168.11.122'\nconst miband_port='5001'\n\n\nexport default {\n  components: {\n    GeneralData, \n    HeartRate,\n    StepCounts\n  },\n  data() {\n    return {\n      miband: this.$session.get('miband'),\n      hr_key: false,\n      connectStatus: '',\n      gdkey: false\n    }\n  },\n  created() {\n    var miband = this.miband\n    if(miband==undefined) {\n      this.getBandInfo().then((bandinfo)=>{\n        this.$session.set('miband', bandinfo)\n        this.$forceUpdate\n      })\n    }\n  },\n\n  methods: {\n    async getBandInfo() {\n      const userid = this.$session.get('user').id\n      try {\n          const response = await fetch(`http://${miband_db_host}:${miband_db_port}/getbandbyuser/${userid}`)\n          const result = await response.json()\n          return result\n      } catch (error) {\n          // do something with `error`\n      }\n    },\n\n    async disconnectApiCall() {\n      try {\n          const response = await fetch(`http://${miband_host}:${miband_port}/disconnect`)\n          const result = await response.json()\n          console.log(result)\n          return result\n      } catch (error) {\n          // do something with `error`\n      }\n    },\n\n    async connectApiCall(mac_add, auth_key) {\n      try {\n          const response = await fetch(`http://${miband_host}:${miband_port}/connect`, {\n          method: 'POST',\n          body: JSON.stringify({\n              'mac_add': mac_add,\n              'auth_key': auth_key\n              }),\n          headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          })\n          const result = await response.json()\n          if(result['connect-result']=='succeeded') {\n            return result['band-info']\n          }\n          else return false\n      } catch (error) {\n          console.error(error)\n      }\n    },\n\n    reconnect() {\n      var miband = this.miband\n      this.disconnectApiCall().then(\n        this.connectApiCall(miband.mac_address, miband.auth_key).then((result)=>{\n          if(result) {\n            this.connectStatus='OK'\n            this.gdkey = !this.gdkey\n          }\n          else {\n            this.connectStatus='ERROR'\n          }\n        })\n      )\n      this.connectStatus='PENDING'\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}