{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/eslint-loader/index.js??ref--13-0!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/functions/User.js","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/functions/User.js","mtime":1608327825833},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2dyYWNlL3BqL21pY3Jvc2VydmljZXNfbWliYW5kNF9oZWFsdGhtb25pdG9yL2Zyb250ZW5kL3Z1ZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgeyB1c2VyX2RiX2FwaV9ob3N0IGFzIHVzZXJfZGJfaG9zdCwgdXNlcl9kYl9hcGlfcG9ydCBhcyB1c2VyX2RiX3BvcnQgfSBmcm9tICcuL0FwaUNvbmZpZy5qcyc7CmV4cG9ydCBmdW5jdGlvbiBzaWduaW5BcGlDYWxsKF94LCBfeDIpIHsKICByZXR1cm4gX3NpZ25pbkFwaUNhbGwuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX3NpZ25pbkFwaUNhbGwoKSB7CiAgX3NpZ25pbkFwaUNhbGwgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoZW1haWwsIHBhc3N3b3JkKSB7CiAgICB2YXIgcmVzcG9uc2UsIHJlc3VsdDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gZmV0Y2goImh0dHA6Ly8iLmNvbmNhdCh1c2VyX2RiX2hvc3QsICI6IikuY29uY2F0KHVzZXJfZGJfcG9ydCwgIi91c2Vycy9sb2dpbiIpLCB7CiAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgJ2VtYWlsJzogZW1haWwsCiAgICAgICAgICAgICAgICAncGFzc3dvcmQnOiBwYXNzd29yZAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICBpZiAoIShyZXN1bHRbJ2xvZ2luLXJlc3VsdCddID09ICdzdWNjZWVkZWQnKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXN1bHRbJ3VzZXInXSk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEyOwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgMTJdXSk7CiAgfSkpOwogIHJldHVybiBfc2lnbmluQXBpQ2FsbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpleHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVFbWFpbEFwaUNhbGwoX3gzKSB7CiAgcmV0dXJuIF92YWxpZGF0ZUVtYWlsQXBpQ2FsbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfdmFsaWRhdGVFbWFpbEFwaUNhbGwoKSB7CiAgX3ZhbGlkYXRlRW1haWxBcGlDYWxsID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihlbWFpbCkgewogICAgdmFyIHBhcmFtcywgcmVzcG9uc2UsIHJlc3VsdDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHBhcmFtcyA9ICdlbWFpbD0nICsgZW1haWw7CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICByZXR1cm4gZmV0Y2goImh0dHA6Ly8iLmNvbmNhdCh1c2VyX2RiX2hvc3QsICI6IikuY29uY2F0KHVzZXJfZGJfcG9ydCwgIi91c2Vycy9maW5kLWJ5LWVtYWlsPyIpLmNvbmNhdChwYXJhbXMpKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNzsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgaWYgKCEocmVzdWx0LnVzZXIgIT0gbnVsbCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEwOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgZmFsc2UpOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCB0cnVlKTsKCiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEzOwogICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQyLnQwKTsKCiAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCAxM11dKTsKICB9KSk7CiAgcmV0dXJuIF92YWxpZGF0ZUVtYWlsQXBpQ2FsbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpleHBvcnQgZnVuY3Rpb24gYWRkVXNlckFwaUNhbGwoX3g0KSB7CiAgcmV0dXJuIF9hZGRVc2VyQXBpQ2FsbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfYWRkVXNlckFwaUNhbGwoKSB7CiAgX2FkZFVzZXJBcGlDYWxsID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyh1c2VyKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwOi8vIi5jb25jYXQodXNlcl9kYl9ob3N0LCAiOiIpLmNvbmNhdCh1c2VyX2RiX3BvcnQsICIvdXNlcnMiKSwgewogICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHVzZXIpLAogICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA4OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNTsKICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwogICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0My50MCk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA1XV0pOwogIH0pKTsKICByZXR1cm4gX2FkZFVzZXJBcGlDYWxsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0="},{"version":3,"sources":["/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/functions/User.js"],"names":["user_db_api_host","user_db_host","user_db_api_port","user_db_port","signinApiCall","email","password","fetch","method","body","JSON","stringify","headers","response","json","result","console","error","validateEmailApiCall","params","user","addUserApiCall"],"mappings":";;;;AAAA,SAAQA,gBAAgB,IAAIC,YAA5B,EAA0CC,gBAAgB,IAAIC,YAA9D,QAAiF,gBAAjF;AAEA,gBAAsBC,aAAtB;AAAA;AAAA;;;2EAAO,iBAA6BC,KAA7B,EAAoCC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEwBC,KAAK,kBAAWN,YAAX,cAA2BE,YAA3B,mBAAuD;AACnFK,cAAAA,MAAM,EAAE,MAD2E;AAEnFC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,yBAASN,KADQ;AAEjB,4BAAYC;AAFK,eAAf,CAF6E;AAMnFM,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB;AAN0E,aAAvD,CAF7B;;AAAA;AAEOC,YAAAA,QAFP;AAAA;AAAA,mBAUsBA,QAAQ,CAACC,IAAT,EAVtB;;AAAA;AAUOC,YAAAA,MAVP;;AAAA,kBAWKA,MAAM,CAAC,cAAD,CAAN,IAAwB,WAX7B;AAAA;AAAA;AAAA;;AAAA,6CAYQA,MAAM,CAAC,MAAD,CAZd;;AAAA;AAAA,6CAeQ,KAfR;;AAAA;AAAA;AAAA;AAiBCC,YAAAA,OAAO,CAACC,KAAR;;AAjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAqBP,gBAAsBC,oBAAtB;AAAA;AAAA;;;kFAAO,kBAAoCb,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AACGc,YAAAA,MADH,GACY,WAASd,KADrB;AAAA;AAAA;AAAA,mBAGwBE,KAAK,kBAAWN,YAAX,cAA2BE,YAA3B,kCAA+DgB,MAA/D,EAH7B;;AAAA;AAGON,YAAAA,QAHP;AAAA;AAAA,mBAIsBA,QAAQ,CAACC,IAAT,EAJtB;;AAAA;AAIOC,YAAAA,MAJP;;AAAA,kBAKKA,MAAM,CAACK,IAAP,IAAa,IALlB;AAAA;AAAA;AAAA;;AAAA,8CAMQ,KANR;;AAAA;AAAA,8CAQQ,IARR;;AAAA;AAAA;AAAA;AAUCJ,YAAAA,OAAO,CAACC,KAAR;;AAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAcP,gBAAsBI,cAAtB;AAAA;AAAA;;;4EAAO,kBAA8BD,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEOb,KAAK,kBAAWN,YAAX,cAA2BE,YAA3B,aAAiD;AAC5DK,cAAAA,MAAM,EAAE,MADoD;AAE5DC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeS,IAAf,CAFsD;AAG5DR,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB;AAHmD,aAAjD,CAFZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQCI,YAAAA,OAAO,CAACC,KAAR;;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {user_db_api_host as user_db_host, user_db_api_port as user_db_port} from './ApiConfig.js'\n\nexport async function signinApiCall(email, password) {\n    try {\n        const response = await fetch(`http://${user_db_host}:${user_db_port}/users/login`, {\n        method: 'POST',\n        body: JSON.stringify({\n            'email': email,\n            'password': password\n            }),\n        headers: { 'Content-type': 'application/json; charset=UTF-8' },\n        })\n        const result = await response.json()\n        if (result['login-result']=='succeeded') { //sign in successfully\n        return result['user']\n        }\n        // if signin failed\n        return false\n    } catch (error) {\n        console.error(error)\n    }\n}\n\nexport async function validateEmailApiCall(email) {\n    const params = 'email='+email\n    try {\n        const response = await fetch(`http://${user_db_host}:${user_db_port}/users/find-by-email?${params}`)\n        const result = await response.json()\n        if (result.user!=null) {\n        return false\n        }\n        return true\n    } catch (error) {\n        console.error(error)\n    }\n}\n\nexport async function addUserApiCall(user) {\n    try {\n        await fetch(`http://${user_db_host}:${user_db_port}/users`, {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers: { 'Content-type': 'application/json; charset=UTF-8' },\n        })\n    } catch (error) {\n        console.error(error)\n    }\n}\n  "]}]}