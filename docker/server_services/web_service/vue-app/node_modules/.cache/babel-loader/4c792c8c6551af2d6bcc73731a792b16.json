{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/data/StepCounts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/data/StepCounts.vue","mtime":1607182639598},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2dyYWNlL3BqL21pY3Jvc2VydmljZXNfbWliYW5kNF9oZWFsdGhtb25pdG9yL2Zyb250ZW5kL3Z1ZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgRGF0YUNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9kYXRhL0RhdGFDaGFydCc7CnZhciB0b2RheSA9IG5ldyBEYXRlKCk7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBEYXRhQ2hhcnQ6IERhdGFDaGFydAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFjdGl2aXR5ZGF0YToge30sCiAgICAgIHdob2xlZGF5RGF0YToge30sCiAgICAgIGhvdXJEYXRhOiB7fSwKICAgICAgbGFiZWxzOiBbXSwKICAgICAgZGF0YTogW10sCiAgICAgIG1vZGU6IC0xLAogICAgICBkYXRldmFsdWU6IHRvZGF5LmdldEZ1bGxZZWFyKCkgKyAnLScgKyBTdHJpbmcodG9kYXkuZ2V0TW9udGgoKSArIDEpICsgJy0nICsgdG9kYXkuZ2V0RGF0ZSgpLAogICAgICBob3VydmFsdWU6IG51bGwsCiAgICAgIGNoYXJ0a2V5OiBmYWxzZSwKICAgICAgZ2V0RGF0YVN0YXR1czogJycsCiAgICAgIG1pYmFuZF9kYl9ob3N0OiB0aGlzLiRhcGlfaG9zdHNbJ21pYmFuZF9kYl9hcGknXSwKICAgICAgbWliYW5kX2RiX3BvcnQ6IHRoaXMuJGFwaV9wb3J0c1snbWliYW5kX2RiX2FwaSddCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0RGF0YWJ5RGF0ZSh0aGlzLmRhdGV2YWx1ZSk7CiAgICB0aGlzLmdldFN0ZXBzRGF0YSgpOyAvLyB0aGlzLmNyZWF0ZUNoYXJ0RGF0YSgpCiAgICAvLyB0aGlzLmNoYXJ0a2V5ID0gIXRoaXMuY2hhcnRrZXkKICB9LAogIHdhdGNoOiB7CiAgICBkYXRldmFsdWU6IGZ1bmN0aW9uIGRhdGV2YWx1ZSgpIHsKICAgICAgdGhpcy5nZXREYXRhYnlEYXRlKHRoaXMuZGF0ZXZhbHVlKTsKICAgIH0sCiAgICBnZXREYXRhU3RhdHVzOiBmdW5jdGlvbiBnZXREYXRhU3RhdHVzKCkgewogICAgICBpZiAodGhpcy5nZXREYXRhU3RhdHVzID09ICdPSycpIHsKICAgICAgICB0aGlzLmdldFN0ZXBzRGF0YSgpOwogICAgICAgIHRoaXMuY3JlYXRlQ2hhcnREYXRhKCk7CiAgICAgIH0KICAgIH0sCiAgICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgICB0aGlzLmNoYXJ0a2V5ID0gIXRoaXMuY2hhcnRrZXk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRTdGVwc0RhdGE6IGZ1bmN0aW9uIGdldFN0ZXBzRGF0YSgpIHsKICAgICAgdmFyIGxvZ3MgPSB0aGlzLmFjdGl2aXR5ZGF0YTsKICAgICAgdmFyIGhvdXJEYXRhID0ge307CgogICAgICBmb3IgKHZhciBpIGluIGxvZ3MpIHsKICAgICAgICB2YXIgdGltZXN0YW1wID0gbG9nc1tpXS50aW1lc3RhbXA7CiAgICAgICAgdmFyIHRtcCA9IG5ldyBEYXRlKHRpbWVzdGFtcCk7CiAgICAgICAgdmFyIGhvdXIgPSB0bXAuZ2V0SG91cnMoKTsKICAgICAgICB2YXIgbWludXRlID0gdG1wLmdldE1pbnV0ZXMoKTsgLy8gZGF0YU9mSG91clsiYXNkIl0gPSAiYXNkIgoKICAgICAgICBpZiAoaG91ckRhdGFbU3RyaW5nKGhvdXIpXSA9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIGhvdXJEYXRhW1N0cmluZyhob3VyKV0gPSB7fTsKICAgICAgICAgIGhvdXJEYXRhW1N0cmluZyhob3VyKV1bJ3N1bSddID0gMDsKICAgICAgICB9CgogICAgICAgIHZhciBzdGVwcyA9IGxvZ3NbaV0uc3RlcHM7CiAgICAgICAgaG91ckRhdGFbU3RyaW5nKGhvdXIpXVtTdHJpbmcobWludXRlKV0gPSBzdGVwczsKICAgICAgICBob3VyRGF0YVtTdHJpbmcoaG91cildWydzdW0nXSArPSBzdGVwczsKICAgICAgfQoKICAgICAgdmFyIHdob2xlZGF5RGF0YSA9IHt9OwoKICAgICAgZm9yICh2YXIgaCA9IDA7IGggPCAyNDsgaCsrKSB7CiAgICAgICAgaWYgKGhvdXJEYXRhW2hdICE9IHVuZGVmaW5lZCkgd2hvbGVkYXlEYXRhW2hdID0gaG91ckRhdGFbaF1bJ3N1bSddO2Vsc2Ugd2hvbGVkYXlEYXRhW2hdID0gdW5kZWZpbmVkOwogICAgICB9CgogICAgICB0aGlzLndob2xlZGF5RGF0YSA9IHdob2xlZGF5RGF0YTsKICAgICAgdGhpcy5ob3VyRGF0YSA9IGhvdXJEYXRhOwogICAgfSwKICAgIGNyZWF0ZUNoYXJ0RGF0YTogZnVuY3Rpb24gY3JlYXRlQ2hhcnREYXRhKG1vZGUpIHsKICAgICAgdGhpcy5sYWJlbHMgPSBbXTsKICAgICAgdGhpcy5kYXRhID0gW107CiAgICAgIHZhciBoOwoKICAgICAgaWYgKG1vZGUgPT0gbnVsbCkgewogICAgICAgIGZvciAoaCA9IDA7IGggPCAyNDsgaCsrKSB7CiAgICAgICAgICB0aGlzLmxhYmVscy5wdXNoKFN0cmluZyhoKSArICc6MDAnKTsKICAgICAgICAgIHRoaXMuZGF0YS5wdXNoKHRoaXMud2hvbGVkYXlEYXRhW2hdKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaCA9IG1vZGU7CiAgICAgICAgdmFyIG1pbnV0ZTsKCiAgICAgICAgZm9yICh2YXIgbSA9IDA7IG0gPCA2MDsgbSsrKSB7CiAgICAgICAgICBpZiAoU3RyaW5nKG0pLmxlbmd0aCA8IDIpIHsKICAgICAgICAgICAgbWludXRlID0gJzAnICsgU3RyaW5nKG0pOwogICAgICAgICAgfSBlbHNlIG1pbnV0ZSA9IG07CgogICAgICAgICAgdGhpcy5sYWJlbHMucHVzaChTdHJpbmcoaCkgKyAnOicgKyBTdHJpbmcobWludXRlKSk7CgogICAgICAgICAgaWYgKHRoaXMuaG91ckRhdGFbaF0gIT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgIHZhciBzdGVwcyA9IHRoaXMuaG91ckRhdGFbaF1bbV07CiAgICAgICAgICAgIHRoaXMuZGF0YS5wdXNoKHN0ZXBzKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBnZXREYXRhQnlUaW1lQXBpQ2FsbDogZnVuY3Rpb24gZ2V0RGF0YUJ5VGltZUFwaUNhbGwoc3RhcnQsIGVuZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgYmFuZGlkLCByZXNwb25zZSwgcmVzdWx0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGJhbmRpZCA9IF90aGlzLiRzZXNzaW9uLmdldCgnbWliYW5kJykuaWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwOi8vIi5jb25jYXQoX3RoaXMubWliYW5kX2RiX2hvc3QsICI6IikuY29uY2F0KF90aGlzLm1pYmFuZF9kYl9wb3J0LCAiL2dldGxvZ3NieXRpbWUvIikuY29uY2F0KGJhbmRpZCksIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgICAgICAnc3RhcnQnOiBzdGFydCwKICAgICAgICAgICAgICAgICAgICAnZW5kJzogZW5kCiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlc3VsdFsnZ2V0LWxvZ3MtcmVzdWx0J10gPT09ICdzdWNjZWVkZWQnKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3VsdFsnbG9ncyddKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMzsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDEzXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXREYXRhYnlEYXRlOiBmdW5jdGlvbiBnZXREYXRhYnlEYXRlKGlucHV0ZGF0ZXN0cikgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoaW5wdXRkYXRlc3RyKTsKICAgICAgdmFyIGRheSwgbW9udGgsIHllYXIsIGRhdGVzdHIsIHN0YXJ0c3RyLCBlbmRzdHI7CiAgICAgIGRheSA9IGRhdGUuZ2V0RGF0ZSgpOwogICAgICBtb250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDE7CiAgICAgIHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7CiAgICAgIGRhdGVzdHIgPSBkYXkgKyAnLicgKyBtb250aCArICcuJyArIHllYXI7CiAgICAgIHN0YXJ0c3RyID0gZGF0ZXN0ciArICcgLSAwOjAwJzsKICAgICAgZW5kc3RyID0gZGF0ZXN0ciArICcgLSAyMzo1OSc7CiAgICAgIHRoaXMuZ2V0RGF0YUJ5VGltZUFwaUNhbGwoc3RhcnRzdHIsIGVuZHN0cikudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgX3RoaXMyLmFjdGl2aXR5ZGF0YSA9IHJlc3VsdDsKICAgICAgICBfdGhpczIuZ2V0RGF0YVN0YXR1cyA9ICJPSyI7CiAgICAgIH0pOwogICAgICB0aGlzLmdldERhdGFTdGF0dXMgPSAiUEVORElORyI7CiAgICB9LAogICAgcmVtb3ZlSG91clJhbmdlOiBmdW5jdGlvbiByZW1vdmVIb3VyUmFuZ2UoKSB7CiAgICAgIHRoaXMuaG91cnZhbHVlID0gbnVsbDsKICAgICAgdGhpcy5jcmVhdGVDaGFydERhdGEoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["StepCounts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div>\n            <b-form inline class=\"d-flex justify-content-between\">\n                <b-form-datepicker id=\"example-datepicker\" v-model=\"datevalue\" class=\"mb-2 w-50\"></b-form-datepicker>\n                \n                <div>\n                    Hour range:\n                    <b-form-spinbutton inline wrap min=\"0\" max=\"23\" v-model=\"hourvalue\"></b-form-spinbutton>\n                    <b-button class=\"ml-1\" variant=\"success\" @click=\"createChartData(hourvalue)\">v</b-button>\n                    <b-button class=\"ml-1\" @click=\"removeHourRange\">x</b-button>\n                </div>\n                \n            </b-form>\n        </div>\n\n        <div v-if=\"getDataStatus === 'PENDING'\">\n            <b-alert variant=\"info\" show>Getting data...</b-alert>\n        </div>\n        \n        <b-skeleton-wrapper :loading=\"getDataStatus === 'PENDING'\">\n            <template #loading>\n                <b-card>\n                <b-skeleton width=\"85%\"></b-skeleton>\n                <b-skeleton width=\"55%\"></b-skeleton>\n                <b-skeleton width=\"70%\"></b-skeleton>\n                </b-card>\n            </template>\n            <div class=\"h-50\">\n                <DataChart :key=\"chartkey\" :data=\"data\" :labels=\"labels\" :type=\"'steps'\"/>\n            </div>\n        </b-skeleton-wrapper>\n    </div>\n</template>\n\n\n<script>\nimport DataChart from '@/components/data/DataChart'\n\nvar today = new Date()\n\nexport default {\n    components: { DataChart },\n    data(){\n        return {\n            activitydata: {},\n            wholedayData: {},\n            hourData: {},\n            labels: [],\n            data: [],\n            mode: -1,\n            datevalue: today.getFullYear() + '-' + String(today.getMonth()+1) + '-' + today.getDate(),\n            hourvalue: null,\n            chartkey: false,\n            getDataStatus: '',\n            miband_db_host: this.$api_hosts['miband_db_api'],\n            miband_db_port: this.$api_ports['miband_db_api'],\n        }\n    },\n    mounted(){\n        this.getDatabyDate(this.datevalue)\n        this.getStepsData()\n        // this.createChartData()\n        // this.chartkey = !this.chartkey\n    },\n\n    watch: {\n        datevalue: function() {\n            this.getDatabyDate(this.datevalue)\n        },\n        getDataStatus: function() {\n            if(this.getDataStatus=='OK') {\n                this.getStepsData()\n                this.createChartData()                    \n            }\n        },\n        data: function() {\n            this.chartkey = !this.chartkey\n        },\n    },\n\n    methods: {\n        getStepsData() {\n            var logs = this.activitydata\n            var hourData = {}\n\n            for(var i in logs) {\n                var timestamp = logs[i].timestamp\n                var tmp = new Date(timestamp)\n                var hour = tmp.getHours()\n                var minute = tmp.getMinutes()\n                // dataOfHour[\"asd\"] = \"asd\"\n                if(hourData[String(hour)]==undefined){\n                    hourData[String(hour)] = {}\n                    hourData[String(hour)]['sum'] = 0\n                }\n                var steps = logs[i].steps\n                hourData[String(hour)][String(minute)] = steps\n                hourData[String(hour)]['sum']+=steps\n            }\n\n            var wholedayData = {}\n            for(var h=0; h<24; h++){\n                if(hourData[h]!=undefined)\n                    wholedayData[h] = hourData[h]['sum']\n                else  wholedayData[h] = undefined\n            }\n            this.wholedayData = wholedayData\n            this.hourData = hourData\n        },\n\n        createChartData(mode) {\n            this.labels = []\n            this.data = []\n            var h\n            if(mode==null) {\n                for(h=0; h<24; h++) {\n                    this.labels.push(String(h)+':00')\n                    this.data.push(this.wholedayData[h])\n                }\n            }\n            else {\n                h = mode\n                var minute\n                for(var m=0; m<60; m++) {\n                    if (String(m).length<2) {\n                        minute = '0'+String(m)\n                    }\n                    else minute = m\n                    this.labels.push(String(h)+':'+String(minute))\n                    if(this.hourData[h]!=undefined){\n                        var steps = this.hourData[h][m]\n                        this.data.push(steps)\n                    }\n                        \n                }\n            }\n\n        },\n\n        async getDataByTimeApiCall(start, end) {\n            const bandid = this.$session.get('miband').id\n            try {\n                const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/getlogsbytime/${bandid}`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    'start': start,\n                    'end': end\n                    }),\n                headers: { 'Content-type': 'application/json; charset=UTF-8' },\n                })\n                \n                const result = await response.json()\n                if(result['get-logs-result']==='succeeded')\n                    return result['logs']\n                return false\n            } catch (error) {\n                // do something with `error`\n            }\n        },\n\n        getDatabyDate(inputdatestr) {\n            var date = new Date(inputdatestr)\n            var day, month, year, datestr, startstr, endstr\n            day = date.getDate()\n            month = date.getMonth()+1\n            year = date.getFullYear()\n            datestr = day + '.' + month + '.' + year\n            startstr = datestr + ' - 0:00'\n            endstr = datestr + ' - 23:59'\n            this.getDataByTimeApiCall(startstr, endstr).then((result)=>{\n                this.activitydata  = result \n                this.getDataStatus = \"OK\"\n            })\n            this.getDataStatus = \"PENDING\"\n\n        },\n\n        removeHourRange(){\n            this.hourvalue = null\n            this.createChartData()\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components/data"}]}