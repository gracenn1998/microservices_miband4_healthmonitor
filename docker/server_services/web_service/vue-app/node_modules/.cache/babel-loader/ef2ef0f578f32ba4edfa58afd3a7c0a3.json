{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/account/ChangePasswordForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/account/ChangePasswordForm.vue","mtime":1608325863766},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2dyYWNlL3BqL21pY3Jvc2VydmljZXNfbWliYW5kNF9oZWFsdGhtb25pdG9yL2Zyb250ZW5kL3Z1ZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvcm06IHsKICAgICAgICBjdXJyZW50UGFzc3dvcmQ6ICcnLAogICAgICAgIG5ld1Bhc3N3b3JkOiAnJywKICAgICAgICBjb25maXJtTmV3UGFzc3dvcmQ6ICcnCiAgICAgIH0sCiAgICAgIHN1Ym1pdFN0YXR1czogJycsCiAgICAgIHVzZXJfZGJfaG9zdDogdGhpcy4kYXBpX2hvc3RzWyd1c2VyX2RiX2FwaSddLAogICAgICB1c2VyX2RiX3BvcnQ6IHRoaXMuJGFwaV9wb3J0c1sndXNlcl9kYl9hcGknXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwd1N0YXRlOiBmdW5jdGlvbiBwd1N0YXRlKCkgewogICAgICBpZiAodGhpcy5mb3JtLm5ld1Bhc3N3b3JkID09ICcnKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLmZvcm0ubmV3UGFzc3dvcmQubGVuZ3RoID49IDY7CiAgICB9LAogICAgY2ZQd1N0YXRlOiBmdW5jdGlvbiBjZlB3U3RhdGUoKSB7CiAgICAgIGlmICh0aGlzLmZvcm0uY29uZmlybU5ld1Bhc3N3b3JkID09ICcnKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLmZvcm0uY29uZmlybU5ld1Bhc3N3b3JkID09IHRoaXMuZm9ybS5uZXdQYXNzd29yZDsKICAgIH0sCiAgICBpbnZhbGlkUHc6IGZ1bmN0aW9uIGludmFsaWRQdygpIHsKICAgICAgaWYgKHRoaXMuZm9ybS5uZXdQYXNzd29yZC5sZW5ndGggPiAwKSB7CiAgICAgICAgcmV0dXJuICdFbnRlciBhdCBsZWFzdCA2IGNoYXJhY3RlcnMuJzsKICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAogICAgaW52YWxpZENmUHc6IGZ1bmN0aW9uIGludmFsaWRDZlB3KCkgewogICAgICBpZiAodGhpcy5mb3JtLmNvbmZpcm1OZXdQYXNzd29yZC5sZW5ndGggPiAwKSB7CiAgICAgICAgcmV0dXJuICdDb25maXJtIHBhc3N3b3JkIG5lZWQgdG8gYmUgc2FtZSBhcyBwYXNzd29yZCc7CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2hhbmdlUGFzc3dvcmRBcGlDYWxsOiBmdW5jdGlvbiBjaGFuZ2VQYXNzd29yZEFwaUNhbGwoY3VycmVudFBhc3N3b3JkLCBuZXdQYXNzd29yZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgdXNlcl9pZCwgcmVzcG9uc2UsIHJlc3VsdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB1c2VyX2lkID0gX3RoaXMuJHNlc3Npb24uZ2V0KCd1c2VyJykuaWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwOi8vIi5jb25jYXQoX3RoaXMudXNlcl9kYl9ob3N0LCAiOiIpLmNvbmNhdChfdGhpcy51c2VyX2RiX3BvcnQsICIvdXNlcnMvIikuY29uY2F0KHVzZXJfaWQsICIvY2hhbmdlLXBhc3N3b3JkIiksIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgICAgICAnY3VyX3Bhc3N3b3JkJzogY3VycmVudFBhc3N3b3JkLAogICAgICAgICAgICAgICAgICAgICduZXdfcGFzc3dvcmQnOiBuZXdQYXNzd29yZAogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXN1bHRbJ2NoYW5nZS1wdy1yZXN1bHQnXSA9PSAnc3VjY2VlZGVkJykpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCB0cnVlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMzsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgMTNdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNoYW5nZVBhc3N3b3JkOiBmdW5jdGlvbiBjaGFuZ2VQYXNzd29yZCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICAvL3ZhbGlkYXRlIGN1cnJlbnQgcHcKICAgICAgdmFyIGN1cl9wdyA9IHRoaXMuZm9ybS5jdXJyZW50UGFzc3dvcmQ7CiAgICAgIHZhciBuZXdfcHcgPSB0aGlzLmZvcm0ubmV3UGFzc3dvcmQ7CiAgICAgIHRoaXMuY2hhbmdlUGFzc3dvcmRBcGlDYWxsKGN1cl9wdywgbmV3X3B3KS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICBpZiAocmVzdWx0KSB7CiAgICAgICAgICAvL2lmIHN1Y2NlZWRlZAogICAgICAgICAgX3RoaXMyLnN1Ym1pdFN0YXR1cyA9ICdPSyc7IC8vIHRoaXMuJGVtaXQoJ2V4aXQtY2hhbmdlLXB3LW1vZGUnKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczIuc3VibWl0U3RhdHVzID0gJ0VSUk9SJzsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLnN1Ym1pdFN0YXR1cyA9ICdQRU5ESU5HJzsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ChangePasswordForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,eAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA,EAFA;AAGA,QAAA,kBAAA,EAAA;AAHA,OADA;AAMA,MAAA,YAAA,EAAA,EANA;AAOA,MAAA,YAAA,EAAA,KAAA,UAAA,CAAA,aAAA,CAPA;AAQA,MAAA,YAAA,EAAA,KAAA,UAAA,CAAA,aAAA;AARA,KAAA;AAUA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,KAAA,IAAA,CAAA,WAAA,IAAA,EAAA,EAAA;AACA,eAAA,IAAA;AACA;;AACA,aAAA,KAAA,IAAA,CAAA,WAAA,CAAA,MAAA,IAAA,CAAA;AACA,KANA;AAOA,IAAA,SAPA,uBAOA;AACA,UAAA,KAAA,IAAA,CAAA,kBAAA,IAAA,EAAA,EAAA;AACA,eAAA,IAAA;AACA;;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,IAAA,KAAA,IAAA,CAAA,WAAA;AACA,KAZA;AAaA,IAAA,SAbA,uBAaA;AACA,UAAA,KAAA,IAAA,CAAA,WAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,eAAA,8BAAA;AACA;;AACA,aAAA,IAAA;AACA,KAlBA;AAmBA,IAAA,WAnBA,yBAmBA;AACA,UAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,eAAA,8CAAA;AACA;;AACA,aAAA,IAAA;AACA;AAxBA,GAbA;AAwCA,EAAA,OAAA,EAAA;AAEA,IAAA,qBAFA,iCAEA,eAFA,EAEA,WAFA,EAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OADA,GACA,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,MAAA,EAAA,EADA;AAAA;AAAA;AAAA,uBAGA,KAAA,kBAAA,KAAA,CAAA,YAAA,cAAA,KAAA,CAAA,YAAA,oBAAA,OAAA,uBAAA;AACA,kBAAA,MAAA,EAAA,MADA;AAEA,kBAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AACA,oCAAA,eADA;AAEA,oCAAA;AAFA,mBAAA,CAFA;AAMA,kBAAA,OAAA,EAAA;AAAA,oCAAA;AAAA;AANA,iBAAA,CAHA;;AAAA;AAGA,gBAAA,QAHA;AAAA;AAAA,uBAWA,QAAA,CAAA,IAAA,EAXA;;AAAA;AAWA,gBAAA,MAXA;;AAAA,sBAYA,MAAA,CAAA,kBAAA,CAAA,IAAA,WAZA;AAAA;AAAA;AAAA;;AAAA,iDAaA,IAbA;;AAAA;AAAA,iDAeA,KAfA;;AAAA;AAAA;AAAA;AAiBA,gBAAA,OAAA,CAAA,KAAA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA,KArBA;AAuBA,IAAA,cAvBA,4BAuBA;AAAA;;AACA;AACA,UAAA,MAAA,GAAA,KAAA,IAAA,CAAA,eAAA;AACA,UAAA,MAAA,GAAA,KAAA,IAAA,CAAA,WAAA;AACA,WAAA,qBAAA,CAAA,MAAA,EAAA,MAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,EAAA;AAAA;AACA,UAAA,MAAA,CAAA,YAAA,GAAA,IAAA,CADA,CAEA;AACA,SAHA,MAIA;AACA,UAAA,MAAA,CAAA,YAAA,GAAA,OAAA;AACA;AACA,OARA;AASA,WAAA,YAAA,GAAA,SAAA;AACA;AArCA;AAxCA,CAAA","sourcesContent":["<template>\n    <b-card-title class=\"text-center mt-2\" >\n        <div v-if=\"submitStatus === 'OK'\">\n            <b-alert variant=\"success\" show>Changed password successfully</b-alert>\n        </div>\n        <div v-if=\"submitStatus === 'ERROR'\">\n            <b-alert variant=\"danger\" show>Current password is incorrect. Please check again</b-alert>\n        </div>\n        <div v-if=\"submitStatus === 'PENDING'\">\n            <b-alert variant=\"info\" show>Sending request...</b-alert>\n        </div>\n\n        <b-form @submit.prevent=\"updateName\">\n            <b-form-group >\n                <b-form-input\n                    v-model=\"form.currentPassword\"\n                    type=\"password\"\n                    required\n                    placeholder=\"Enter current password\"\n                ></b-form-input>\n            </b-form-group>\n            \n            <b-form-group \n                :invalid-feedback=\"invalidPw\"\n                :state=\"pwState\"\n            >\n                <b-form-input\n                    v-model=\"form.newPassword\"\n                    :state=\"pwState\"\n                    type=\"password\"\n                    required\n                    placeholder=\"Enter new password\"\n                ></b-form-input>\n            </b-form-group>\n            \n            <b-form-group\n                :invalid-feedback=\"invalidCfPw\"\n                :state=\"cfPwState\"  \n            >\n                <b-form-input\n                    v-model=\"form.confirmNewPassword\"\n                    :state=\"cfPwState\"\n                    type=\"password\"\n                    required\n                    placeholder=\"Re-enter new password\"\n                ></b-form-input>\n            </b-form-group>\n            <div>\n              <b-button @click=\"changePassword\" variant=\"outline-success\" class=\"mr-1\">➕</b-button>\n              <b-button @click=\"$emit('exit-change-pw-mode')\" variant=\"outline-danger\">✖️</b-button>\n          </div>\n        </b-form>\n    </b-card-title>\n</template>\n\n<script>\nexport default {\n    data(){\n        return {\n            form: {\n                currentPassword: '',\n                newPassword: '',\n                confirmNewPassword: ''\n            },\n            submitStatus: '',\n            user_db_host: this.$api_hosts['user_db_api'],\n            user_db_port: this.$api_ports['user_db_api']\n        }\n    },\n    computed: {\n        pwState() {\n            if(this.form.newPassword=='') {\n                return null\n            }\n            return this.form.newPassword.length >= 6\n        },\n        cfPwState() {\n            if(this.form.confirmNewPassword=='') {\n                return null\n            }\n            return this.form.confirmNewPassword == this.form.newPassword\n        },\n        invalidPw() {\n            if (this.form.newPassword.length > 0) {\n                return 'Enter at least 6 characters.'\n            }\n            return null\n        },\n        invalidCfPw() {\n            if (this.form.confirmNewPassword.length > 0) {\n                return 'Confirm password need to be same as password'\n            }\n            return null\n        },\n    },\n\n    methods: {\n\n        async changePasswordApiCall(currentPassword, newPassword) {\n            const user_id = this.$session.get('user').id\n            try {\n                const response = await fetch(`http://${this.user_db_host}:${this.user_db_port}/users/${user_id}/change-password`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    'cur_password': currentPassword,\n                    'new_password': newPassword\n                    }),\n                headers: { 'Content-type': 'application/json; charset=UTF-8' },\n                })\n                const result = await response.json()\n                if (result['change-pw-result']=='succeeded') { //sign in successfully\n                    return true\n                }\n                return false\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        changePassword(){\n            //validate current pw\n            var cur_pw = this.form.currentPassword\n            var new_pw = this.form.newPassword\n            this.changePasswordApiCall(cur_pw, new_pw).then((result)=>{\n                if(result) {//if succeeded\n                    this.submitStatus = 'OK'\n                    // this.$emit('exit-change-pw-mode')\n                }\n                else {\n                    this.submitStatus = 'ERROR'\n                }\n            })\n            this.submitStatus = 'PENDING'\n        }\n\n\n    }\n}\n</script>"],"sourceRoot":"src/components/account"}]}