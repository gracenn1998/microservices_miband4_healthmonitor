{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/Data.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/Data.vue","mtime":1607282492945},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2dyYWNlL3BqL21pY3Jvc2VydmljZXNfbWliYW5kNF9oZWFsdGhtb25pdG9yL2Zyb250ZW5kL3Z1ZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgR2VuZXJhbERhdGEgZnJvbSAnQC9jb21wb25lbnRzL2RhdGEvR2VuZXJhbERhdGEnOwppbXBvcnQgRGF0YVR5cGUgZnJvbSAnQC9jb21wb25lbnRzL2RhdGEvRGF0YVR5cGUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgR2VuZXJhbERhdGE6IEdlbmVyYWxEYXRhLAogICAgRGF0YVR5cGU6IERhdGFUeXBlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWliYW5kOiB0aGlzLiRzZXNzaW9uLmdldCgnbWliYW5kJyksCiAgICAgIGhyX2tleTogZmFsc2UsCiAgICAgIGNvbm5lY3RTdGF0dXM6ICcnLAogICAgICBnZGtleTogZmFsc2UsCiAgICAgIG1pYmFuZF9kYl9ob3N0OiB0aGlzLiRhcGlfaG9zdHNbJ21pYmFuZF9kYl9hcGknXSwKICAgICAgbWliYW5kX2RiX3BvcnQ6IHRoaXMuJGFwaV9wb3J0c1snbWliYW5kX2RiX2FwaSddLAogICAgICBtaWJhbmRfaG9zdDogdGhpcy4kYXBpX2hvc3RzWydtaWJhbmRfYXBpJ10sCiAgICAgIG1pYmFuZF9wb3J0OiB0aGlzLiRhcGlfcG9ydHNbJ21pYmFuZF9hcGknXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciBtaWJhbmQgPSB0aGlzLm1pYmFuZDsKCiAgICBpZiAobWliYW5kID09IHVuZGVmaW5lZCkgewogICAgICB0aGlzLmdldEJhbmRJbmZvKCkudGhlbihmdW5jdGlvbiAoYmFuZGluZm8pIHsKICAgICAgICBfdGhpcy4kc2Vzc2lvbi5zZXQoJ21pYmFuZCcsIGJhbmRpbmZvKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRCYW5kSW5mbzogZnVuY3Rpb24gZ2V0QmFuZEluZm8oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgdXNlcmlkLCByZXNwb25zZSwgcmVzdWx0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHVzZXJpZCA9IF90aGlzMi4kc2Vzc2lvbi5nZXQoJ3VzZXInKS5pZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goImh0dHA6Ly8iLmNvbmNhdChfdGhpczIubWliYW5kX2RiX2hvc3QsICI6IikuY29uY2F0KF90aGlzMi5taWJhbmRfZGJfcG9ydCwgIi9nZXRiYW5kYnl1c2VyLyIpLmNvbmNhdCh1c2VyaWQpKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzdWx0KTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDExXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBkaXNjb25uZWN0QXBpQ2FsbDogZnVuY3Rpb24gZGlzY29ubmVjdEFwaUNhbGwoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovLyIuY29uY2F0KF90aGlzMy5taWJhbmRfaG9zdCwgIjoiKS5jb25jYXQoX3RoaXMzLm1pYmFuZF9wb3J0LCAiL2JhbmQvZGlzY29ubmVjdCIpKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXN1bHQpOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCAxMV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgY29ubmVjdEFwaUNhbGw6IGZ1bmN0aW9uIGNvbm5lY3RBcGlDYWxsKG1hY19hZGQsIGF1dGhfa2V5KSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovLyIuY29uY2F0KF90aGlzNC5taWJhbmRfaG9zdCwgIjoiKS5jb25jYXQoX3RoaXM0Lm1pYmFuZF9wb3J0LCAiL2JhbmQvY29ubmVjdCIpLCB7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAgICAgJ21hY19hZGQnOiBtYWNfYWRkLAogICAgICAgICAgICAgICAgICAgICdhdXRoX2tleSc6IGF1dGhfa2V5CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0My5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlc3VsdFsnY29ubmVjdC1yZXN1bHQnXSA9PSAnc3VjY2VlZGVkJykpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHJlc3VsdFsnYmFuZC1pbmZvJ10pOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0My50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMCwgMTRdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHJlY29ubmVjdDogZnVuY3Rpb24gcmVjb25uZWN0KCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHZhciBtaWJhbmQgPSB0aGlzLm1pYmFuZDsKICAgICAgdGhpcy5kaXNjb25uZWN0QXBpQ2FsbCgpLnRoZW4odGhpcy5jb25uZWN0QXBpQ2FsbChtaWJhbmQubWFjX2FkZHJlc3MsIG1pYmFuZC5hdXRoX2tleSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgaWYgKHJlc3VsdCkgewogICAgICAgICAgX3RoaXM1LmNvbm5lY3RTdGF0dXMgPSAnT0snOwogICAgICAgICAgX3RoaXM1Lmdka2V5ID0gIV90aGlzNS5nZGtleTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXM1LmNvbm5lY3RTdGF0dXMgPSAnRVJST1InOwogICAgICAgIH0KICAgICAgfSkpOwogICAgICB0aGlzLmNvbm5lY3RTdGF0dXMgPSAnUEVORElORyc7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Data.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"w-50 mx-auto mt-3\">\n        <b-card no-body >\n          <b-button @click=\"reconnect\" variant=\"primary\">Reconnect</b-button>\n          <div v-if=\"connectStatus === 'ERROR'\">\n            <b-alert variant=\"danger\" show>Error happened while connecting. Please try again or refresh your Bluetooth connection</b-alert>\n          </div>\n          <div v-if=\"connectStatus === 'PENDING'\">\n            <b-alert variant=\"info\" show>Connecting...</b-alert>\n          </div>\n          <b-tabs card>\n            <b-tab title=\"General Information\" active lazy> \n              <GeneralData :key='gdkey'/>\n            </b-tab>\n            <b-tab title=\"Step Counts\" lazy>\n              <DataType :type=\"'steps'\" />\n            </b-tab>\n            <b-tab title=\"Heart Rate\" lazy>\n              <DataType :type=\"'hr'\" />\n            </b-tab>\n        </b-tabs>\n      </b-card>\n    </div>\n</template>\n\n<script>\nimport GeneralData from '@/components/data/GeneralData'\nimport DataType from '@/components/data/DataType'\nexport default {\n  components: {\n    GeneralData,\n    DataType\n  },\n  data() {\n    return {\n      miband: this.$session.get('miband'),\n      hr_key: false,\n      connectStatus: '',\n      gdkey: false,\n      miband_db_host: this.$api_hosts['miband_db_api'],\n      miband_db_port: this.$api_ports['miband_db_api'],\n      miband_host: this.$api_hosts['miband_api'],\n      miband_port: this.$api_ports['miband_api']\n    }\n  },\n  created() {\n    var miband = this.miband\n    if(miband==undefined) {\n      this.getBandInfo().then((bandinfo)=>{\n        this.$session.set('miband', bandinfo)\n      })\n    }\n  },\n\n  methods: {\n    async getBandInfo() {\n      const userid = this.$session.get('user').id\n      try {\n          const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/getbandbyuser/${userid}`)\n          const result = await response.json()\n          return result\n      } catch (error) {\n          // do something with `error`\n      }\n    },\n\n    async disconnectApiCall() {\n      try {\n          const response = await fetch(`http://${this.miband_host}:${this.miband_port}/band/disconnect`)\n          const result = await response.json()\n          console.log(result)\n          return result\n      } catch (error) {\n          // do something with `error`\n      }\n    },\n\n    async connectApiCall(mac_add, auth_key) {\n      try {\n          const response = await fetch(`http://${this.miband_host}:${this.miband_port}/band/connect`, {\n          method: 'POST',\n          body: JSON.stringify({\n              'mac_add': mac_add,\n              'auth_key': auth_key\n              }),\n          headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          })\n          const result = await response.json()\n          if(result['connect-result']=='succeeded') {\n            return result['band-info']\n          }\n          else return false\n      } catch (error) {\n          console.error(error)\n      }\n    },\n\n    reconnect() {\n      var miband = this.miband\n      this.disconnectApiCall().then(\n        this.connectApiCall(miband.mac_address, miband.auth_key).then((result)=>{\n          if(result) {\n            this.connectStatus='OK'\n            this.gdkey = !this.gdkey\n          }\n          else {\n            this.connectStatus='ERROR'\n          }\n        })\n      )\n      this.connectStatus='PENDING'\n    }\n\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}