{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/thread-loader/dist/cjs.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/account/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/account/Profile.vue","mtime":1607539087626},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"w-50 mx-auto mt-3 mb-3\" v-if=\"this.$session.exists()\">\n        <b-card>\n            <template #header>\n                <div class=\"d-flex justify-content-center\">\n                    <b-avatar :text=\"avatarStr\" size=\"6rem\"></b-avatar>\n                </div>\n                <b-card-title v-if=\"user.fullname==null&&updateNameMode!=true\" class=\"text-center mt-2\">\n                    <b-button variant=\"outline-primary\" @click=\"enterUpdateNameMode\">\n                        Please tell us your name 📝\n                    </b-button>\n                </b-card-title>\n                <b-card-title v-else-if=\"updateNameMode==true\" class=\"text-center mt-2\">\n                    <b-form @submit.prevent=\"updateName\" inline class=\"d-flex justify-content-around\">\n                        <b-form-input class=\"w-75\"\n                        v-model=\"user.fullname\"\n                        placeholder=\"Enter your name\"\n                    ></b-form-input>\n                    <div>\n                        <b-button @click=\"updateName\" variant=\"success\" class=\"mr-1\">OK</b-button>\n                        <b-button @click=\"exitUpdateNameMode\" variant=\"danger\">✖️</b-button>\n                    </div>\n                    </b-form>\n                </b-card-title>\n                <b-card-title v-else class=\"text-center mt-2\">\n                    {{user.fullname}}\n                    <b-button variant=\"outline-primary\" @click=\"enterUpdateNameMode\">📝</b-button>\n                </b-card-title>\n                <b-card-sub-title class=\"text-center\">{{user.email}}</b-card-sub-title>\n                <!-- <div class=\"d-flex justify-content-center\">\n                    <b-card-text>🏆 Strike: 4days</b-card-text>\n                </div> -->\n            </template>\n\n            <b-skeleton-wrapper :loading=\"deleteStatus === 'PENDING'\">\n                <template #loading>\n                <b-card>\n                <b-skeleton width=\"85%\"></b-skeleton>\n                <b-skeleton width=\"55%\"></b-skeleton>\n                <b-skeleton width=\"70%\"></b-skeleton>\n                </b-card>\n            </template>\n            <device-management />\n\n            <!-- <b-card title=\"More\" class=\"mt-1\">\n                <b-button variant=\"outline-primary\" class=\"w-100\">Set goal</b-button>\n            </b-card> -->\n\n            <b-card title=\"Account\" class=\"mt-1\">\n                <b-button variant=\"outline-primary\" class=\"w-100 mb-1\"\n                    @click=\"enterChangePwMode\"\n                >Change password</b-button>\n                <ChangePasswordForm v-if=\"changePwMode==true\" @exit-change-pw-mode=\"exitChangePwMode\"/>\n                <b-button variant=\"outline-primary\" class=\"w-100\" v-b-modal.confirm-delete-modal >Delete account</b-button>\n                \n            </b-card>\n            \n            <b-modal id=\"confirm-delete-modal\" hide-footer title=\"Confirmation\">\n                <div class=\"d-block text-center\">\n                    <h4>Do you really want to delete this account?</h4>\n                </div>\n                <div class=\"d-flex justify-content-end\">\n                    <b-button class=\"mt-3 mr-3\"  @click=\"$bvModal.hide('confirm-delete-modal')\">Cancel</b-button>\n                    <b-button class=\"mt-3 mr-4\" variant=\"danger\" @click=\"deleteAndCloseModal()\">Delete</b-button>\n                </div>\n            </b-modal>\n            </b-skeleton-wrapper>\n        </b-card>\n        \n    </div>\n</template>\n\n\n<script>\nimport DeviceManagement from '@/components/DeviceManagement'\nimport ChangePasswordForm from '@/components/account/ChangePasswordForm.vue'\n\nexport default {\n    components: { \n        DeviceManagement,\n        ChangePasswordForm\n    },\n    created() {\n        // console.log(this.user)\n        this.generateAvtStr()\n        \n    },\n    data() {\n        return {\n            user: this.$session.get('user'),\n            avatarStr: '',\n            updateNameMode: false,\n            changePwMode: false,\n            deleteStatus: '',\n            user_db_host: this.$api_hosts['user_db_api'],\n            user_db_port: this.$api_ports['user_db_api'],\n            miband_db_host: this.$api_hosts['miband_db_api'],\n            miband_db_port: this.$api_ports['miband_db_api'],\n            miband_host: this.$api_hosts['miband_api'],\n            miband_port: this.$api_ports['miband_api']\n        }\n    },\n    methods: {\n        enterUpdateNameMode() {\n            this.updateNameMode = true\n        },\n        exitUpdateNameMode() {\n            this.user.fullname=this.$session.get('user').fullname\n            this.updateNameMode = false\n        },\n        enterChangePwMode() {\n            this.changePwMode = true\n        },\n        exitChangePwMode() {\n            this.changePwMode = false\n        },\n\n        generateAvtStr() {\n            if(this.user.fullname!=null) {\n                var str = String(this.$session.get('user').fullname)\n                var seperateName = str.split(\" \")\n                if(seperateName.length==1){\n                    this.avatarStr = seperateName[0][0]\n                } else {\n                    this.avatarStr=seperateName[0][0] + seperateName[seperateName.length-1][0]\n                }\n                \n            }\n            else{\n                this.avatarStr=''\n            }\n        },\n\n        async updateNameApiCall(newName) {\n            const uid = this.$session.get('user').id\n            try {\n                const response = await fetch(`http://${this.user_db_host}:${this.user_db_port}/users/${uid}/fullname`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    'fullname': newName,\n                    }),\n                headers: { 'Content-type': 'application/json; charset=UTF-8' },\n                })\n                const user = await response.json()\n                return user\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        updateName() {\n            // this.updateNameApiCall(this.user.email, this.user.fullname)\n            this.updateNameApiCall(this.user.fullname).then((user)=>{\n                this.$session.set('user', user)\n                this.generateAvtStr()\n                this.exitUpdateNameMode()\n                // this.$forceUpdate\n            })\n        },\n\n        async deleteLogsApiCall() {\n            const user_id = this.$session.get('user').id\n            try {\n                const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/users/${user_id}/logs`, {\n                    method: 'DELETE'\n                })\n                const result = await response.json()\n                if(result['delete-result']=='succeeded') {\n                    return true\n                }\n                return false\n            }\n            catch (error) {\n                console.log(error)\n            }\n        },\n\n        async deleteUserApiCall() {\n            const user_id = this.$session.get('user').id\n            try {\n                const response = await fetch(`http://${this.user_db_host}:${this.user_db_port}/users/${user_id}`, {\n                    method: 'DELETE'\n                })\n                const result = await response.json()\n                if(result['delete-result']=='succeeded') {\n                    return true\n                }\n                return false\n            }\n            catch (error) {\n                console.log(error)\n            }\n        },\n\n        async unpairBandDbApiCall() {\n            const bandid = this.$session.get('miband').id\n            try {\n                const response = await fetch(`http://${this.miband_db_host}:${this.miband_db_port}/bands/${bandid}/unpair`)\n                const result = await response.json()\n\n                // do something with `data`\n                if(result['unpair-band-result']==\"succeeded\")\n                    return true\n                else return false\n            } catch (error) {\n                // do something with `error`\n            }\n        },\n\n        async disconnectApiCall() {\n            try {\n                const response = await fetch(`http://${this.miband_host}:${this.miband_port}/band/disconnect`)\n                const result = await response.json()\n                console.log(result)\n                return result\n            } catch (error) {\n                // do something with `error`\n            }\n        },\n\n        async deleteAndCloseModal() {\n            this.$bvModal.hide('confirm-remove-modal')\n\n            this.deleteStatus = 'PENDING'\n            \n            const deleteLogsResult = await this.deleteLogsApiCall()\n            var unpairBandResult = true\n            var deleteUserResult\n            if(deleteLogsResult) { //if succeeded\n                console.log(this.$session.get('miband'))\n                if(this.$session.get('miband')!=undefined) { //if pairing band exist\n                    console.log('??')\n                    await this.disconnectApiCall()\n                    unpairBandResult = await this.unpairBandDbApiCall()\n                }\n            }\n            if(unpairBandResult) {\n                deleteUserResult = await this.deleteUserApiCall()\n                if(deleteUserResult) {\n                    this.deleteStatus = 'OK'\n                    this.$session.destroy()\n                    this.$emit('login-status-change')\n                    this.$router.push('/')\n                }\n            }\n        },\n    }\n}\n</script>"],"sourceRoot":"src/components/account"}]}