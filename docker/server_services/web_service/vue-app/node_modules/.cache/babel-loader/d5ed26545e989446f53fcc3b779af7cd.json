{"remainingRequest":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/data/StepCounts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/src/components/data/StepCounts.vue","mtime":1607175226173},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/grace/pj/microservices_miband4_healthmonitor/frontend/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2dyYWNlL3BqL21pY3Jvc2VydmljZXNfbWliYW5kNF9oZWFsdGhtb25pdG9yL2Zyb250ZW5kL3Z1ZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgRGF0YUNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9kYXRhL0RhdGFDaGFydCc7CnZhciBtaWJhbmRfZGJfaG9zdCA9ICcxOTIuMTY4LjExLjEyMic7CnZhciBtaWJhbmRfZGJfcG9ydCA9ICc1MDAyJzsKdmFyIHRvZGF5ID0gbmV3IERhdGUoKTsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIERhdGFDaGFydDogRGF0YUNoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWN0aXZpdHlkYXRhOiB7fSwKICAgICAgd2hvbGVkYXlEYXRhOiB7fSwKICAgICAgaG91ckRhdGE6IHt9LAogICAgICBsYWJlbHM6IFtdLAogICAgICBkYXRhOiBbXSwKICAgICAgbW9kZTogLTEsCiAgICAgIGRhdGV2YWx1ZTogdG9kYXkuZ2V0RnVsbFllYXIoKSArICctJyArIFN0cmluZyh0b2RheS5nZXRNb250aCgpICsgMSkgKyAnLScgKyB0b2RheS5nZXREYXRlKCksCiAgICAgIGhvdXJ2YWx1ZTogbnVsbCwKICAgICAgY2hhcnRrZXk6IGZhbHNlLAogICAgICBnZXREYXRhU3RhdHVzOiAnJwogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldERhdGFieURhdGUodGhpcy5kYXRldmFsdWUpOwogICAgdGhpcy5nZXRTdGVwc0RhdGEoKTsgLy8gdGhpcy5jcmVhdGVDaGFydERhdGEoKQogICAgLy8gdGhpcy5jaGFydGtleSA9ICF0aGlzLmNoYXJ0a2V5CiAgfSwKICB3YXRjaDogewogICAgZGF0ZXZhbHVlOiBmdW5jdGlvbiBkYXRldmFsdWUoKSB7CiAgICAgIHRoaXMuZ2V0RGF0YWJ5RGF0ZSh0aGlzLmRhdGV2YWx1ZSk7CiAgICB9LAogICAgZ2V0RGF0YVN0YXR1czogZnVuY3Rpb24gZ2V0RGF0YVN0YXR1cygpIHsKICAgICAgaWYgKHRoaXMuZ2V0RGF0YVN0YXR1cyA9PSAnT0snKSB7CiAgICAgICAgdGhpcy5nZXRTdGVwc0RhdGEoKTsKICAgICAgICB0aGlzLmNyZWF0ZUNoYXJ0RGF0YSgpOwogICAgICB9CiAgICB9LAogICAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgICAgdGhpcy5jaGFydGtleSA9ICF0aGlzLmNoYXJ0a2V5OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0U3RlcHNEYXRhOiBmdW5jdGlvbiBnZXRTdGVwc0RhdGEoKSB7CiAgICAgIHZhciBsb2dzID0gdGhpcy5hY3Rpdml0eWRhdGE7CiAgICAgIHZhciBob3VyRGF0YSA9IHt9OwoKICAgICAgZm9yICh2YXIgaSBpbiBsb2dzKSB7CiAgICAgICAgdmFyIHRpbWVzdGFtcCA9IGxvZ3NbaV0udGltZXN0YW1wOwogICAgICAgIHZhciB0bXAgPSBuZXcgRGF0ZSh0aW1lc3RhbXApOwogICAgICAgIHZhciBob3VyID0gdG1wLmdldEhvdXJzKCk7CiAgICAgICAgdmFyIG1pbnV0ZSA9IHRtcC5nZXRNaW51dGVzKCk7IC8vIGRhdGFPZkhvdXJbImFzZCJdID0gImFzZCIKCiAgICAgICAgaWYgKGhvdXJEYXRhW1N0cmluZyhob3VyKV0gPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICBob3VyRGF0YVtTdHJpbmcoaG91cildID0ge307CiAgICAgICAgICBob3VyRGF0YVtTdHJpbmcoaG91cildWydzdW0nXSA9IDA7CiAgICAgICAgfQoKICAgICAgICB2YXIgc3RlcHMgPSBsb2dzW2ldLnN0ZXBzOwogICAgICAgIGhvdXJEYXRhW1N0cmluZyhob3VyKV1bU3RyaW5nKG1pbnV0ZSldID0gc3RlcHM7CiAgICAgICAgaG91ckRhdGFbU3RyaW5nKGhvdXIpXVsnc3VtJ10gKz0gc3RlcHM7CiAgICAgIH0KCiAgICAgIHZhciB3aG9sZWRheURhdGEgPSB7fTsKCiAgICAgIGZvciAodmFyIGggPSAwOyBoIDwgMjQ7IGgrKykgewogICAgICAgIGlmIChob3VyRGF0YVtoXSAhPSB1bmRlZmluZWQpIHdob2xlZGF5RGF0YVtoXSA9IGhvdXJEYXRhW2hdWydzdW0nXTtlbHNlIHdob2xlZGF5RGF0YVtoXSA9IHVuZGVmaW5lZDsKICAgICAgfQoKICAgICAgdGhpcy53aG9sZWRheURhdGEgPSB3aG9sZWRheURhdGE7CiAgICAgIHRoaXMuaG91ckRhdGEgPSBob3VyRGF0YTsKICAgIH0sCiAgICBjcmVhdGVDaGFydERhdGE6IGZ1bmN0aW9uIGNyZWF0ZUNoYXJ0RGF0YShtb2RlKSB7CiAgICAgIHRoaXMubGFiZWxzID0gW107CiAgICAgIHRoaXMuZGF0YSA9IFtdOwogICAgICB2YXIgaDsKCiAgICAgIGlmIChtb2RlID09IG51bGwpIHsKICAgICAgICBmb3IgKGggPSAwOyBoIDwgMjQ7IGgrKykgewogICAgICAgICAgdGhpcy5sYWJlbHMucHVzaChTdHJpbmcoaCkgKyAnOjAwJyk7CiAgICAgICAgICB0aGlzLmRhdGEucHVzaCh0aGlzLndob2xlZGF5RGF0YVtoXSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGggPSBtb2RlOwogICAgICAgIHZhciBtaW51dGU7CgogICAgICAgIGZvciAodmFyIG0gPSAwOyBtIDwgNjA7IG0rKykgewogICAgICAgICAgaWYgKFN0cmluZyhtKS5sZW5ndGggPCAyKSB7CiAgICAgICAgICAgIG1pbnV0ZSA9ICcwJyArIFN0cmluZyhtKTsKICAgICAgICAgIH0gZWxzZSBtaW51dGUgPSBtOwoKICAgICAgICAgIHRoaXMubGFiZWxzLnB1c2goU3RyaW5nKGgpICsgJzonICsgU3RyaW5nKG1pbnV0ZSkpOwoKICAgICAgICAgIGlmICh0aGlzLmhvdXJEYXRhW2hdICE9IHVuZGVmaW5lZCkgewogICAgICAgICAgICB2YXIgc3RlcHMgPSB0aGlzLmhvdXJEYXRhW2hdW21dOwogICAgICAgICAgICB0aGlzLmRhdGEucHVzaChzdGVwcyk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgZ2V0RGF0YUJ5VGltZUFwaUNhbGw6IGZ1bmN0aW9uIGdldERhdGFCeVRpbWVBcGlDYWxsKHN0YXJ0LCBlbmQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGJhbmRpZCwgcmVzcG9uc2UsIHJlc3VsdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBiYW5kaWQgPSBfdGhpcy4kc2Vzc2lvbi5nZXQoJ21pYmFuZCcpLmlkOwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovLyIuY29uY2F0KG1pYmFuZF9kYl9ob3N0LCAiOiIpLmNvbmNhdChtaWJhbmRfZGJfcG9ydCwgIi9nZXRsb2dzYnl0aW1lLyIpLmNvbmNhdChiYW5kaWQpLCB7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAgICAgJ3N0YXJ0Jzogc3RhcnQsCiAgICAgICAgICAgICAgICAgICAgJ2VuZCc6IGVuZAogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXN1bHRbJ2dldC1sb2dzLXJlc3VsdCddID09PSAnc3VjY2VlZGVkJykpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXN1bHRbJ2xvZ3MnXSk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTM7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCAxM11dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0RGF0YWJ5RGF0ZTogZnVuY3Rpb24gZ2V0RGF0YWJ5RGF0ZShpbnB1dGRhdGVzdHIpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKGlucHV0ZGF0ZXN0cik7CiAgICAgIHZhciBkYXksIG1vbnRoLCB5ZWFyLCBkYXRlc3RyLCBzdGFydHN0ciwgZW5kc3RyOwogICAgICBkYXkgPSBkYXRlLmdldERhdGUoKTsKICAgICAgbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxOwogICAgICB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOwogICAgICBkYXRlc3RyID0gZGF5ICsgJy4nICsgbW9udGggKyAnLicgKyB5ZWFyOwogICAgICBzdGFydHN0ciA9IGRhdGVzdHIgKyAnIC0gMDowMCc7CiAgICAgIGVuZHN0ciA9IGRhdGVzdHIgKyAnIC0gMjM6NTknOwogICAgICB0aGlzLmdldERhdGFCeVRpbWVBcGlDYWxsKHN0YXJ0c3RyLCBlbmRzdHIpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgIF90aGlzMi5hY3Rpdml0eWRhdGEgPSByZXN1bHQ7CiAgICAgICAgX3RoaXMyLmdldERhdGFTdGF0dXMgPSAiT0siOwogICAgICB9KTsKICAgICAgdGhpcy5nZXREYXRhU3RhdHVzID0gIlBFTkRJTkciOwogICAgfSwKICAgIHJlbW92ZUhvdXJSYW5nZTogZnVuY3Rpb24gcmVtb3ZlSG91clJhbmdlKCkgewogICAgICB0aGlzLmhvdXJ2YWx1ZSA9IG51bGw7CiAgICAgIHRoaXMuY3JlYXRlQ2hhcnREYXRhKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["StepCounts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div>\n            <b-form inline class=\"d-flex justify-content-between\">\n                <b-form-datepicker id=\"example-datepicker\" v-model=\"datevalue\" class=\"mb-2 w-50\"></b-form-datepicker>\n                \n                <div>\n                    Hour range:\n                    <b-form-spinbutton inline wrap min=\"0\" max=\"23\" v-model=\"hourvalue\"></b-form-spinbutton>\n                    <b-button class=\"ml-1\" variant=\"success\" @click=\"createChartData(hourvalue)\">v</b-button>\n                    <b-button class=\"ml-1\" @click=\"removeHourRange\">x</b-button>\n                </div>\n                \n            </b-form>\n        </div>\n\n        <div v-if=\"getDataStatus === 'PENDING'\">\n            <b-alert variant=\"info\" show>Getting data...</b-alert>\n        </div>\n        \n        <b-skeleton-wrapper :loading=\"getDataStatus === 'PENDING'\">\n            <template #loading>\n                <b-card>\n                <b-skeleton width=\"85%\"></b-skeleton>\n                <b-skeleton width=\"55%\"></b-skeleton>\n                <b-skeleton width=\"70%\"></b-skeleton>\n                </b-card>\n            </template>\n            <div class=\"h-50\">\n                <DataChart :key=\"chartkey\" :data=\"data\" :labels=\"labels\" :type=\"'steps'\"/>\n            </div>\n        </b-skeleton-wrapper>\n    </div>\n</template>\n\n\n<script>\nimport DataChart from '@/components/data/DataChart'\n\nconst miband_db_host='192.168.11.122'\nconst miband_db_port='5002'\n\nvar today = new Date()\n\nexport default {\n    components: { DataChart },\n    data(){\n        return {\n            activitydata: {},\n            wholedayData: {},\n            hourData: {},\n            labels: [],\n            data: [],\n            mode: -1,\n            datevalue: today.getFullYear() + '-' + String(today.getMonth()+1) + '-' + today.getDate(),\n            hourvalue: null,\n            chartkey: false,\n            getDataStatus: ''\n        }\n    },\n    mounted(){\n        this.getDatabyDate(this.datevalue)\n        this.getStepsData()\n        // this.createChartData()\n        // this.chartkey = !this.chartkey\n    },\n\n    watch: {\n        datevalue: function() {\n            this.getDatabyDate(this.datevalue)\n        },\n        getDataStatus: function() {\n            if(this.getDataStatus=='OK') {\n                this.getStepsData()\n                this.createChartData()                    \n            }\n        },\n        data: function() {\n            this.chartkey = !this.chartkey\n        },\n    },\n\n    methods: {\n        getStepsData() {\n            var logs = this.activitydata\n            var hourData = {}\n\n            for(var i in logs) {\n                var timestamp = logs[i].timestamp\n                var tmp = new Date(timestamp)\n                var hour = tmp.getHours()\n                var minute = tmp.getMinutes()\n                // dataOfHour[\"asd\"] = \"asd\"\n                if(hourData[String(hour)]==undefined){\n                    hourData[String(hour)] = {}\n                    hourData[String(hour)]['sum'] = 0\n                }\n                var steps = logs[i].steps\n                hourData[String(hour)][String(minute)] = steps\n                hourData[String(hour)]['sum']+=steps\n            }\n\n            var wholedayData = {}\n            for(var h=0; h<24; h++){\n                if(hourData[h]!=undefined)\n                    wholedayData[h] = hourData[h]['sum']\n                else  wholedayData[h] = undefined\n            }\n            this.wholedayData = wholedayData\n            this.hourData = hourData\n        },\n\n        createChartData(mode) {\n            this.labels = []\n            this.data = []\n            var h\n            if(mode==null) {\n                for(h=0; h<24; h++) {\n                    this.labels.push(String(h)+':00')\n                    this.data.push(this.wholedayData[h])\n                }\n            }\n            else {\n                h = mode\n                var minute\n                for(var m=0; m<60; m++) {\n                    if (String(m).length<2) {\n                        minute = '0'+String(m)\n                    }\n                    else minute = m\n                    this.labels.push(String(h)+':'+String(minute))\n                    if(this.hourData[h]!=undefined){\n                        var steps = this.hourData[h][m]\n                        this.data.push(steps)\n                    }\n                        \n                }\n            }\n\n        },\n\n        async getDataByTimeApiCall(start, end) {\n            const bandid = this.$session.get('miband').id\n            try {\n                const response = await fetch(`http://${miband_db_host}:${miband_db_port}/getlogsbytime/${bandid}`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    'start': start,\n                    'end': end\n                    }),\n                headers: { 'Content-type': 'application/json; charset=UTF-8' },\n                })\n                \n                const result = await response.json()\n                if(result['get-logs-result']==='succeeded')\n                    return result['logs']\n                return false\n            } catch (error) {\n                // do something with `error`\n            }\n        },\n\n        getDatabyDate(inputdatestr) {\n            var date = new Date(inputdatestr)\n            var day, month, year, datestr, startstr, endstr\n            day = date.getDate()\n            month = date.getMonth()+1\n            year = date.getFullYear()\n            datestr = day + '.' + month + '.' + year\n            startstr = datestr + ' - 0:00'\n            endstr = datestr + ' - 23:59'\n            this.getDataByTimeApiCall(startstr, endstr).then((result)=>{\n                this.activitydata  = result \n                this.getDataStatus = \"OK\"\n            })\n            this.getDataStatus = \"PENDING\"\n\n        },\n\n        removeHourRange(){\n            this.hourvalue = null\n            this.createChartData()\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components/data"}]}